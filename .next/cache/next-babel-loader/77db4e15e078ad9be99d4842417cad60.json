{"ast":null,"code":"var _jsxFileName = \"/Users/dong/CapstonProject/pages/testPage.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport \"../styles/styles.js\";\nimport Head from \"next/head\";\nimport { Global } from \"../styles/styles.js\";\nimport \"antd/dist/antd.css\";\nimport AppLayout from \"../component/Layout/AppLayout.js\";\nimport Link from \"next/link\";\nimport { VerticalGridLines, HorizontalGridLines, XYPlot, LineSeries, XAxis, YAxis, Crosshair } from \"react-vis\";\nimport \"react-vis/dist/style.css\";\n\nfunction testPage({\n  Component,\n  pageProps,\n  children\n}) {\n  const data = [{\n    x: 0,\n    y: 8\n  }, {\n    x: 1,\n    y: 5\n  }, {\n    x: 2,\n    y: 4\n  }, {\n    x: 3,\n    y: 9\n  }, {\n    x: 4,\n    y: 34\n  }, {\n    x: 5,\n    y: 7\n  }, {\n    x: 6,\n    y: 6\n  }, {\n    x: 7,\n    y: 3\n  }, {\n    x: 8,\n    y: 2\n  }, {\n    x: 9,\n    y: 0\n  }];\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    crosshairValue: []\n  });\n  const {\n    0: index,\n    1: setIndex\n  } = useState();\n\n  const handleMouseOver = () => {\n    console.log('qqqq');\n    setState({\n      crosshairValue: []\n    });\n    setIndex(0);\n  };\n\n  const qq = (value, {\n    index\n  }) => {\n    console.log(value);\n    console.log('aa', index);\n    setIndex(index);\n    setState({\n      crosshairValue: data.map(d => d)\n    });\n    console.log('ha', state);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(XYPlot, {\n    height: 300,\n    width: 300,\n    onMouseLeave: handleMouseOver,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, __jsx(VerticalGridLines, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), __jsx(HorizontalGridLines, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), __jsx(XAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), __jsx(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), __jsx(LineSeries, {\n    data: data,\n    onNearestX: qq,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), __jsx(Crosshair, {\n    values: state.crosshairValue,\n    className: 'test-class-name',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    style: {\n      background: 'gray',\n      width: 100,\n      height: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"dong\"), __jsx(\"div\", {\n    style: {\n      fontSize: 20,\n      marginLeft: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, index && state.crosshairValue[index].y)))));\n}\n\nexport default testPage;","map":{"version":3,"sources":["/Users/dong/CapstonProject/pages/testPage.js"],"names":["React","useState","Head","Global","AppLayout","Link","VerticalGridLines","HorizontalGridLines","XYPlot","LineSeries","XAxis","YAxis","Crosshair","testPage","Component","pageProps","children","data","x","y","state","setState","crosshairValue","index","setIndex","handleMouseOver","console","log","qq","value","map","d","background","width","height","fontSize","marginLeft"],"mappings":"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","sourcesContent":["\nimport React,{useState} from 'react'\nimport \"../styles/styles.js\";\nimport Head from \"next/head\";\nimport { Global } from \"../styles/styles.js\";\nimport \"antd/dist/antd.css\";\nimport AppLayout from \"../component/Layout/AppLayout.js\";\nimport Link from \"next/link\";\nimport {\n    VerticalGridLines,\n    HorizontalGridLines,\n    XYPlot,\n    LineSeries,\n    XAxis,\n    YAxis,\n    Crosshair\n  } from \"react-vis\";\n  import \"react-vis/dist/style.css\";\n\nfunction testPage({ Component, pageProps, children }) {\n    const data = [\n        { x: 0, y: 8 },\n        { x: 1, y: 5 },\n        { x: 2, y: 4 },\n        { x: 3, y: 9 },\n        { x: 4, y: 34 },\n        { x: 5, y: 7 },\n        { x: 6, y: 6 },\n        { x: 7, y: 3 },\n        { x: 8, y: 2 },\n        { x: 9, y: 0 }\n      ];\n\n    const [state,setState]=useState({\n        crosshairValue:[]\n    })\n    const [index,setIndex]=useState()\n\n    const handleMouseOver=()=>{\n        console.log('qqqq')\n        setState({crosshairValue:[]})\n        setIndex(0)\n    }\n    const qq=(value,{index})=>{\n        console.log(value)\n        console.log('aa',index)\n        setIndex(index)\n\n        setState({crosshairValue:data.map(d=>d)})\n        console.log('ha',state)\n    }\n\n    \n    \n      \n  return (\n    <>\n    <XYPlot height={300} width={300} onMouseLeave={handleMouseOver}>\n          <VerticalGridLines />\n          <HorizontalGridLines />\n          <XAxis />\n          <YAxis />\n          <LineSeries data={data} onNearestX={qq} />\n          <Crosshair\n          values={state.crosshairValue}\n          className={'test-class-name'}\n        >\n            <div style={{background:'gray',width:100,height:100}}>\n                <h3>dong</h3>\n                <div style={{fontSize:20,marginLeft:20}}>{index && state.crosshairValue[index].y}</div>\n            </div>\n\n            </Crosshair>\n        </XYPlot>\n    \n    \n  </>\n);\n}\n\nexport default testPage\n"]},"metadata":{},"sourceType":"module"}