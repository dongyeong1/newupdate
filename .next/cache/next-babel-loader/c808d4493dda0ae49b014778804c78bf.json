{"ast":null,"code":"import { all, call, fork, put, takeLatest, take } from 'redux-saga/effects';\nimport { LOGIN_FAIL, LOGIN_REQUEST, LOGIN_SUCCESS, LOGOUT_REQUEST, LOGOUT_SUCCESS, LOGOUT_FAIL, SIGNUP_REQUEST, SIGNUP_SUCCESS, SIGNUP_FAIL, FOLLOWING_SUCCESS, FOLLOWING_REQUEST, FOLLOWING_FAIL, UNFOLLOWING_REQUEST, UNFOLLOWING_SUCCESS, UNFOLLOWING_FAIL } from '../reducers/user';\nimport axios from 'axios';\n\nfunction logInAPI(data) {// return axios.post('http://3.35.239.14/api/login',data)\n}\n\nfunction* login(action) {\n  // const result =yield call(logInAPI,action.data)\n  // console.log('rrrrrrrrrrr',result)\n  try {\n    yield put({\n      type: LOGIN_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield {\n      type: LOGIN_FAIL,\n      data: 'error'\n    };\n  }\n}\n\nfunction logOutAPI(data) {// return axios.post('/logout',data)\n}\n\nfunction* logout() {\n  try {\n    // yield call(logOutAPI)\n    yield put({\n      type: LOGOUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOGOUT_FAIL,\n      error: 'error'\n    });\n  }\n}\n\nfunction signupAPI(data) {// return axios.post('/signup',data)\n}\n\nfunction* signup(action) {\n  try {\n    // const result=yield call(signupAPI,action.data)\n    yield put({\n      type: SIGNUP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGNUP_FAIL,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI(data) {// return axios.post('/signup',data)\n}\n\nfunction* following(action) {\n  try {\n    // const result=yield call(followAPI,action.data)\n    yield put({\n      type: FOLLOWING_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOWING_FAIL,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI(data) {// return axios.post('/signup',data)\n}\n\nfunction* unfollowing(action) {\n  try {\n    // const result=yield call(unfollowAPI,action.data)\n    yield put({\n      type: UNFOLLOWING_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOWING_FAIL,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOGIN_REQUEST, login);\n}\n\nfunction* watchLogout() {\n  yield takeLatest(LOGOUT_REQUEST, logout);\n}\n\nfunction* watchSignup() {\n  yield takeLatest(SIGNUP_REQUEST, signup);\n}\n\nfunction* watchFollowing() {\n  yield takeLatest(FOLLOWING_REQUEST, following);\n}\n\nfunction* watchUnFollowing() {\n  yield takeLatest(UNFOLLOWING_REQUEST, unfollowing);\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchLogin), fork(watchLogout), fork(watchSignup), fork(watchFollowing), fork(watchUnFollowing)]);\n}","map":{"version":3,"sources":["/Users/dong/CapstonProject/sagas/user.js"],"names":["all","call","fork","put","takeLatest","take","LOGIN_FAIL","LOGIN_REQUEST","LOGIN_SUCCESS","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAIL","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAIL","FOLLOWING_SUCCESS","FOLLOWING_REQUEST","FOLLOWING_FAIL","UNFOLLOWING_REQUEST","UNFOLLOWING_SUCCESS","UNFOLLOWING_FAIL","axios","logInAPI","data","login","action","type","err","logOutAPI","logout","error","signupAPI","signup","response","followAPI","following","unfollowAPI","unfollowing","watchLogin","watchLogout","watchSignup","watchFollowing","watchUnFollowing","rootSaga"],"mappings":"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","sourcesContent":["\nimport { all,call,fork,put,takeLatest, take} from 'redux-saga/effects'\nimport {LOGIN_FAIL, LOGIN_REQUEST,LOGIN_SUCCESS,LOGOUT_REQUEST, \n    LOGOUT_SUCCESS,LOGOUT_FAIL, SIGNUP_REQUEST,SIGNUP_SUCCESS,SIGNUP_FAIL,\n    FOLLOWING_SUCCESS,FOLLOWING_REQUEST,FOLLOWING_FAIL,UNFOLLOWING_REQUEST,\n    UNFOLLOWING_SUCCESS,UNFOLLOWING_FAIL} from '../reducers/user'\nimport axios from 'axios'\n\nfunction logInAPI(data){\n    // return axios.post('http://3.35.239.14/api/login',data)\n}\n\nfunction* login(action){\n// const result =yield call(logInAPI,action.data)\n// console.log('rrrrrrrrrrr',result)\ntry{\nyield put({\n    type:LOGIN_SUCCESS,\n    data:action.data\n})\n}catch(err){\n    yield({\n        type:LOGIN_FAIL,\n        data:'error'\n    })\n}\n} \n\n\nfunction logOutAPI(data){\n    // return axios.post('/logout',data)\n}\n\nfunction* logout(){\n    try{\n        // yield call(logOutAPI)\n        yield put({\n            type:LOGOUT_SUCCESS,\n        })\n    }catch(err){\n        yield put({\n            type:LOGOUT_FAIL,\n            error:'error'\n             \n        })\n    }\n} \n\nfunction signupAPI(data){\n// return axios.post('/signup',data)\n}\n\nfunction* signup(action){\n\n    try{\n        // const result=yield call(signupAPI,action.data)\n        \n          yield put({\n              type:SIGNUP_SUCCESS,\n          })\n      }catch(err){\n          yield put({\n              type:SIGNUP_FAIL,\n              error:err.response.data,\n               \n          })\n      }\n}\n\n\nfunction followAPI(data){\n    // return axios.post('/signup',data)\n    }\n    \n    function* following(action){\n    \n        try{\n            // const result=yield call(followAPI,action.data)\n            \n              yield put({\n                  type:FOLLOWING_SUCCESS,\n                  data:action.data\n              })\n          }catch(err){\n              yield put({\n                  type:FOLLOWING_FAIL,\n                  error:err.response.data,\n                   \n              })\n          }\n    }\n\n\n    function unfollowAPI(data){\n        // return axios.post('/signup',data)\n        }\n        \n        function* unfollowing(action){\n        \n            try{\n                // const result=yield call(unfollowAPI,action.data)\n                \n                  yield put({\n                      type:UNFOLLOWING_SUCCESS,\n                      data:action.data\n                  })\n              }catch(err){\n                  yield put({\n                      type:UNFOLLOWING_FAIL,\n                      error:err.response.data,\n                       \n                  })\n              }\n        }\n        \n    \n\n\n\nfunction* watchLogin(){\n    yield takeLatest(LOGIN_REQUEST,login)\n}\n\nfunction* watchLogout(){\n    yield takeLatest(LOGOUT_REQUEST,logout)\n}\nfunction* watchSignup(){\n    yield takeLatest(SIGNUP_REQUEST,signup)\n}\nfunction* watchFollowing(){\n    yield takeLatest(FOLLOWING_REQUEST,following)\n}\nfunction* watchUnFollowing(){\n    yield takeLatest(UNFOLLOWING_REQUEST,unfollowing)\n}\n\nexport default function* rootSaga(){\n\n    yield all([\n        fork(watchLogin),\n        fork(watchLogout),\n        fork(watchSignup),\n        fork(watchFollowing),\n        fork(watchUnFollowing)\n    ])\n\n}"]},"metadata":{},"sourceType":"module"}