{"ast":null,"code":"var _jsxFileName = \"/Users/dong/CapstonProject/pages/location.js\";\nvar __jsx = React.createElement;\nimport { ge } from 'faker/lib/locales';\nimport React, { useEffect } from 'react';\nimport useGeolocation from 'react-hook-geolocation';\n\nfunction location() {\n  const load = () => {\n    if (!(\"geolocation\" in navigator)) {\n      this.textContent = \"Geolocation is not available.\";\n      return;\n    }\n\n    this.textContent = \"Locating...\"; // get position\n\n    navigator.geolocation.getCurrentPosition(pos => {\n      console.log(pos.coords.latitude, pos.coords.longitude);\n    }, err => {\n      this.textContent = err.message;\n    });\n  };\n\n  useEffect(() => {\n    load();\n  }, []);\n  const geolocation = useGeolocation({\n    enableHighAccuracy: true,\n    maximumAge: 15000,\n    timeout: 12000\n  });\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default location;","map":{"version":3,"sources":["/Users/dong/CapstonProject/pages/location.js"],"names":["ge","React","useEffect","useGeolocation","location","load","navigator","textContent","geolocation","getCurrentPosition","pos","console","log","coords","latitude","longitude","err","message","enableHighAccuracy","maximumAge","timeout"],"mappings":";;AAAA,SAASA,EAAT,QAAmB,mBAAnB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA8B,OAA9B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;;AAEA,SAASC,QAAT,GAAoB;AAEhB,QAAMC,IAAI,GAAC,MAAI;AACX,QAAI,EAAE,iBAAiBC,SAAnB,CAAJ,EAAmC;AAC/B,WAAKC,WAAL,GAAmB,+BAAnB;AACA;AACD;;AACD,SAAKA,WAAL,GAAmB,aAAnB,CALS,CAOT;;AACAD,IAAAA,SAAS,CAACE,WAAV,CAAsBC,kBAAtB,CACGC,GAAD,IAAS;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,MAAJ,CAAWC,QAAvB,EAAgCJ,GAAG,CAACG,MAAJ,CAAWE,SAA3C;AAEH,KAJH,EAKGC,GAAD,IAAS;AACP,WAAKT,WAAL,GAAmBS,GAAG,CAACC,OAAvB;AACD,KAPH;AASL,GAjBD;;AAoBAf,EAAAA,SAAS,CAAC,MAAI;AACdG,IAAAA,IAAI;AAEH,GAHQ,EAGP,EAHO,CAAT;AAIA,QAAMG,WAAW,GAAGL,cAAc,CAAC;AAC/Be,IAAAA,kBAAkB,EAAE,IADW;AAE/BC,IAAAA,UAAU,EAAE,KAFmB;AAG/BC,IAAAA,OAAO,EAAE;AAHsB,GAAD,CAAlC;AAMF,SAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF;AASD;;AAED,eAAehB,QAAf","sourcesContent":["import { ge } from 'faker/lib/locales'\nimport React ,{useEffect}from 'react'\nimport useGeolocation from 'react-hook-geolocation'\n\nfunction location() {\n\n    const load=()=>{\n        if (!(\"geolocation\" in navigator)) {\n            this.textContent = \"Geolocation is not available.\";\n            return;\n          }\n          this.textContent = \"Locating...\";\n    \n          // get position\n          navigator.geolocation.getCurrentPosition(\n            (pos) => {\n                console.log(pos.coords.latitude,pos.coords.longitude)\n              \n            },\n            (err) => {\n              this.textContent = err.message;\n            }\n          );\n    }\n\n\n    useEffect(()=>{\n    load()\n\n    },[])\n    const geolocation = useGeolocation({\n        enableHighAccuracy: true,\n        maximumAge: 15000,\n        timeout: 12000,\n      });\n\n  return (\n\n     \n    <div>\n{/* \n        {geolocation.latitude}\n        {geolocation.longitude} */}\n    </div>\n  )\n}\n\nexport default location"]},"metadata":{},"sourceType":"module"}