{"ast":null,"code":"var _jsxFileName = \"/Users/dong/CapstonProject/pages/location.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { ge } from 'faker/lib/locales';\nimport React, { useEffect } from 'react'; // import useGeolocation from 'react-hook-geolocation'\n\nfunction location() {\n  _s();\n\n  var _this = this;\n\n  var load = function load() {\n    if (!(\"geolocation\" in navigator)) {\n      _this.textContent = \"Geolocation is not available.\";\n      return;\n    }\n\n    _this.textContent = \"Locating...\"; // get position\n\n    navigator.geolocation.getCurrentPosition(function (pos) {\n      console.log(pos.coords.latitude, pos.coords.longitude);\n    }, function (err) {\n      _this.textContent = err.message;\n    });\n  };\n\n  useEffect(function () {\n    load();\n  }, []);\n  var geolocation = useGeolocation({\n    enableHighAccuracy: true,\n    maximumAge: 15000,\n    timeout: 12000\n  });\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  });\n}\n\n_s(location, \"SF8uvBQOZP9IocL3hfLJAUbAk5A=\", true);\n\nexport default location;","map":{"version":3,"sources":["/Users/dong/CapstonProject/pages/location.js"],"names":["ge","React","useEffect","location","load","navigator","textContent","geolocation","getCurrentPosition","pos","console","log","coords","latitude","longitude","err","message","useGeolocation","enableHighAccuracy","maximumAge","timeout"],"mappings":";;;;AAAA,SAASA,EAAT,QAAmB,mBAAnB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA8B,OAA9B,C,CACA;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAAA;;AAEhB,MAAMC,IAAI,GAAC,SAALA,IAAK,GAAI;AACX,QAAI,EAAE,iBAAiBC,SAAnB,CAAJ,EAAmC;AAC/B,MAAA,KAAI,CAACC,WAAL,GAAmB,+BAAnB;AACA;AACD;;AACD,IAAA,KAAI,CAACA,WAAL,GAAmB,aAAnB,CALS,CAOT;;AACAD,IAAAA,SAAS,CAACE,WAAV,CAAsBC,kBAAtB,CACE,UAACC,GAAD,EAAS;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,MAAJ,CAAWC,QAAvB,EAAgCJ,GAAG,CAACG,MAAJ,CAAWE,SAA3C;AAEH,KAJH,EAKE,UAACC,GAAD,EAAS;AACP,MAAA,KAAI,CAACT,WAAL,GAAmBS,GAAG,CAACC,OAAvB;AACD,KAPH;AASL,GAjBD;;AAoBAd,EAAAA,SAAS,CAAC,YAAI;AACdE,IAAAA,IAAI;AAEH,GAHQ,EAGP,EAHO,CAAT;AAIA,MAAMG,WAAW,GAAGU,cAAc,CAAC;AAC/BC,IAAAA,kBAAkB,EAAE,IADW;AAE/BC,IAAAA,UAAU,EAAE,KAFmB;AAG/BC,IAAAA,OAAO,EAAE;AAHsB,GAAD,CAAlC;AAMF,SAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF;AASD;;GAzCQjB,Q;;AA2CT,eAAeA,QAAf","sourcesContent":["import { ge } from 'faker/lib/locales'\nimport React ,{useEffect}from 'react'\n// import useGeolocation from 'react-hook-geolocation'\n\nfunction location() {\n\n    const load=()=>{\n        if (!(\"geolocation\" in navigator)) {\n            this.textContent = \"Geolocation is not available.\";\n            return;\n          }\n          this.textContent = \"Locating...\";\n    \n          // get position\n          navigator.geolocation.getCurrentPosition(\n            (pos) => {\n                console.log(pos.coords.latitude,pos.coords.longitude)\n              \n            },\n            (err) => {\n              this.textContent = err.message;\n            }\n          );\n    }\n\n\n    useEffect(()=>{\n    load()\n\n    },[])\n    const geolocation = useGeolocation({\n        enableHighAccuracy: true,\n        maximumAge: 15000,\n        timeout: 12000,\n      });\n\n  return (\n\n     \n    <div>\n{/* \n        {geolocation.latitude}\n        {geolocation.longitude} */}\n    </div>\n  )\n}\n\nexport default location"]},"metadata":{},"sourceType":"module"}