{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport shortid from \"shortid\";\nimport produce from \"immer\";\nimport faker from 'faker';\nexport var initialStates = {\n  searchMap: [],\n  createMap: [],\n  mapRank: [],\n  myMapRank: null,\n  loadMap: null,\n  myMap: null,\n  Rankloading: false,\n  RankDone: false,\n  RankError: null,\n  myRankloading: false,\n  myRankDone: false,\n  myRankError: null,\n  movingmapLoading: false,\n  movingmapDone: false,\n  movingmapError: null,\n  runningmapLoading: false,\n  runningmapDone: false,\n  runningmapError: null,\n  bikemapLoading: false,\n  bikemapDone: false,\n  bikemapError: null,\n  searchmapLoading: false,\n  searchmapDone: false,\n  searchmapError: null,\n  loadMyLocationLoading: false,\n  loadMyLocationDone: false,\n  loadMyLocationError: null,\n  loadmapLoading: false,\n  loadmapDone: false,\n  loadmapError: null,\n  loadCreatemapLoading: false,\n  loadCreatemapDone: false,\n  loadCreatemapError: null,\n  addmapLoading: false,\n  addmapDone: false,\n  addmapError: null,\n  addTrackLoading: false,\n  addTrackDone: false,\n  addTrackError: null\n};\nexport var ADD_TRACK_REQUEST = 'ADD_TRACK_REQUEST';\nexport var ADD_TRACK_SUCCESS = 'ADD_TRACK_SUCCESS';\nexport var ADD_TRACK_FAILURE = 'ADD_TRACK_FAILURE';\nexport var SEARCH_MAP_REQUEST = 'SEARCH_MAP_REQUEST';\nexport var SEARCH_MAP_SUCCESS = 'SEARCH_MAP_SUCCESS';\nexport var SEARCH_MAP_FAILURE = 'SEARCH_MAP_FAILURE';\nexport var LOAD_MAP_REQUEST = 'LOAD_MAP_REQUEST';\nexport var LOAD_MAP_SUCCESS = 'LOAD_MAP_SUCCESS';\nexport var LOAD_MAP_FAILURE = 'LOAD_MAP_FAILURE';\nexport var ADD_MYMAP_REQUEST = 'ADD_MYMAP_REQUEST';\nexport var ADD_MYMAP_SUCCESS = 'ADD_MYMAP_SUCCESS';\nexport var ADD_MYMAP_FAILURE = 'ADD_MYMAP_FAILURE';\nexport var MOVING_MAP_REQUEST = 'MOVING_MAP_REQUEST';\nexport var MOVING_MAP_SUCCESS = 'MOVING_MAP_SUCCESS';\nexport var MOVING_MAP_FAILURE = 'MOVING_MAP_FAILURE';\nexport var BIKE_MAP_REQUEST = 'BIKE_MAP_REQUEST';\nexport var BIKE_MAP_SUCCESS = 'BIKE_MAP_SUCCESS';\nexport var BIKE_MAP_FAILURE = 'BIKE_MAP_FAILURE';\nexport var RUNNING_MAP_REQUEST = 'RUNNING_MAP_REQUEST';\nexport var RUNNING_MAP_SUCCESS = 'RUNNING_MAP_SUCCESS';\nexport var RUNNING_MAP_FAILURE = 'RUNNING_MAP_FAILURE';\nexport var LOAD_CREATEMAP_REQUEST = 'LOAD_CREATEMAP_REQUEST';\nexport var LOAD_CREATEMAP_SUCCESS = 'LOAD_CREATEMAP_SUCCESS';\nexport var LOAD_CREATEMAP_FAILURE = 'LOAD_CREATEMAP_FAILURE';\nexport var LOAD_MY_LOCATION_REQUEST = 'LOAD_MY_LOCATION_REQUEST';\nexport var LOAD_MY_LOCATION_SUCCESS = 'LOAD_MY_LOCATION_SUCCESS';\nexport var LOAD_MY_LOCATION_FAILURE = 'LOAD_MY_LOCATION_FAILURE';\nexport var LOAD_TRACK_RANK_REQUEST = 'LOAD_TRACK_RANK_REQUEST';\nexport var LOAD_TRACK_RANK_SUCCESS = 'LOAD_TRACK_RANK_SUCCESS';\nexport var LOAD_TRACK_RANK_FAILURE = 'LOAD_TRACK_RANK_FAILURE';\nexport var LOAD_TRACK_MYRANK_REQUEST = 'LOAD_TRACK_MYRANK_REQUEST';\nexport var LOAD_TRACK_MYRANK_SUCCESS = 'LOAD_TRACK_MYRANK_SUCCESS';\nexport var LOAD_TRACK_MYRANK_FAILURE = 'LOAD_TRACK_MYRANK_FAILURE';\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStates;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    var _draft$myMapRank;\n\n    switch (action.type) {\n      case LOAD_TRACK_MYRANK_REQUEST:\n        draft.myRankloading = true;\n        draft.myRankDone = false;\n        draft.myRankError = null;\n\n      case LOAD_TRACK_MYRANK_SUCCESS:\n        draft.myRankloading = false;\n        draft.myRankDone = true;\n\n        (_draft$myMapRank = draft.myMapRank).push.apply(_draft$myMapRank, _toConsumableArray(action.data));\n\n      case LOAD_TRACK_MYRANK_FAILURE:\n        draft.myRankloading = false, draft.myRankError = 'a';\n\n      case LOAD_TRACK_RANK_REQUEST:\n        draft.Rankloading = true;\n        draft.RankDone = false;\n        draft.RankError = null;\n\n      case LOAD_TRACK_RANK_SUCCESS:\n        draft.Rankloading = false;\n        draft.RankDone = true;\n        draft.mapRank = action.data;\n\n      case LOAD_TRACK_RANK_FAILURE:\n        draft.Rankloading = false, draft.RankError = 'a';\n\n      case SEARCH_MAP_REQUEST:\n        draft.searchmapLoading = true;\n        draft.searchmapDone = false;\n        draft.searchmapError = null;\n        break;\n\n      case SEARCH_MAP_SUCCESS:\n        draft.searchmapLoading = false;\n        draft.searchmapDone = true;\n        console.log('sss', action.data);\n        draft.searchMap = []; // dummyMap().map((m)=>[\n        //     draft.searchMap.push(m)\n        // ])\n\n        action.data.result.map(function (m) {\n          return [draft.searchMap.push(m)];\n        });\n        console.log('qqqqq', draft.searchMap); // draft.searchMap.unshift(dummyMap().map());\n\n        break;\n\n      case SEARCH_MAP_FAILURE:\n        draft.searchmapLoading = false;\n        draft.searchmapError = action.error;\n        break;\n\n      case MOVING_MAP_REQUEST:\n        draft.movingmapLoading = true;\n        draft.movingmapDone = false;\n        break;\n\n      case MOVING_MAP_SUCCESS:\n        draft.movingmapLoading = false;\n        draft.movingmapDone = true;\n        draft.searchMap = [];\n        action.data.result.map(function (m) {\n          return [draft.searchMap.push(m)];\n        });\n        break;\n\n      case MOVING_MAP_FAILURE:\n        draft.movingmapLoading = false;\n        draft.movingmapError = action.error;\n        break;\n\n      case BIKE_MAP_REQUEST:\n        draft.bikemapLoading = true;\n        draft.bikemapDone = false;\n        break;\n\n      case BIKE_MAP_SUCCESS:\n        draft.bikemapLoading = false;\n        draft.bikemapDone = true;\n        draft.searchMap = [];\n        action.data.result.map(function (m) {\n          return [draft.searchMap.push(m)];\n        });\n        break;\n\n      case BIKE_MAP_FAILURE:\n        draft.bikemapLoading = false;\n        draft.bikemapError = action.error;\n        break;\n\n      case RUNNING_MAP_REQUEST:\n        draft.runningmapLoading = true;\n        draft.runningmapDone = false;\n        break;\n\n      case RUNNING_MAP_SUCCESS:\n        draft.runningmapLoading = false;\n        draft.runningmapDone = true;\n        draft.searchMap = [];\n        action.data.result.map(function (m) {\n          return [draft.searchMap.push(m)];\n        });\n        break;\n\n      case RUNNING_MAP_FAILURE:\n        draft.runningmapLoading = false;\n        draft.runninmgmapError = action.error;\n        break;\n\n      case ADD_TRACK_REQUEST:\n        draft.addTrackLoading = true;\n        draft.addTrackDone = false;\n        break;\n\n      case ADD_TRACK_SUCCESS:\n        draft.addTrackLoading = false;\n        draft.addTrackDone = true;\n        break;\n\n      case ADD_TRACK_FAILURE:\n        draft.addTrackLoading = false;\n        draft.addTrackError = action.error;\n        break;\n\n      case LOAD_MAP_REQUEST:\n        draft.loadmapLoading = true;\n        draft.loadmapDone = false;\n        draft.loadmapError = null;\n        break;\n\n      case LOAD_MAP_SUCCESS:\n        draft.loadmapLoading = false;\n        draft.loadmapDone = true;\n        console.log('qwzxc', action.data);\n        draft.loadMap = action.data;\n        draft.loadMap.altitude = draft.loadMap.altitude.map(function (a, index) {\n          return {\n            x: index,\n            y: a\n          };\n        });\n        break;\n\n      case LOAD_MAP_FAILURE:\n        draft.loadmapLoading = false;\n        draft.loadmapError = action.error;\n        break;\n      //\n\n      case LOAD_MY_LOCATION_REQUEST:\n        draft.loadMyLocationLoading = true;\n        draft.loadMyLocationDone = false;\n        draft.loadMyLocationError = null;\n        break;\n\n      case LOAD_MY_LOCATION_SUCCESS:\n        draft.loadMyLocationLoading = false;\n        draft.loadMyLocationDone = true;\n        action.data.result.map(function (m) {\n          return [draft.searchMap.push(m)];\n        });\n        break;\n\n      case LOAD_MY_LOCATION_FAILURE:\n        draft.loadMyLocationLoading = false;\n        draft.loadMyLocationError = action.error;\n        break;\n      //\n\n      case LOAD_CREATEMAP_REQUEST:\n        draft.loadCreatemapLoading = true;\n        draft.loadCreatemapDone = false;\n        draft.loadCreatemapError = null;\n        break;\n\n      case LOAD_CREATEMAP_SUCCESS:\n        draft.loadCreatemapLoading = false;\n        draft.loadCreatemapDone = true;\n        draft.createMap = action.data;\n        draft.createMap.altitude = draft.createMap.altitude.map(function (a, index) {\n          return {\n            x: index,\n            y: a\n          };\n        });\n        break;\n\n      case LOAD_CREATEMAP_FAILURE:\n        draft.loadCreatemapLoading = false;\n        draft.loadCreatemapError = action.error;\n        break;\n\n      case ADD_MYMAP_REQUEST:\n        draft.addmapLoading = true;\n        draft.addmapDone = false;\n        draft.addmapError = null;\n        break;\n\n      case ADD_MYMAP_SUCCESS:\n        draft.addmapLoading = false;\n        draft.addmapDone = true;\n        break;\n\n      case ADD_MYMAP_FAILURE:\n        draft.addmapLoading = false;\n        draft.addmapError = action.error;\n        break;\n\n      default:\n        return state;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/dong/CapstonProject/reducers/map.js"],"names":["shortid","produce","faker","initialStates","searchMap","createMap","mapRank","myMapRank","loadMap","myMap","Rankloading","RankDone","RankError","myRankloading","myRankDone","myRankError","movingmapLoading","movingmapDone","movingmapError","runningmapLoading","runningmapDone","runningmapError","bikemapLoading","bikemapDone","bikemapError","searchmapLoading","searchmapDone","searchmapError","loadMyLocationLoading","loadMyLocationDone","loadMyLocationError","loadmapLoading","loadmapDone","loadmapError","loadCreatemapLoading","loadCreatemapDone","loadCreatemapError","addmapLoading","addmapDone","addmapError","addTrackLoading","addTrackDone","addTrackError","ADD_TRACK_REQUEST","ADD_TRACK_SUCCESS","ADD_TRACK_FAILURE","SEARCH_MAP_REQUEST","SEARCH_MAP_SUCCESS","SEARCH_MAP_FAILURE","LOAD_MAP_REQUEST","LOAD_MAP_SUCCESS","LOAD_MAP_FAILURE","ADD_MYMAP_REQUEST","ADD_MYMAP_SUCCESS","ADD_MYMAP_FAILURE","MOVING_MAP_REQUEST","MOVING_MAP_SUCCESS","MOVING_MAP_FAILURE","BIKE_MAP_REQUEST","BIKE_MAP_SUCCESS","BIKE_MAP_FAILURE","RUNNING_MAP_REQUEST","RUNNING_MAP_SUCCESS","RUNNING_MAP_FAILURE","LOAD_CREATEMAP_REQUEST","LOAD_CREATEMAP_SUCCESS","LOAD_CREATEMAP_FAILURE","LOAD_MY_LOCATION_REQUEST","LOAD_MY_LOCATION_SUCCESS","LOAD_MY_LOCATION_FAILURE","LOAD_TRACK_RANK_REQUEST","LOAD_TRACK_RANK_SUCCESS","LOAD_TRACK_RANK_FAILURE","LOAD_TRACK_MYRANK_REQUEST","LOAD_TRACK_MYRANK_SUCCESS","LOAD_TRACK_MYRANK_FAILURE","reducer","state","action","draft","type","push","data","console","log","result","map","m","error","runninmgmapError","altitude","a","index","x","y"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,OAAP,MAAqB,OAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,IAAMC,aAAa,GAAC;AACvBC,EAAAA,SAAS,EAAC,EADa;AAEvBC,EAAAA,SAAS,EAAC,EAFa;AAGvBC,EAAAA,OAAO,EAAC,EAHe;AAIvBC,EAAAA,SAAS,EAAC,IAJa;AAMvBC,EAAAA,OAAO,EAAC,IANe;AAOvBC,EAAAA,KAAK,EAAC,IAPiB;AASvBC,EAAAA,WAAW,EAAC,KATW;AAUvBC,EAAAA,QAAQ,EAAC,KAVc;AAWvBC,EAAAA,SAAS,EAAC,IAXa;AAYvBC,EAAAA,aAAa,EAAC,KAZS;AAavBC,EAAAA,UAAU,EAAC,KAbY;AAcvBC,EAAAA,WAAW,EAAC,IAdW;AAiBvBC,EAAAA,gBAAgB,EAAC,KAjBM;AAkBvBC,EAAAA,aAAa,EAAC,KAlBS;AAmBvBC,EAAAA,cAAc,EAAC,IAnBQ;AAoBvBC,EAAAA,iBAAiB,EAAC,KApBK;AAqBvBC,EAAAA,cAAc,EAAC,KArBQ;AAsBvBC,EAAAA,eAAe,EAAC,IAtBO;AAuBvBC,EAAAA,cAAc,EAAC,KAvBQ;AAwBvBC,EAAAA,WAAW,EAAC,KAxBW;AAyBvBC,EAAAA,YAAY,EAAC,IAzBU;AA0BxBC,EAAAA,gBAAgB,EAAC,KA1BO;AA2BxBC,EAAAA,aAAa,EAAC,KA3BU;AA4BxBC,EAAAA,cAAc,EAAC,IA5BS;AA6BxBC,EAAAA,qBAAqB,EAAC,KA7BE;AA8BxBC,EAAAA,kBAAkB,EAAC,KA9BK;AA+BxBC,EAAAA,mBAAmB,EAAC,IA/BI;AAgCxBC,EAAAA,cAAc,EAAC,KAhCS;AAiCxBC,EAAAA,WAAW,EAAC,KAjCY;AAkCxBC,EAAAA,YAAY,EAAC,IAlCW;AAmCxBC,EAAAA,oBAAoB,EAAC,KAnCG;AAoCxBC,EAAAA,iBAAiB,EAAC,KApCM;AAqCxBC,EAAAA,kBAAkB,EAAC,IArCK;AAsCxBC,EAAAA,aAAa,EAAC,KAtCU;AAuCxBC,EAAAA,UAAU,EAAC,KAvCa;AAwCxBC,EAAAA,WAAW,EAAC,IAxCY;AAyCxBC,EAAAA,eAAe,EAAC,KAzCQ;AA0CxBC,EAAAA,YAAY,EAAC,KA1CW;AA2CxBC,EAAAA,aAAa,EAAC;AA3CU,CAApB;AA8CP,OAAO,IAAMC,iBAAiB,GAAC,mBAAxB;AACP,OAAO,IAAMC,iBAAiB,GAAC,mBAAxB;AACP,OAAO,IAAMC,iBAAiB,GAAC,mBAAxB;AAEP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AAEP,OAAO,IAAMC,gBAAgB,GAAE,kBAAxB;AACP,OAAO,IAAMC,gBAAgB,GAAE,kBAAxB;AACP,OAAO,IAAMC,gBAAgB,GAAE,kBAAxB;AAEP,OAAO,IAAMC,iBAAiB,GAAC,mBAAxB;AACP,OAAO,IAAMC,iBAAiB,GAAC,mBAAxB;AACP,OAAO,IAAMC,iBAAiB,GAAC,mBAAxB;AAEP,OAAO,IAAMC,kBAAkB,GAAC,oBAAzB;AACP,OAAO,IAAMC,kBAAkB,GAAC,oBAAzB;AACP,OAAO,IAAMC,kBAAkB,GAAC,oBAAzB;AAEP,OAAO,IAAMC,gBAAgB,GAAC,kBAAvB;AACP,OAAO,IAAMC,gBAAgB,GAAC,kBAAvB;AACP,OAAO,IAAMC,gBAAgB,GAAC,kBAAvB;AAEP,OAAO,IAAMC,mBAAmB,GAAC,qBAA1B;AACP,OAAO,IAAMC,mBAAmB,GAAC,qBAA1B;AACP,OAAO,IAAMC,mBAAmB,GAAC,qBAA1B;AAEP,OAAO,IAAMC,sBAAsB,GAAC,wBAA7B;AACP,OAAO,IAAMC,sBAAsB,GAAC,wBAA7B;AACP,OAAO,IAAMC,sBAAsB,GAAC,wBAA7B;AAEP,OAAO,IAAMC,wBAAwB,GAAC,0BAA/B;AACP,OAAO,IAAMC,wBAAwB,GAAC,0BAA/B;AACP,OAAO,IAAMC,wBAAwB,GAAC,0BAA/B;AAEP,OAAO,IAAMC,uBAAuB,GAAC,yBAA9B;AACP,OAAO,IAAMC,uBAAuB,GAAC,yBAA9B;AACP,OAAO,IAAMC,uBAAuB,GAAC,yBAA9B;AAEP,OAAO,IAAMC,yBAAyB,GAAC,2BAAhC;AACP,OAAO,IAAMC,yBAAyB,GAAC,2BAAhC;AACP,OAAO,IAAMC,yBAAyB,GAAC,2BAAhC;;AAKP,IAAMC,OAAO,GAAC,SAARA,OAAQ,GAA8B;AAAA,MAA7BC,KAA6B,uEAAvB1E,aAAuB;AAAA,MAAT2E,MAAS;AACxC,SAAO7E,OAAO,CAAC4E,KAAD,EAAO,UAACE,KAAD,EAAS;AAAA;;AAC1B,YAAOD,MAAM,CAACE,IAAd;AACI,WAAKP,yBAAL;AACIM,QAAAA,KAAK,CAAClE,aAAN,GAAoB,IAApB;AACAkE,QAAAA,KAAK,CAACjE,UAAN,GAAiB,KAAjB;AACAiE,QAAAA,KAAK,CAAChE,WAAN,GAAkB,IAAlB;;AACJ,WAAK2D,yBAAL;AACIK,QAAAA,KAAK,CAAClE,aAAN,GAAoB,KAApB;AACAkE,QAAAA,KAAK,CAACjE,UAAN,GAAiB,IAAjB;;AACA,4BAAAiE,KAAK,CAACxE,SAAN,EAAgB0E,IAAhB,4CAAwBH,MAAM,CAACI,IAA/B;;AACJ,WAAKP,yBAAL;AACII,QAAAA,KAAK,CAAClE,aAAN,GAAoB,KAApB,EACAkE,KAAK,CAAChE,WAAN,GAAkB,GADlB;;AAIJ,WAAKuD,uBAAL;AACIS,QAAAA,KAAK,CAACrE,WAAN,GAAkB,IAAlB;AACAqE,QAAAA,KAAK,CAACpE,QAAN,GAAe,KAAf;AACAoE,QAAAA,KAAK,CAACnE,SAAN,GAAgB,IAAhB;;AACJ,WAAK2D,uBAAL;AACIQ,QAAAA,KAAK,CAACrE,WAAN,GAAkB,KAAlB;AACAqE,QAAAA,KAAK,CAACpE,QAAN,GAAe,IAAf;AACAoE,QAAAA,KAAK,CAACzE,OAAN,GAAcwE,MAAM,CAACI,IAArB;;AACJ,WAAKV,uBAAL;AACIO,QAAAA,KAAK,CAACrE,WAAN,GAAkB,KAAlB,EACAqE,KAAK,CAACnE,SAAN,GAAgB,GADhB;;AAEJ,WAAKkC,kBAAL;AACIiC,QAAAA,KAAK,CAACtD,gBAAN,GAAyB,IAAzB;AACAsD,QAAAA,KAAK,CAACrD,aAAN,GAAsB,KAAtB;AACAqD,QAAAA,KAAK,CAACpD,cAAN,GAAuB,IAAvB;AACA;;AACJ,WAAKoB,kBAAL;AACIgC,QAAAA,KAAK,CAACtD,gBAAN,GAAyB,KAAzB;AACAsD,QAAAA,KAAK,CAACrD,aAAN,GAAsB,IAAtB;AACAyD,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBN,MAAM,CAACI,IAAzB;AACAH,QAAAA,KAAK,CAAC3E,SAAN,GAAgB,EAAhB,CAJJ,CAKI;AACA;AACA;;AACA0E,QAAAA,MAAM,CAACI,IAAP,CAAYG,MAAZ,CAAmBC,GAAnB,CAAuB,UAACC,CAAD;AAAA,iBAAK,CACxBR,KAAK,CAAC3E,SAAN,CAAgB6E,IAAhB,CAAqBM,CAArB,CADwB,CAAL;AAAA,SAAvB;AAGAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBL,KAAK,CAAC3E,SAA1B,EAXJ,CAYA;;AACA;;AACA,WAAK4C,kBAAL;AACI+B,QAAAA,KAAK,CAACtD,gBAAN,GAAyB,KAAzB;AACAsD,QAAAA,KAAK,CAACpD,cAAN,GAAuBmD,MAAM,CAACU,KAA9B;AACA;;AAGJ,WAAKjC,kBAAL;AACIwB,QAAAA,KAAK,CAAC/D,gBAAN,GAAyB,IAAzB;AACA+D,QAAAA,KAAK,CAAC9D,aAAN,GAAsB,KAAtB;AACA;;AACJ,WAAKuC,kBAAL;AACIuB,QAAAA,KAAK,CAAC/D,gBAAN,GAAyB,KAAzB;AACA+D,QAAAA,KAAK,CAAC9D,aAAN,GAAsB,IAAtB;AACA8D,QAAAA,KAAK,CAAC3E,SAAN,GAAgB,EAAhB;AAEA0E,QAAAA,MAAM,CAACI,IAAP,CAAYG,MAAZ,CAAmBC,GAAnB,CAAuB,UAACC,CAAD;AAAA,iBAAK,CACxBR,KAAK,CAAC3E,SAAN,CAAgB6E,IAAhB,CAAqBM,CAArB,CADwB,CAAL;AAAA,SAAvB;AAGA;;AACJ,WAAK9B,kBAAL;AACIsB,QAAAA,KAAK,CAAC/D,gBAAN,GAAyB,KAAzB;AACA+D,QAAAA,KAAK,CAAC7D,cAAN,GAAuB4D,MAAM,CAACU,KAA9B;AACA;;AAGJ,WAAK9B,gBAAL;AAEIqB,QAAAA,KAAK,CAACzD,cAAN,GAAuB,IAAvB;AACAyD,QAAAA,KAAK,CAACxD,WAAN,GAAoB,KAApB;AACA;;AACJ,WAAKoC,gBAAL;AACIoB,QAAAA,KAAK,CAACzD,cAAN,GAAuB,KAAvB;AACAyD,QAAAA,KAAK,CAACxD,WAAN,GAAoB,IAApB;AACAwD,QAAAA,KAAK,CAAC3E,SAAN,GAAgB,EAAhB;AAEA0E,QAAAA,MAAM,CAACI,IAAP,CAAYG,MAAZ,CAAmBC,GAAnB,CAAuB,UAACC,CAAD;AAAA,iBAAK,CACxBR,KAAK,CAAC3E,SAAN,CAAgB6E,IAAhB,CAAqBM,CAArB,CADwB,CAAL;AAAA,SAAvB;AAGA;;AACJ,WAAK3B,gBAAL;AACImB,QAAAA,KAAK,CAACzD,cAAN,GAAuB,KAAvB;AACAyD,QAAAA,KAAK,CAACvD,YAAN,GAAqBsD,MAAM,CAACU,KAA5B;AACA;;AAGJ,WAAK3B,mBAAL;AACIkB,QAAAA,KAAK,CAAC5D,iBAAN,GAA0B,IAA1B;AACA4D,QAAAA,KAAK,CAAC3D,cAAN,GAAuB,KAAvB;AACA;;AACJ,WAAK0C,mBAAL;AACIiB,QAAAA,KAAK,CAAC5D,iBAAN,GAA0B,KAA1B;AACA4D,QAAAA,KAAK,CAAC3D,cAAN,GAAuB,IAAvB;AACA2D,QAAAA,KAAK,CAAC3E,SAAN,GAAgB,EAAhB;AAEA0E,QAAAA,MAAM,CAACI,IAAP,CAAYG,MAAZ,CAAmBC,GAAnB,CAAuB,UAACC,CAAD;AAAA,iBAAK,CACxBR,KAAK,CAAC3E,SAAN,CAAgB6E,IAAhB,CAAqBM,CAArB,CADwB,CAAL;AAAA,SAAvB;AAGA;;AACJ,WAAKxB,mBAAL;AACIgB,QAAAA,KAAK,CAAC5D,iBAAN,GAA0B,KAA1B;AACA4D,QAAAA,KAAK,CAACU,gBAAN,GAAyBX,MAAM,CAACU,KAAhC;AACA;;AAEJ,WAAK7C,iBAAL;AACIoC,QAAAA,KAAK,CAACvC,eAAN,GAAsB,IAAtB;AACAuC,QAAAA,KAAK,CAACtC,YAAN,GAAmB,KAAnB;AACA;;AACJ,WAAKG,iBAAL;AACImC,QAAAA,KAAK,CAACvC,eAAN,GAAsB,KAAtB;AACAuC,QAAAA,KAAK,CAACtC,YAAN,GAAmB,IAAnB;AACA;;AACJ,WAAKI,iBAAL;AACIkC,QAAAA,KAAK,CAACvC,eAAN,GAAsB,KAAtB;AACAuC,QAAAA,KAAK,CAACrC,aAAN,GAAoBoC,MAAM,CAACU,KAA3B;AACA;;AAGJ,WAAKvC,gBAAL;AACI8B,QAAAA,KAAK,CAAChD,cAAN,GAAuB,IAAvB;AACAgD,QAAAA,KAAK,CAAC/C,WAAN,GAAoB,KAApB;AACA+C,QAAAA,KAAK,CAAC9C,YAAN,GAAqB,IAArB;AACA;;AACJ,WAAKiB,gBAAL;AACI6B,QAAAA,KAAK,CAAChD,cAAN,GAAuB,KAAvB;AACAgD,QAAAA,KAAK,CAAC/C,WAAN,GAAoB,IAApB;AACAmD,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBN,MAAM,CAACI,IAA3B;AAGAH,QAAAA,KAAK,CAACvE,OAAN,GAAcsE,MAAM,CAACI,IAArB;AACCH,QAAAA,KAAK,CAACvE,OAAN,CAAckF,QAAd,GAAuBX,KAAK,CAACvE,OAAN,CAAckF,QAAd,CAAuBJ,GAAvB,CAA2B,UAACK,CAAD,EAAGC,KAAH;AAAA,iBAC9C;AACGC,YAAAA,CAAC,EAACD,KADL;AAEEE,YAAAA,CAAC,EAACH;AAFJ,WAD8C;AAAA,SAA3B,CAAvB;AAMD;;AACJ,WAAKxC,gBAAL;AACI4B,QAAAA,KAAK,CAAChD,cAAN,GAAuB,KAAvB;AACAgD,QAAAA,KAAK,CAAC9C,YAAN,GAAqB6C,MAAM,CAACU,KAA5B;AACA;AACA;;AAGA,WAAKrB,wBAAL;AACIY,QAAAA,KAAK,CAACnD,qBAAN,GAA8B,IAA9B;AACAmD,QAAAA,KAAK,CAAClD,kBAAN,GAA2B,KAA3B;AACAkD,QAAAA,KAAK,CAACjD,mBAAN,GAA4B,IAA5B;AACA;;AACJ,WAAKsC,wBAAL;AACIW,QAAAA,KAAK,CAACnD,qBAAN,GAA8B,KAA9B;AACAmD,QAAAA,KAAK,CAAClD,kBAAN,GAA2B,IAA3B;AACAiD,QAAAA,MAAM,CAACI,IAAP,CAAYG,MAAZ,CAAmBC,GAAnB,CAAuB,UAACC,CAAD;AAAA,iBAAK,CACxBR,KAAK,CAAC3E,SAAN,CAAgB6E,IAAhB,CAAqBM,CAArB,CADwB,CAAL;AAAA,SAAvB;AAGA;;AACJ,WAAKlB,wBAAL;AACIU,QAAAA,KAAK,CAACnD,qBAAN,GAA8B,KAA9B;AACAmD,QAAAA,KAAK,CAACjD,mBAAN,GAA4BgD,MAAM,CAACU,KAAnC;AACA;AACA;;AAGJ,WAAKxB,sBAAL;AACIe,QAAAA,KAAK,CAAC7C,oBAAN,GAA6B,IAA7B;AACA6C,QAAAA,KAAK,CAAC5C,iBAAN,GAA0B,KAA1B;AACA4C,QAAAA,KAAK,CAAC3C,kBAAN,GAA2B,IAA3B;AACA;;AACJ,WAAK6B,sBAAL;AACIc,QAAAA,KAAK,CAAC7C,oBAAN,GAA6B,KAA7B;AACA6C,QAAAA,KAAK,CAAC5C,iBAAN,GAA0B,IAA1B;AACA4C,QAAAA,KAAK,CAAC1E,SAAN,GAAgByE,MAAM,CAACI,IAAvB;AACAH,QAAAA,KAAK,CAAC1E,SAAN,CAAgBqF,QAAhB,GAAyBX,KAAK,CAAC1E,SAAN,CAAgBqF,QAAhB,CAAyBJ,GAAzB,CAA6B,UAACK,CAAD,EAAGC,KAAH;AAAA,iBAC7C;AACGC,YAAAA,CAAC,EAACD,KADL;AAEEE,YAAAA,CAAC,EAACH;AAFJ,WAD6C;AAAA,SAA7B,CAAzB;AAOA;;AACJ,WAAKzB,sBAAL;AACIa,QAAAA,KAAK,CAAC7C,oBAAN,GAA6B,KAA7B;AACA6C,QAAAA,KAAK,CAAC3C,kBAAN,GAA2B0C,MAAM,CAACU,KAAlC;AACA;;AAGJ,WAAKpC,iBAAL;AACI2B,QAAAA,KAAK,CAAC1C,aAAN,GAAsB,IAAtB;AACA0C,QAAAA,KAAK,CAACzC,UAAN,GAAmB,KAAnB;AACAyC,QAAAA,KAAK,CAACxC,WAAN,GAAoB,IAApB;AACA;;AACJ,WAAKc,iBAAL;AACI0B,QAAAA,KAAK,CAAC1C,aAAN,GAAsB,KAAtB;AACA0C,QAAAA,KAAK,CAACzC,UAAN,GAAmB,IAAnB;AACA;;AACJ,WAAKgB,iBAAL;AACIyB,QAAAA,KAAK,CAAC1C,aAAN,GAAsB,KAAtB;AACA0C,QAAAA,KAAK,CAACxC,WAAN,GAAoBuC,MAAM,CAACU,KAA3B;AACA;;AACR;AACI,eAAOX,KAAP;AA3MR;AA6MH,GA9Ma,CAAd;AA+MH,CAhND;;AAkNA,eAAeD,OAAf","sourcesContent":["import shortid from \"shortid\";\nimport produce  from \"immer\";\nimport faker from 'faker';\n\n\nexport const initialStates={\n    searchMap:[],\n    createMap:[],\n    mapRank:[],\n    myMapRank:null,\n   \n    loadMap:null,\n    myMap:null,\n\n    Rankloading:false,\n    RankDone:false,\n    RankError:null,\n    myRankloading:false,\n    myRankDone:false,\n    myRankError:null,\n \n \n    movingmapLoading:false,\n    movingmapDone:false,\n    movingmapError:null,\n    runningmapLoading:false,\n    runningmapDone:false,\n    runningmapError:null,\n    bikemapLoading:false,\n    bikemapDone:false,\n    bikemapError:null,\n   searchmapLoading:false,\n   searchmapDone:false,\n   searchmapError:null,\n   loadMyLocationLoading:false,\n   loadMyLocationDone:false,\n   loadMyLocationError:null,\n   loadmapLoading:false,\n   loadmapDone:false,\n   loadmapError:null,\n   loadCreatemapLoading:false,\n   loadCreatemapDone:false,\n   loadCreatemapError:null,\n   addmapLoading:false,\n   addmapDone:false,\n   addmapError:null,\n   addTrackLoading:false,\n   addTrackDone:false,\n   addTrackError:null,\n}\n\nexport const ADD_TRACK_REQUEST='ADD_TRACK_REQUEST';\nexport const ADD_TRACK_SUCCESS='ADD_TRACK_SUCCESS';\nexport const ADD_TRACK_FAILURE='ADD_TRACK_FAILURE';\n\nexport const SEARCH_MAP_REQUEST = 'SEARCH_MAP_REQUEST';\nexport const SEARCH_MAP_SUCCESS = 'SEARCH_MAP_SUCCESS';\nexport const SEARCH_MAP_FAILURE = 'SEARCH_MAP_FAILURE';\n\nexport const LOAD_MAP_REQUEST ='LOAD_MAP_REQUEST';\nexport const LOAD_MAP_SUCCESS ='LOAD_MAP_SUCCESS';\nexport const LOAD_MAP_FAILURE ='LOAD_MAP_FAILURE';\n\nexport const ADD_MYMAP_REQUEST='ADD_MYMAP_REQUEST';\nexport const ADD_MYMAP_SUCCESS='ADD_MYMAP_SUCCESS';\nexport const ADD_MYMAP_FAILURE='ADD_MYMAP_FAILURE';\n\nexport const MOVING_MAP_REQUEST='MOVING_MAP_REQUEST'\nexport const MOVING_MAP_SUCCESS='MOVING_MAP_SUCCESS'\nexport const MOVING_MAP_FAILURE='MOVING_MAP_FAILURE'\n\nexport const BIKE_MAP_REQUEST='BIKE_MAP_REQUEST'\nexport const BIKE_MAP_SUCCESS='BIKE_MAP_SUCCESS'\nexport const BIKE_MAP_FAILURE='BIKE_MAP_FAILURE'\n\nexport const RUNNING_MAP_REQUEST='RUNNING_MAP_REQUEST'\nexport const RUNNING_MAP_SUCCESS='RUNNING_MAP_SUCCESS'\nexport const RUNNING_MAP_FAILURE='RUNNING_MAP_FAILURE'\n\nexport const LOAD_CREATEMAP_REQUEST='LOAD_CREATEMAP_REQUEST'\nexport const LOAD_CREATEMAP_SUCCESS='LOAD_CREATEMAP_SUCCESS'\nexport const LOAD_CREATEMAP_FAILURE='LOAD_CREATEMAP_FAILURE'\n\nexport const LOAD_MY_LOCATION_REQUEST='LOAD_MY_LOCATION_REQUEST'\nexport const LOAD_MY_LOCATION_SUCCESS='LOAD_MY_LOCATION_SUCCESS'\nexport const LOAD_MY_LOCATION_FAILURE='LOAD_MY_LOCATION_FAILURE'\n\nexport const LOAD_TRACK_RANK_REQUEST='LOAD_TRACK_RANK_REQUEST'\nexport const LOAD_TRACK_RANK_SUCCESS='LOAD_TRACK_RANK_SUCCESS'\nexport const LOAD_TRACK_RANK_FAILURE='LOAD_TRACK_RANK_FAILURE'\n\nexport const LOAD_TRACK_MYRANK_REQUEST='LOAD_TRACK_MYRANK_REQUEST'\nexport const LOAD_TRACK_MYRANK_SUCCESS='LOAD_TRACK_MYRANK_SUCCESS'\nexport const LOAD_TRACK_MYRANK_FAILURE='LOAD_TRACK_MYRANK_FAILURE'\n\n\n\n\nconst reducer=(state=initialStates,action)=>{\n    return produce(state,(draft)=>{\n        switch(action.type){\n            case LOAD_TRACK_MYRANK_REQUEST:\n                draft.myRankloading=true;\n                draft.myRankDone=false;\n                draft.myRankError=null;\n            case LOAD_TRACK_MYRANK_SUCCESS:\n                draft.myRankloading=false;\n                draft.myRankDone=true;\n                draft.myMapRank.push(...action.data)\n            case LOAD_TRACK_MYRANK_FAILURE:\n                draft.myRankloading=false,\n                draft.myRankError='a'   \n            \n                \n            case LOAD_TRACK_RANK_REQUEST:\n                draft.Rankloading=true;\n                draft.RankDone=false;\n                draft.RankError=null;\n            case LOAD_TRACK_RANK_SUCCESS:\n                draft.Rankloading=false;\n                draft.RankDone=true;\n                draft.mapRank=action.data\n            case LOAD_TRACK_RANK_FAILURE:\n                draft.Rankloading=false,\n                draft.RankError='a'   \n            case SEARCH_MAP_REQUEST:\n                draft.searchmapLoading = true;\n                draft.searchmapDone = false;\n                draft.searchmapError = null;\n                break;\n            case SEARCH_MAP_SUCCESS: \n                draft.searchmapLoading = false;\n                draft.searchmapDone = true;\n                console.log('sss',action.data)\n                draft.searchMap=[]\n                // dummyMap().map((m)=>[\n                //     draft.searchMap.push(m)\n                // ])\n                action.data.result.map((m)=>[\n                    draft.searchMap.push(m)\n                ])\n                console.log('qqqqq',draft.searchMap)\n            // draft.searchMap.unshift(dummyMap().map());\n            break;\n            case SEARCH_MAP_FAILURE:\n                draft.searchmapLoading = false;\n                draft.searchmapError = action.error;\n                break;\n\n\n            case MOVING_MAP_REQUEST:\n                draft.movingmapLoading = true;\n                draft.movingmapDone = false;\n                break;\n            case MOVING_MAP_SUCCESS: \n                draft.movingmapLoading = false;\n                draft.movingmapDone = true;\n                draft.searchMap=[]\n             \n                action.data.result.map((m)=>[\n                    draft.searchMap.push(m)\n                ])\n                break;\n            case MOVING_MAP_FAILURE:\n                draft.movingmapLoading = false;\n                draft.movingmapError = action.error;\n                break;\n\n\n            case BIKE_MAP_REQUEST:\n\n                draft.bikemapLoading = true;\n                draft.bikemapDone = false;\n                break;\n            case BIKE_MAP_SUCCESS: \n                draft.bikemapLoading = false;\n                draft.bikemapDone = true;\n                draft.searchMap=[]\n             \n                action.data.result.map((m)=>[\n                    draft.searchMap.push(m)\n                ])\n                break;\n            case BIKE_MAP_FAILURE:\n                draft.bikemapLoading = false;\n                draft.bikemapError = action.error;\n                break;\n\n\n            case RUNNING_MAP_REQUEST:\n                draft.runningmapLoading = true;\n                draft.runningmapDone = false;\n                break;\n            case RUNNING_MAP_SUCCESS: \n                draft.runningmapLoading = false;\n                draft.runningmapDone = true;\n                draft.searchMap=[]\n             \n                action.data.result.map((m)=>[\n                    draft.searchMap.push(m)\n                ])\n                break;\n            case RUNNING_MAP_FAILURE:\n                draft.runningmapLoading = false;\n                draft.runninmgmapError = action.error;\n                break;\n\n            case ADD_TRACK_REQUEST:\n                draft.addTrackLoading=true;\n                draft.addTrackDone=false;\n                break;\n            case ADD_TRACK_SUCCESS:\n                draft.addTrackLoading=false;\n                draft.addTrackDone=true;\n                break;\n            case ADD_TRACK_FAILURE:\n                draft.addTrackLoading=false;\n                draft.addTrackError=action.error\n                break;\n\n\n            case LOAD_MAP_REQUEST:\n                draft.loadmapLoading = true;\n                draft.loadmapDone = false;\n                draft.loadmapError = null;\n                break;\n            case LOAD_MAP_SUCCESS: \n                draft.loadmapLoading = false;\n                draft.loadmapDone = true;\n                console.log('qwzxc',action.data)\n                \n                     \n                draft.loadMap=action.data\n                 draft.loadMap.altitude=draft.loadMap.altitude.map((a,index)=>(\n                     {\n                        x:index,\n                       y:a\n                    }\n                ))     \n                break;\n            case LOAD_MAP_FAILURE:\n                draft.loadmapLoading = false;\n                draft.loadmapError = action.error;\n                break;\n                //\n\n\n                case LOAD_MY_LOCATION_REQUEST:\n                    draft.loadMyLocationLoading = true;\n                    draft.loadMyLocationDone = false;\n                    draft.loadMyLocationError = null;\n                    break;\n                case LOAD_MY_LOCATION_SUCCESS: \n                    draft.loadMyLocationLoading = false;\n                    draft.loadMyLocationDone = true;\n                    action.data.result.map((m)=>[\n                        draft.searchMap.push(m)\n                    ])\n                    break;\n                case LOAD_MY_LOCATION_FAILURE:\n                    draft.loadMyLocationLoading = false;\n                    draft.loadMyLocationError = action.error;\n                    break;\n                    //\n\n\n                case LOAD_CREATEMAP_REQUEST:\n                    draft.loadCreatemapLoading = true;\n                    draft.loadCreatemapDone = false;\n                    draft.loadCreatemapError = null;\n                    break;\n                case LOAD_CREATEMAP_SUCCESS: \n                    draft.loadCreatemapLoading = false;\n                    draft.loadCreatemapDone = true;\n                    draft.createMap=action.data\n                    draft.createMap.altitude=draft.createMap.altitude.map((a,index)=>(\n                             {\n                                x:index,\n                               y:a\n                            }\n                        ))     \n                  \n                    break;\n                case LOAD_CREATEMAP_FAILURE:\n                    draft.loadCreatemapLoading = false;\n                    draft.loadCreatemapError = action.error;\n                    break;\n\n\n                case ADD_MYMAP_REQUEST:\n                    draft.addmapLoading = true;\n                    draft.addmapDone = false;\n                    draft.addmapError = null;\n                    break;\n                case ADD_MYMAP_SUCCESS: \n                    draft.addmapLoading = false;\n                    draft.addmapDone = true;\n                    break;\n                case ADD_MYMAP_FAILURE:\n                    draft.addmapLoading = false;\n                    draft.addmapError = action.error;\n                    break;\n            default:\n                return state\n        }\n    })\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}