{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/dong/CapstonProject/component/CommentForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport useInput from '../hooks/useInput';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nfunction CommetForm(_ref) {\n  _s();\n\n  var _jsx;\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      addCommentDone = _useSelector.addCommentDone,\n      addCommentLoading = _useSelector.addCommentLoading; // const id=useSelector((state)=>state.user.me?.id)\n\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      commentText = _useInput2[0],\n      onChangeCommentText = _useInput2[1],\n      setValue = _useInput2[2];\n\n  var onSubmitComment = useCallback(function () {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText]);\n  useEffect(function () {\n    if (addCommentDone) {\n      setValue('');\n    }\n  }, [addCommentDone]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      margin: 0,\n      zIndex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    style: {\n      marginTop: 30,\n      marginLeft: 100,\n      width: 500\n    },\n    rows: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), __jsx(Button, (_jsx = {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: {\n      position: 'absolute',\n      right: 0,\n      bottom: -40\n    }\n  }, _defineProperty(_jsx, \"style\", {\n    marginRight: 100\n  }), _defineProperty(_jsx, \"loading\", addCommentLoading), _defineProperty(_jsx, \"__self\", this), _defineProperty(_jsx, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 11\n  }), _jsx), \"\\uC9F9\\uC9F9\")));\n}\n\n_s(CommetForm, \"LmTtjp+VY1wAoq1FCT5s0uqkp94=\", false, function () {\n  return [useDispatch, useSelector, useInput];\n});\n\n_c = CommetForm;\nCommetForm.PropTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommetForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommetForm\");","map":{"version":3,"sources":["/Users/dong/CapstonProject/component/CommentForm.js"],"names":["React","useCallback","useEffect","Form","Input","Button","PropTypes","useInput","useSelector","useDispatch","ADD_COMMENT_REQUEST","CommetForm","post","dispatch","state","addCommentDone","addCommentLoading","commentText","onChangeCommentText","setValue","onSubmitComment","type","data","content","postId","id","userId","position","margin","zIndex","marginTop","marginLeft","width","right","bottom","marginRight","object","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAoBC,MAApB,QAAiC,MAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAAQC,mBAAR,QAAkC,kBAAlC;;AAEA,SAASC,UAAT,OAA4B;AAAA;;AAAA;;AAAA,MAAPC,IAAO,QAAPA,IAAO;AAExB,MAAMC,QAAQ,GAAEJ,WAAW,EAA3B;;AACA,qBAAyCD,WAAW,CAAC,UAACM,KAAD;AAAA,WAASA,KAAK,CAACF,IAAf;AAAA,GAAD,CAApD;AAAA,MAAOG,cAAP,gBAAOA,cAAP;AAAA,MAAsBC,iBAAtB,gBAAsBA,iBAAtB,CAHwB,CAIxB;;;AAEA,kBAAiDT,QAAQ,CAAC,EAAD,CAAzD;AAAA;AAAA,MAAOU,WAAP;AAAA,MAAmBC,mBAAnB;AAAA,MAAuCC,QAAvC;;AAEA,MAAMC,eAAe,GAACnB,WAAW,CAAC,YAAI;AAElCY,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAACX,mBADA;AAELY,MAAAA,IAAI,EAAC;AACDC,QAAAA,OAAO,EAACN,WADP;AAEDO,QAAAA,MAAM,EAACZ,IAAI,CAACa,EAFX;AAGDC,QAAAA,MAAM,EAACD;AAHN;AAFA,KAAD,CAAR;AASH,GAXgC,EAW/B,CAACR,WAAD,CAX+B,CAAjC;AAaAf,EAAAA,SAAS,CAAC,YAAI;AACV,QAAGa,cAAH,EAAkB;AACdI,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AACJ,GAJQ,EAIP,CAACJ,cAAD,CAJO,CAAT;AAMA,SAGF,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEK,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAACO,MAAAA,QAAQ,EAAC,UAAV;AAAsBC,MAAAA,MAAM,EAAC,CAA7B;AAAgCC,MAAAA,MAAM,EAAC;AAAvC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAEZ,WAAvB;AAAoC,IAAA,QAAQ,EAAEC,mBAA9C;AAAmE,IAAA,KAAK,EAAE;AAACY,MAAAA,SAAS,EAAC,EAAX;AAAcC,MAAAA,UAAU,EAAC,GAAzB;AAA6BC,MAAAA,KAAK,EAAC;AAAnC,KAA1E;AAAmH,IAAA,IAAI,EAAE,CAAzH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAyC,IAAA,KAAK,EAAE;AAACL,MAAAA,QAAQ,EAAC,UAAV;AAAsBM,MAAAA,KAAK,EAAC,CAA5B;AAA8BC,MAAAA,MAAM,EAAC,CAAC;AAAtC;AAAhD,oCAAkG;AAACC,IAAAA,WAAW,EAAC;AAAb,GAAlG,oCAA8HnB,iBAA9H;AAAA;AAAA;AAAA;AAAA,4BAFJ,CADJ,CAHE;AASH;;GApCQL,U;UAEWF,W,EACyBD,W,EAGQD,Q;;;KAN5CI,U;AAsCTA,UAAU,CAACL,SAAX,GAAqB;AACjBM,EAAAA,IAAI,EAACN,SAAS,CAAC8B,MAAV,CAAiBC;AADL,CAArB;AAKA,eAAe1B,UAAf","sourcesContent":["import React, { useCallback,useEffect } from 'react';\nimport {Form, Input,Button} from 'antd'\nimport PropTypes from 'prop-types'\nimport useInput from '../hooks/useInput';\nimport { useSelector,useDispatch } from 'react-redux';\nimport {ADD_COMMENT_REQUEST} from '../reducers/post'\n\nfunction CommetForm({post}) {\n\n    const dispatch =useDispatch();\n    const {addCommentDone,addCommentLoading}=useSelector((state)=>state.post)\n    // const id=useSelector((state)=>state.user.me?.id)\n  \n    const [commentText,onChangeCommentText,setValue]=useInput('');\n    \n    const onSubmitComment=useCallback(()=>{\n\n        dispatch({\n            type:ADD_COMMENT_REQUEST,\n            data:{\n                content:commentText,\n                postId:post.id,\n                userId:id,\n                \n            }\n        })\n    },[commentText])\n\n    useEffect(()=>{\n        if(addCommentDone){\n            setValue('')\n        }\n    },[addCommentDone])\n\n    return( \n\n\n  <Form onFinish={onSubmitComment}>\n      <Form.Item style={{position:'relative' ,margin:0 ,zIndex:1}}>\n          <Input.TextArea value={commentText} onChange={onChangeCommentText} style={{marginTop:30,marginLeft:100,width:500}} rows={4} />\n          <Button type=\"primary\" htmlType='submit' style={{position:'absolute' ,right:0,bottom:-40}} style={{marginRight:100}} loading={addCommentLoading}>짹짹</Button>\n      </Form.Item>\n  </Form>);\n}\n\nCommetForm.PropTypes={\n    post:PropTypes.object.isRequired,\n};\n\n\nexport default CommetForm;\n"]},"metadata":{},"sourceType":"module"}