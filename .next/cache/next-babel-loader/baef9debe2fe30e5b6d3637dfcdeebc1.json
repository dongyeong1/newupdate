{"ast":null,"code":"var _jsxFileName = \"/Users/dong/CapstonProject/pages/createPath.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport { Polyline, Marker, StreetViewPanorama, MarkerClusterer } from '@react-google-maps/api';\nimport { Card, Table, Button, Slider, Switch } from 'antd';\nimport { fa } from 'faker/lib/locales';\nvar dummyMap = {\n  id: 3,\n  name: '두류공원~동성로',\n  distance: 350,\n  userId: 1,\n  description: '설명',\n  event: 'running',\n  gps: {\n    type: \"LineString\",\n    coordinates: [[128.61568699047842, 35.89783218289432], [128.61388454612188, 35.89831887973966], [128.6200643553443, 35.89567677518036], [128.62714538674498, 35.89696307394185], [128.62555751909755, 35.892443553570914], [128.62933406917793, 35.89421662693352]],\n    id: \"62133c5ff58346f2e09756af\"\n  },\n  altitude: [{\n    x: 0,\n    y: 8\n  }, {\n    x: 1,\n    y: 5\n  }, {\n    x: 2,\n    y: 4\n  }, {\n    x: 3,\n    y: 9\n  }, {\n    x: 4,\n    y: 34\n  }, {\n    x: 5,\n    y: 7\n  }],\n  start_latlng: [128.62933406917793, 35.89421662693352],\n  end_latlng: [128.61568699047842, 35.89783218289432],\n  createdAt: \"2022-02-21T07:16:47.648Z\"\n};\nvar mapContainerStyle = {\n  height: \"400px\",\n  width: \"800px\",\n  marginLeft: '50px',\n  marginTop: '20px'\n};\n\nfunction createPath() {\n  _s();\n\n  var _useState = useState(5),\n      strokeWeight = _useState[0],\n      setStrokeWeight = _useState[1];\n\n  var mouseOut = function mouseOut() {\n    setStrokeWeight(5);\n    console.log('aaa');\n  };\n\n  var mouseOver = function mouseOver() {\n    setStrokeWeight(10);\n    console.log('over');\n  };\n\n  var options = {\n    strokeColor: '#FF0000',\n    strokeOpacity: 0.8,\n    strokeWeight: 5,\n    fillColor: '#FF0000',\n    fillOpacity: 0.35,\n    clickable: true,\n    draggable: false,\n    editable: false,\n    visible: true,\n    radius: 30000,\n    //-27부터 호주 시작해서 점찍고 점찍고 한다\n    paths: [[{\n      lat: 35.969997373905,\n      lng: 128.45170755523503\n    }, {\n      lat: 35.985501427015464,\n      lng: 128.40407191943035\n    }, {\n      lat: 35.89580489690752,\n      lng: 128.62238368221892\n    }]],\n    zIndex: 1\n  };\n\n  var drag = function drag() {\n    console.log('drag');\n  };\n\n  var onLoad = function onLoad(polyline) {\n    console.log('polyline: ', polyline);\n  };\n\n  var _useState2 = useState([0, dummyMap.gps.coordinates.length - 1]),\n      number = _useState2[0],\n      setNumber = _useState2[1];\n\n  var _useState3 = useState({\n    lat: dummyMap.start_latlng[1],\n    lng: dummyMap.start_latlng[0]\n  }),\n      leftPath = _useState3[0],\n      setLeftPath = _useState3[1];\n\n  var _useState4 = useState({\n    lat: dummyMap.end_latlng[1],\n    lng: dummyMap.end_latlng[0]\n  }),\n      rightPath = _useState4[0],\n      setRightPath = _useState4[1];\n\n  var change = function change(value) {\n    setNumber(value);\n  };\n\n  useEffect(function () {\n    setLeftPath({\n      lat: dummyMap.gps.coordinates[number[0]][1],\n      lng: dummyMap.gps.coordinates[number[0]][0]\n    });\n    console.log(number[0]);\n  }, [number[0]]);\n  useEffect(function () {\n    setRightPath({\n      lat: dummyMap.gps.coordinates[number[1]][1],\n      lng: dummyMap.gps.coordinates[number[1]][0]\n    });\n    console.log(number[1]);\n  }, [number[1]]);\n  var storePath = [];\n\n  var _useState5 = useState([]),\n      newPath = _useState5[0],\n      setNewPath = _useState5[1];\n\n  var pathStore = function pathStore() {\n    // if(0<number[0]){\n    //    for(var i=0; i<number[0]; i++){\n    //        storeArray.push(i)\n    //    }\n    // }\n    // if(number[1]<dummyMap.gps.coordinates.length-1){\n    //     for(var i=number[1]; i<dummyMap.gps.coordinates.length-1; i++){\n    //         storeArray.push(i)\n    //     }\n    // }\n    // for(var i=0; i<storeArray.length; i++){\n    //     dummyMap.gps.coordinates.splice(i,1)\n    // }\n    for (var i = number[0]; i < number[1] + 1; i++) {\n      storePath.push(dummyMap.gps.coordinates[i]);\n      console.log(storePath);\n    }\n\n    setNewPath([storePath]);\n    console.log(newPath);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 1\n    }\n  }, number[0]), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 1\n    }\n  }, number[1]), __jsx(Slider, {\n    range: true,\n    defaultValue: number,\n    max: dummyMap.gps.coordinates.length - 1,\n    onChange: change,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }), __jsx(LoadScript, {\n    googleMapsApiKey: \"AIzaSyAYsO2CGL0YCjMoLk29eyitFC2PIJnJbYE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 5\n    }\n  }, __jsx(GoogleMap, {\n    id: \"marker-example\",\n    mapContainerStyle: mapContainerStyle,\n    zoom: 12,\n    center: {\n      lat: 35.89567677518036,\n      lng: 128.6200643553443\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }, __jsx(Marker, {\n    position: leftPath,\n    icon: {\n      url: ' http://maps.google.com/mapfiles/ms/icons/blue.png'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 5\n    }\n  }), __jsx(Marker, {\n    position: rightPath,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 5\n    }\n  }), __jsx(Polyline, {\n    onDragStart: drag,\n    onLoad: onLoad,\n    options: options,\n    path: dummyMap.gps.coordinates.map(function (m) {\n      return {\n        lat: m[1],\n        lng: m[0]\n      };\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 10\n    }\n  }))), __jsx(Button, {\n    onClick: pathStore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }\n  }, \"\\uACBD\\uB85C\\uB9CC\\uB4E4\\uAE30\"));\n}\n\n_s(createPath, \"MkTu4Qony+ANfoX9QaQ9HOtPdnU=\");\n\nexport default createPath;","map":{"version":3,"sources":["/Users/dong/CapstonProject/pages/createPath.js"],"names":["React","useEffect","useState","GoogleMap","LoadScript","Polyline","Marker","StreetViewPanorama","MarkerClusterer","Card","Table","Button","Slider","Switch","fa","dummyMap","id","name","distance","userId","description","event","gps","type","coordinates","altitude","x","y","start_latlng","end_latlng","createdAt","mapContainerStyle","height","width","marginLeft","marginTop","createPath","strokeWeight","setStrokeWeight","mouseOut","console","log","mouseOver","options","strokeColor","strokeOpacity","fillColor","fillOpacity","clickable","draggable","editable","visible","radius","paths","lat","lng","zIndex","drag","onLoad","polyline","length","number","setNumber","leftPath","setLeftPath","rightPath","setRightPath","change","value","storePath","newPath","setNewPath","pathStore","i","push","url","map","m"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport { Polyline ,Marker,StreetViewPanorama,MarkerClusterer} from '@react-google-maps/api';\nimport {Card,Table,Button,Slider, Switch} from 'antd'\nimport { fa } from 'faker/lib/locales';\n\nconst dummyMap={\n    id:3,\nname:'두류공원~동성로',\ndistance:350,\nuserId:1,\ndescription:'설명',\nevent:'running',\ngps:{\n    type:\"LineString\",\n    coordinates: [\n\n        [128.61568699047842,\n            35.89783218289432 \n        ],\n        [ 128.61388454612188,\n            35.89831887973966\n        ],\n        [ 128.6200643553443,\n            35.89567677518036\n        ],\n        [128.62714538674498,\n            35.89696307394185 \n        ],\n        [128.62555751909755,\n            35.892443553570914\n        ],\n        [128.62933406917793,\n            35.89421662693352 \n        ]\n       \n    ],\n    id: \"62133c5ff58346f2e09756af\"\n\n},\naltitude: [\n    { x: 0, y: 8 },\n    { x: 1, y: 5 },\n    { x: 2, y: 4 },\n    { x: 3, y: 9 },\n    { x: 4, y: 34 },\n    { x: 5, y: 7 },\n],\n\nstart_latlng: [\n    128.62933406917793,\n    35.89421662693352 \n],\nend_latlng: [\n    128.61568699047842,\n35.89783218289432 \n],\ncreatedAt: \"2022-02-21T07:16:47.648Z\",\n\n}\n\n\nconst mapContainerStyle = {\n    height: \"400px\",\n    width: \"800px\",\n    marginLeft:'50px',\n    marginTop:'20px'\n  };\n\n\nfunction createPath() {\n\n    \n\nconst [strokeWeight,setStrokeWeight]=useState(5)\n\n\nconst mouseOut=()=>{\n    setStrokeWeight(5)\n    console.log('aaa')\n}\n\nconst mouseOver=()=>{\n    setStrokeWeight(10)\n    console.log('over')\n}\n   \n\n    const options = {\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.8,\n        strokeWeight: 5,\n        fillColor: '#FF0000',\n        fillOpacity: 0.35,\n        clickable: true,\n        draggable: false,\n        editable: false,\n        visible: true,\n        radius: 30000,\n        //-27부터 호주 시작해서 점찍고 점찍고 한다\n        paths: [\n              [\n                  {lat:  35.969997373905, lng: 128.45170755523503},\n                  {lat:35.985501427015464, lng:128.40407191943035},\n              \n                  {lat: 35.89580489690752, lng: 128.62238368221892}\n                  \n              ]\n        \n        ],\n        zIndex: 1\n      };\n\n      const drag=()=>{\n          console.log('drag')\n      }\n\n      const onLoad = polyline => {\n        console.log('polyline: ', polyline)\n      };\n\n      const [number,setNumber]=useState([0,dummyMap.gps.coordinates.length-1])\n      \n      const [leftPath,setLeftPath]=useState({\n          lat:dummyMap.start_latlng[1],lng:dummyMap.start_latlng[0]\n        })\n      const [rightPath,setRightPath]=useState({\n        lat:dummyMap.end_latlng[1],lng:dummyMap.end_latlng[0]\n      })\n\n      const change=(value)=>{\n        setNumber(value)\n       \n      }\n\n      useEffect(()=>{\n          setLeftPath({\n              lat:dummyMap.gps.coordinates[number[0]][1],\n              lng:dummyMap.gps.coordinates[number[0]][0]\n          \n            })\n            console.log(number[0])\n\n      },[number[0]])\n      useEffect(()=>{\n        setRightPath({\n            lat:dummyMap.gps.coordinates[number[1]][1],\n            lng:dummyMap.gps.coordinates[number[1]][0]\n        \n          })\n          console.log(number[1])\n\n\n    },[number[1]])\n    const storePath=[]\n    const [newPath,setNewPath]=useState([])\n\n    const pathStore=()=>{\n        // if(0<number[0]){\n        //    for(var i=0; i<number[0]; i++){\n        //        storeArray.push(i)\n        //    }\n        // }\n        // if(number[1]<dummyMap.gps.coordinates.length-1){\n        //     for(var i=number[1]; i<dummyMap.gps.coordinates.length-1; i++){\n        //         storeArray.push(i)\n        //     }\n        // }\n\n        // for(var i=0; i<storeArray.length; i++){\n        //     dummyMap.gps.coordinates.splice(i,1)\n        // }\n\n        for(var i=number[0]; i<number[1]+1; i++){\n            storePath.push(dummyMap.gps.coordinates[i])\n            console.log(storePath)\n            \n        }\n        setNewPath([storePath])\n        \n      console.log(newPath)\n    }\n\n  return (\n    <div>\n\n{/* <Slider defaultValue={number} onChange={change} /> */}\n<h1>{number[0]}</h1>\n<h1>{number[1]}</h1>\n        <Slider range defaultValue={number} max={dummyMap.gps.coordinates.length-1} onChange={change} />\n        {/* {state&&<Switch size=\"small\" checked={disabled} onChange={this.handleDisabledChange} />} */}\n    <LoadScript\n    googleMapsApiKey=\"AIzaSyAYsO2CGL0YCjMoLk29eyitFC2PIJnJbYE\"\n    >\n        \n      <GoogleMap\n        id=\"marker-example\"\n        mapContainerStyle={mapContainerStyle}\n        zoom={12}\n        \n        center={{lat:35.89567677518036, lng:  128.6200643553443}}\n       \n        \n      \n        \n      >\n    \n    {/* <Marker  position={{lat:dummyMap.start_latlng[1],lng:dummyMap.start_latlng[0]}}  /> */}\n   \n    <Marker position={leftPath} icon={{url:' http://maps.google.com/mapfiles/ms/icons/blue.png',}} ></Marker>\n    <Marker position={rightPath} ></Marker>\n    \n   \n         <Polyline onDragStart={drag} onLoad={onLoad}  options={options} path={dummyMap.gps.coordinates.map((m)=>(\n            {\n                lat:m[1],\n                lng:m[0]\n            }\n        ))}></Polyline> \n     \n    \n    \n    \n    \n    \n        \n      </GoogleMap>\n      </LoadScript>\n      \n      <Button onClick={pathStore}>경로만들기</Button></div>\n  )\n}\n\nexport default createPath"]},"metadata":{},"sourceType":"module"}