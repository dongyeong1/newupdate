{"ast":null,"code":"var _jsxFileName = \"/Users/dong/CapstonProject/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { Menu, Button, Row, Col, Card } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LoginForm from '../component/LoginForm';\nimport UserProfile from '../component/UserProfile';\nimport UserBadge from '../component/userBadge';\nimport axios from 'axios';\nimport wrapper from '../store/configureStore';\nimport PostCard from '../component/PostCard';\nimport Guild from '../component/Guild'; // import AppLayout from '../component/AppLayout';\n\nimport MyNote from '../component/MyNote';\nimport PostForm from '../component/postForm';\nimport Badge from '../component/badge';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport SideBar from '../component/Layout/SideBar'; // import wrapper from '../store/configureStore'\n\nimport { END } from 'redux-saga';\nimport MyPurpose from '../component/myPurpose';\nimport Rank from '../component/Rank';\nimport Goal from '../component/goal';\n\nfunction index() {\n  const {\n    searchMap\n  } = useSelector(state => state.map);\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  useEffect(() => {}, []); // useEffect(()=>{\n  //   function onScroll(){\n  //       if(window.scrollY+document.documentElement.clientHeight>document.documentElement.scrollHeight-300){\n  //           if(hasMorePosts && !loadPostsLoading){\n  //               dispatch({\n  //                   type:LOAD_POSTS_REQUEST\n  //               })\n  //              }\n  //       }\n  //   }\n  //   window.addEventListener('scroll',onScroll)\n  //   return()=>{\n  //   window.removeEventListener('scroll',onScroll)    \n  //   }\n  //   },[hasMorePosts,loadPostsLoading])\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    gutter: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    span: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, __jsx(Rank, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }\n  }), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  }, __jsx(Col, {\n    span: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  }, __jsx(Goal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  })), __jsx(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }, __jsx(MyNote, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }\n  })))), __jsx(Col, {\n    span: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    style: {\n      overflow: 'auto',\n      width: 900,\n      height: '85vh',\n      backgroundColor: '#d9d9d9'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, mainPosts.map(post => __jsx(PostCard, {\n    post: post,\n    key: post.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }))))));\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POSTS_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default index;","map":{"version":3,"sources":["/Users/dong/CapstonProject/pages/index.js"],"names":["React","useEffect","Menu","Button","Row","Col","Card","useDispatch","useSelector","LoginForm","UserProfile","UserBadge","axios","wrapper","PostCard","Guild","MyNote","PostForm","Badge","LOAD_MY_INFO_REQUEST","LOAD_POSTS_REQUEST","SideBar","END","MyPurpose","Rank","Goal","index","searchMap","state","map","me","user","mainPosts","hasMorePosts","loadPostsLoading","post","dispatch","overflow","width","height","backgroundColor","id","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","type","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React ,{useEffect}from 'react'\nimport { Menu, Button,Row,Col,Card} from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LoginForm from '../component/LoginForm';\nimport UserProfile from '../component/UserProfile';\nimport UserBadge from '../component/userBadge';\nimport axios from 'axios'\n\nimport wrapper from '../store/configureStore';\nimport PostCard from '../component/PostCard';\nimport Guild from '../component/Guild';\n// import AppLayout from '../component/AppLayout';\nimport MyNote from '../component/MyNote';\nimport PostForm from '../component/postForm';\nimport Badge from '../component/badge';\nimport {LOAD_MY_INFO_REQUEST} from '../reducers/user'\nimport {LOAD_POSTS_REQUEST} from '../reducers/post'\nimport SideBar from '../component/Layout/SideBar';\n// import wrapper from '../store/configureStore'\nimport { END } from 'redux-saga';\nimport MyPurpose from '../component/myPurpose';\nimport Rank from '../component/Rank';\nimport Goal from '../component/goal'\nfunction index() {\n    const {searchMap}=useSelector((state)=>state.map)\n    const {me} =useSelector((state)=>state.user)\n    const {mainPosts,hasMorePosts,loadPostsLoading}=useSelector((state)=>state.post)\n  const dispatch=useDispatch()\n\n  useEffect(()=>{\n \n  },[])\n\n  // useEffect(()=>{\n  //   function onScroll(){\n  //       if(window.scrollY+document.documentElement.clientHeight>document.documentElement.scrollHeight-300){\n  //           if(hasMorePosts && !loadPostsLoading){\n  //               dispatch({\n  //                   type:LOAD_POSTS_REQUEST\n  //               })\n  //              }\n  //       }\n  //   }\n  //   window.addEventListener('scroll',onScroll)\n  //   return()=>{\n  //   window.removeEventListener('scroll',onScroll)    \n  //   }\n  //   },[hasMorePosts,loadPostsLoading])\n\n\n  return (\n    <div > \n   \n    \n            <Row gutter={12} >\n               \n               \n                <Col  span={14} >\n                  \n              \n                  \n                  <Rank></Rank>\n                  <Row>\n                  <Col span={16}>\n                <Goal/>\n                  </Col>\n                  <Col span={8}>\n                  <MyNote></MyNote>\n                    </Col>\n                    </Row>\n\n                    \n                    {/* <MyPurpose></MyPurpose> */}\n               \n                </Col>\n                \n                    <Col span={10}>\n                    <div style={{overflow:'auto' ,width: 900 ,height:'85vh',backgroundColor:'#d9d9d9'}} > \n\n{mainPosts.map((post)=> <PostCard post={post} key={post.id}/> )}\n</div>\n                    \n                    </Col>\n\n            </Row>\n            \n    </div>\n  )\n}\n\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n    \n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  context.store.dispatch({\n    type:LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n      type:LOAD_POSTS_REQUEST\n  })\n  context.store.dispatch(END)\n  await context.store.sagaTask.toPromise()\n})\n\nexport default index;\n"]},"metadata":{},"sourceType":"module"}