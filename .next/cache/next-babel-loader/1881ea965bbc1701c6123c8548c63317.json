{"ast":null,"code":"import shortid from \"shortid\";\nimport produce from \"immer\";\nimport faker from 'faker';\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '동영'\n    },\n    content: '첫 번째 게시글',\n    Images: [{\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg'\n    }]\n  }],\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null\n};\nexport var LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport var LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport var LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: shortid.generate(),\n    User: {\n      id: shortid.generate(),\n      nickname: faker.name.findName()\n    },\n    content: data,\n    Images: [{\n      src: faker.image.imageUrl()\n    }],\n    Comments: [{\n      User: {\n        id: shortid.generate(),\n        nickname: faker.name.findName()\n      },\n      content: faker.lorem.sentence()\n    }]\n  };\n};\n\nexport var generateDummyPost = function generateDummyPost(data) {\n  return Array(number).fill().map(function () {\n    return {\n      id: shortid.generate(),\n      User: {\n        id: shortid.generate(),\n        nickname: faker.name.findName()\n      },\n      content: faker.lorem.paragraph(),\n      Images: [{\n        src: faker.image.imageUrl()\n      }]\n    };\n  });\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = \"ㅇㅇㅇ\";\n        break;\n\n      default:\n        return state;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/dong/CapstonProject/reducers/post.js"],"names":["shortid","produce","faker","initialState","mainPosts","id","User","nickname","content","Images","src","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","dummyPost","data","generate","name","findName","image","imageUrl","Comments","lorem","sentence","generateDummyPost","Array","number","fill","map","paragraph","reducer","state","action","draft","type","unshift","error","concat","hasMorePosts","length"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,OAAP,MAAqB,OAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,IAAMC,YAAY,GAAC;AACvBC,EAAAA,SAAS,EAAC,CAAC;AAEVC,IAAAA,EAAE,EAAE,CAFM;AAGVC,IAAAA,IAAI,EAAE;AACJD,MAAAA,EAAE,EAAE,CADA;AAEJE,MAAAA,QAAQ,EAAE;AAFN,KAHI;AAOVC,IAAAA,OAAO,EAAE,UAPC;AAQVC,IAAAA,MAAM,EAAE,CAAC;AACPC,MAAAA,GAAG,EAAE;AADE,KAAD,EAEL;AACDA,MAAAA,GAAG,EAAE;AADJ,KAFK,EAIL;AACDA,MAAAA,GAAG,EAAE;AADJ,KAJK;AARE,GAAD,CADa;AAmBvBC,EAAAA,gBAAgB,EAAE,KAnBK;AAoBvBC,EAAAA,aAAa,EAAE,KApBQ;AAqBvBC,EAAAA,cAAc,EAAE,IArBO;AAsBvBC,EAAAA,cAAc,EAAC,KAtBQ;AAuBvBC,EAAAA,WAAW,EAAC,KAvBW;AAwBvBC,EAAAA,YAAY,EAAC;AAxBU,CAAnB;AA2BP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AAEP,OAAO,IAAMC,gBAAgB,GAAE,kBAAxB;AACP,OAAO,IAAMC,gBAAgB,GAAE,kBAAxB;AACP,OAAO,IAAMC,gBAAgB,GAAE,kBAAxB;;AAIP,IAAMC,SAAS,GAAC,SAAVA,SAAU,CAACC,IAAD;AAAA,SAAS;AACrBnB,IAAAA,EAAE,EAACL,OAAO,CAACyB,QAAR,EADkB;AAErBnB,IAAAA,IAAI,EAAC;AACHD,MAAAA,EAAE,EAACL,OAAO,CAACyB,QAAR,EADA;AAEHlB,MAAAA,QAAQ,EAACL,KAAK,CAACwB,IAAN,CAAWC,QAAX;AAFN,KAFgB;AAMrBnB,IAAAA,OAAO,EAACgB,IANa;AAOrBf,IAAAA,MAAM,EAAC,CACL;AACEC,MAAAA,GAAG,EAACR,KAAK,CAAC0B,KAAN,CAAYC,QAAZ;AADN,KADK,CAPc;AAYrBC,IAAAA,QAAQ,EAAC,CAAC;AACRxB,MAAAA,IAAI,EAAC;AACHD,QAAAA,EAAE,EAACL,OAAO,CAACyB,QAAR,EADA;AAEHlB,QAAAA,QAAQ,EAACL,KAAK,CAACwB,IAAN,CAAWC,QAAX;AAFN,OADG;AAKRnB,MAAAA,OAAO,EAACN,KAAK,CAAC6B,KAAN,CAAYC,QAAZ;AALA,KAAD;AAZY,GAAT;AAAA,CAAhB;;AAqBA,OAAO,IAAMC,iBAAiB,GAAC,SAAlBA,iBAAkB,CAACT,IAAD;AAAA,SAASU,KAAK,CAACC,MAAD,CAAL,CAAcC,IAAd,GAAqBC,GAArB,CAAyB;AAAA,WAAM;AACnEhC,MAAAA,EAAE,EAACL,OAAO,CAACyB,QAAR,EADgE;AAEnEnB,MAAAA,IAAI,EAAC;AACHD,QAAAA,EAAE,EAACL,OAAO,CAACyB,QAAR,EADA;AAEHlB,QAAAA,QAAQ,EAACL,KAAK,CAACwB,IAAN,CAAWC,QAAX;AAFN,OAF8D;AAMnEnB,MAAAA,OAAO,EAACN,KAAK,CAAC6B,KAAN,CAAYO,SAAZ,EAN2D;AAOnE7B,MAAAA,MAAM,EAAC,CACL;AACEC,QAAAA,GAAG,EAACR,KAAK,CAAC0B,KAAN,CAAYC,QAAZ;AADN,OADK;AAP4D,KAAN;AAAA,GAAzB,CAAT;AAAA,CAAxB;;AAmBP,IAAMU,OAAO,GAAC,SAARA,OAAQ,GAA6B;AAAA,MAA5BC,KAA4B,uEAAtBrC,YAAsB;AAAA,MAATsC,MAAS;AACvC,SAAOxC,OAAO,CAACuC,KAAD,EAAO,UAACE,KAAD,EAAS;AAC1B,YAAOD,MAAM,CAACE,IAAd;AACI,WAAKvB,gBAAL;AACIsB,QAAAA,KAAK,CAAC5B,cAAN,GAAuB,IAAvB;AACA4B,QAAAA,KAAK,CAAC3B,WAAN,GAAoB,KAApB;AACA2B,QAAAA,KAAK,CAAC1B,YAAN,GAAqB,IAArB;AACA;;AACF,WAAKK,gBAAL;AACEqB,QAAAA,KAAK,CAAC5B,cAAN,GAAuB,KAAvB;AACA4B,QAAAA,KAAK,CAAC3B,WAAN,GAAoB,IAApB;AACA2B,QAAAA,KAAK,CAACtC,SAAN,CAAgBwC,OAAhB,CAAwBrB,SAAS,CAACkB,MAAM,CAACjB,IAAR,CAAjC;AACA;;AACF,WAAKF,gBAAL;AACEoB,QAAAA,KAAK,CAAC5B,cAAN,GAAuB,KAAvB;AACA4B,QAAAA,KAAK,CAAC1B,YAAN,GAAqByB,MAAM,CAACI,KAA5B;AACA;;AACA,WAAK5B,kBAAL;AACIyB,QAAAA,KAAK,CAAC/B,gBAAN,GAAyB,IAAzB;AACA+B,QAAAA,KAAK,CAAC9B,aAAN,GAAsB,KAAtB;AACA8B,QAAAA,KAAK,CAAC7B,cAAN,GAAuB,IAAvB;AACA;;AACA,WAAKK,kBAAL;AACAwB,QAAAA,KAAK,CAAC/B,gBAAN,GAAyB,KAAzB;AACA+B,QAAAA,KAAK,CAAC9B,aAAN,GAAsB,IAAtB;AACA8B,QAAAA,KAAK,CAACtC,SAAN,GAAkBqC,MAAM,CAACjB,IAAP,CAAYsB,MAAZ,CAAmBJ,KAAK,CAACtC,SAAzB,CAAlB;AACAsC,QAAAA,KAAK,CAACK,YAAN,GAAqBL,KAAK,CAACtC,SAAN,CAAgB4C,MAAhB,GAAyB,EAA9C;AACA;;AACA,WAAK7B,kBAAL;AACAuB,QAAAA,KAAK,CAAC/B,gBAAN,GAAyB,KAAzB;AACA+B,QAAAA,KAAK,CAAC7B,cAAN,GAAuB,KAAvB;AACA;;AAER;AACI,eAAO2B,KAAP;AAhCR;AAkCH,GAnCa,CAAd;AAoCH,CArCD;;AAuCA,eAAeD,OAAf","sourcesContent":["import shortid from \"shortid\";\nimport produce  from \"immer\";\nimport faker from 'faker';\n\n\nexport const initialState={\n   mainPosts:[{\n    \n    id: 1,\n    User: {\n      id: 1,\n      nickname: '동영',\n    },\n    content: '첫 번째 게시글',\n    Images: [{\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\n    }]\n  \n\n}],\n   loadPostsLoading: false,\n   loadPostsDone: false,\n   loadPostsError: null,\n   addPostLoading:false,\n   addPostDone:false,\n   addPostError:null,\n}\n\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\n\nexport const ADD_POST_REQUEST ='ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS ='ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE ='ADD_POST_FAILURE';\n\n\n\nconst dummyPost=(data)=>({\n    id:shortid.generate(),\n    User:{\n      id:shortid.generate(),\n      nickname:faker.name.findName()\n    },\n    content:data,\n    Images:[\n      {\n        src:faker.image.imageUrl()\n      }\n    ],\n    Comments:[{\n      User:{\n        id:shortid.generate(),\n        nickname:faker.name.findName()\n      },\n      content:faker.lorem.sentence()\n    } ]\n})\n\nexport const generateDummyPost=(data)=> Array(number).fill().map(( )=>({\n    id:shortid.generate(),\n    User:{\n      id:shortid.generate(),\n      nickname:faker.name.findName()\n    },\n    content:faker.lorem.paragraph(),\n    Images:[\n      {\n        src:faker.image.imageUrl()\n      }\n    ],\n   \n  })) \n  \n\n\n\n\nconst reducer=(state=initialState,action)=>{\n    return produce(state,(draft)=>{\n        switch(action.type){\n            case ADD_POST_REQUEST:\n                draft.addPostLoading = true;\n                draft.addPostDone = false;\n                draft.addPostError = null;\n                break;\n              case ADD_POST_SUCCESS: \n                draft.addPostLoading = false;\n                draft.addPostDone = true;\n                draft.mainPosts.unshift(dummyPost(action.data));\n                break;\n              case ADD_POST_FAILURE:\n                draft.addPostLoading = false;\n                draft.addPostError = action.error;\n                break;\n                case LOAD_POSTS_REQUEST:\n                    draft.loadPostsLoading = true;\n                    draft.loadPostsDone = false;\n                    draft.loadPostsError = null;\n                    break;\n                    case LOAD_POSTS_SUCCESS:\n                    draft.loadPostsLoading = false;\n                    draft.loadPostsDone = true;\n                    draft.mainPosts = action.data.concat(draft.mainPosts);\n                    draft.hasMorePosts = draft.mainPosts.length < 50;\n                    break;\n                    case LOAD_POSTS_FAILURE:\n                    draft.loadPostsLoading = false; \n                    draft.loadPostsError = \"ㅇㅇㅇ\";\n                    break;\n           \n            default:\n                return state\n        }\n    })\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}