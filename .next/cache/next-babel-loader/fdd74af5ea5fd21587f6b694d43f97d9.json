{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/dong/CapstonProject/pages/Create/[id].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport { Polyline, Marker, StreetViewPanorama, MarkerClusterer } from '@react-google-maps/api';\nimport { Card, Table, Button, Slider, Switch, Row, Col, Input } from 'antd';\nimport { fa } from 'faker/lib/locales'; // import CreatedPath from './createdPath';\n\nimport SideBar from '../../component/Layout/SideBar';\nimport { useDispatch, useSelector } from 'react-redux'; // import { BIKE_MAP_REQUEST } from '../reducers/map';\n\nimport { ADD_TRACK_REQUEST } from '../../reducers/map';\nimport create from '@ant-design/icons/lib/components/IconFont';\nimport useInput from '../../hooks/useInput';\n\nfunction createPath() {\n  _s();\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      trackName = _useInput2[0],\n      onChangeTrackName = _useInput2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.map;\n  }),\n      createMap = _useSelector.createMap;\n\n  var dispatch = useDispatch();\n  var dummyMap = {\n    id: 2,\n    name: '경북대학교',\n    distance: 350,\n    userId: 1,\n    description: '설명',\n    event: 'bike',\n    gps: {\n      type: \"LineString\",\n      coordinates: [[128.6107980854627, 35.892532678390346], [128.6068460393017, 35.88766339206395], [128.61174492985546, 35.88602911241712], [128.6145031287387, 35.88856389908935], [128.6123212699206, 35.89099855199497], [128.6128976099858, 35.89463371630573]],\n      id: \"62133c5ff58346f2e09756af\"\n    },\n    altitude: [{\n      x: 0,\n      y: 8\n    }, {\n      x: 1,\n      y: 5\n    }, {\n      x: 2,\n      y: 4\n    }, {\n      x: 3,\n      y: 9\n    }, {\n      x: 4,\n      y: 34\n    }, {\n      x: 5,\n      y: 7\n    }],\n    start_latlng: [128.6107980854627, 35.892532678390346],\n    end_latlng: [128.6128976099858, 35.89463371630573],\n    createdAt: \"2022-02-21T07:16:47.648Z\"\n  };\n  var mapContainerStyle = {\n    height: \"400px\",\n    width: \"800px\",\n    marginLeft: '50px',\n    marginTop: '20px'\n  };\n\n  var _useState = useState(5),\n      strokeWeight = _useState[0],\n      setStrokeWeight = _useState[1];\n\n  var mouseOut = function mouseOut() {\n    setStrokeWeight(5);\n    console.log('aaa');\n  };\n\n  var mouseOver = function mouseOver() {\n    setStrokeWeight(10);\n    console.log('over');\n  };\n\n  var options = {\n    strokeColor: '#FF0000',\n    strokeOpacity: 0.8,\n    strokeWeight: 5,\n    fillColor: '#FF0000',\n    fillOpacity: 0.35,\n    clickable: true,\n    draggable: false,\n    editable: false,\n    visible: true,\n    radius: 30000,\n    //-27부터 호주 시작해서 점찍고 점찍고 한다\n    paths: [[{\n      lat: 35.969997373905,\n      lng: 128.45170755523503\n    }, {\n      lat: 35.985501427015464,\n      lng: 128.40407191943035\n    }, {\n      lat: 35.89580489690752,\n      lng: 128.62238368221892\n    }]],\n    zIndex: 1\n  };\n\n  var drag = function drag() {\n    console.log('drag');\n  };\n\n  var onLoad = function onLoad(polyline) {\n    console.log('polyline: ', polyline);\n  };\n\n  var _useState2 = useState([0, createMap.gps.coordinates.length - 1]),\n      number = _useState2[0],\n      setNumber = _useState2[1];\n\n  var _useState3 = useState(),\n      distacnce = _useState3[0],\n      setDistance = _useState3[1];\n\n  var _useState4 = useState({\n    lat: createMap.gps.coordinates[0][1],\n    lng: createMap.gps.coordinates[0][0]\n  }),\n      leftPath = _useState4[0],\n      setLeftPath = _useState4[1];\n\n  var _useState5 = useState({\n    lat: createMap.gps.coordinates[createMap.gps.coordinates.length - 1][1],\n    lng: createMap.gps.coordinates[createMap.gps.coordinates.length - 1][0]\n  }),\n      rightPath = _useState5[0],\n      setRightPath = _useState5[1];\n\n  var change = function change(value) {\n    setNumber(value);\n  };\n\n  useEffect(function () {\n    setLeftPath({\n      lat: createMap.gps.coordinates[number[0]][1],\n      lng: createMap.gps.coordinates[number[0]][0]\n    });\n    console.log(number[0]);\n  }, [number[0]]);\n  useEffect(function () {\n    setRightPath({\n      lat: createMap.gps.coordinates[number[1]][1],\n      lng: createMap.gps.coordinates[number[1]][0]\n    });\n    console.log(number[1]);\n  }, [number[1]]);\n  var storePath = [];\n  var altitudes = [];\n  var totalDistance = 0;\n\n  var _useState6 = useState(),\n      newPath = _useState6[0],\n      setNewPath = _useState6[1];\n\n  var pathStore = function pathStore() {\n    for (var i = number[0]; i < number[1] + 1; i++) {\n      storePath.push(createMap.gps.coordinates[i]);\n      altitudes.push(createMap.altitude[i].y);\n    }\n\n    totalDistance = createMap.distance[number[1]] - createMap.distance[number[0]];\n    console.log(totalDistance, 'al', altitudes); // setNewPath(storePath)  \n    // console.log('..',newPath)\n    //   createMap.altitude.map((v)=>(\n    //     altitudes.push(v.y)\n    //     ))\n\n    dispatch({\n      type: ADD_TRACK_REQUEST,\n      data: {\n        trackName: trackName,\n        totalDistance: totalDistance,\n        // userId:createMap.track.user.userId,//나중에포스트 sns되면\n        // name:createMap.track.user.name,//나중에 포스트Sns되면\n        // description:createMap.track.description,//나중에포스트sns되면\n        // checkPoint:createMap.track.checkPoint//나중에포스트sns되면\n        //더미\n        userId: 1,\n        name: '김동영',\n        description: '라이딩하기좋아요',\n        checkPoint: [[1, 2]],\n        //더미\n        event: createMap.event,\n        gps: storePath,\n        altitude: altitudes\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    span: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }), __jsx(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }, number[0]), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 1\n    }\n  }, number[1]), __jsx(Slider, {\n    range: true,\n    defaultValue: number,\n    max: createMap.gps.coordinates.length - 1,\n    onChange: change,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  }), __jsx(LoadScript, {\n    googleMapsApiKey: \"AIzaSyAYsO2CGL0YCjMoLk29eyitFC2PIJnJbYE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 5\n    }\n  }, __jsx(GoogleMap, {\n    id: \"marker-example\",\n    mapContainerStyle: mapContainerStyle,\n    zoom: 12,\n    center: {\n      lat: 35.89567677518036,\n      lng: 128.6200643553443\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }\n  }, __jsx(Marker, {\n    position: leftPath,\n    icon: {\n      url: ' http://maps.google.com/mapfiles/ms/icons/blue.png'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 5\n    }\n  }), __jsx(Marker, {\n    position: rightPath,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 5\n    }\n  }), __jsx(Polyline, {\n    onDragStart: drag,\n    onLoad: onLoad,\n    options: options,\n    path: createMap.gps.coordinates.map(function (m) {\n      return {\n        lat: m[1],\n        lng: m[0]\n      };\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 10\n    }\n  }))), __jsx(Input, {\n    placeholder: \"\\uACBD\\uB85C\\uC774\\uB984\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n    value: trackName,\n    onChange: onChangeTrackName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }\n  }), __jsx(Button, {\n    onClick: pathStore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }\n  }, \"\\uACBD\\uB85C\\uB9CC\\uB4E4\\uAE30\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 5\n    }\n  }))));\n} // export async function getStaticProps() {\n//     return {\n//       props: {\n//         data: dispatch({\n//             type:BIKE_MAP_REQUEST\n//         }),\n//       },\n//       // revalidate: 10,\n//     };\n//   }\n\n\n_s(createPath, \"rhAnVgo8KQi+RVCWfCpoZODyP9c=\", false, function () {\n  return [useInput, useSelector, useDispatch];\n});\n\nexport var __N_SSG = true;\nexport default createPath;","map":{"version":3,"sources":["/Users/dong/CapstonProject/pages/Create/[id].js"],"names":["React","useEffect","useState","GoogleMap","LoadScript","Polyline","Marker","StreetViewPanorama","MarkerClusterer","Card","Table","Button","Slider","Switch","Row","Col","Input","fa","SideBar","useDispatch","useSelector","ADD_TRACK_REQUEST","create","useInput","createPath","trackName","onChangeTrackName","state","map","createMap","dispatch","dummyMap","id","name","distance","userId","description","event","gps","type","coordinates","altitude","x","y","start_latlng","end_latlng","createdAt","mapContainerStyle","height","width","marginLeft","marginTop","strokeWeight","setStrokeWeight","mouseOut","console","log","mouseOver","options","strokeColor","strokeOpacity","fillColor","fillOpacity","clickable","draggable","editable","visible","radius","paths","lat","lng","zIndex","drag","onLoad","polyline","length","number","setNumber","distacnce","setDistance","leftPath","setLeftPath","rightPath","setRightPath","change","value","storePath","altitudes","totalDistance","newPath","setNewPath","pathStore","i","push","data","checkPoint","url","m"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport { Polyline ,Marker,StreetViewPanorama,MarkerClusterer} from '@react-google-maps/api';\nimport {Card,Table,Button,Slider, Switch,Row,Col,Input} from 'antd'\nimport { fa } from 'faker/lib/locales';\n// import CreatedPath from './createdPath';\nimport SideBar from '../../component/Layout/SideBar';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { BIKE_MAP_REQUEST } from '../reducers/map';\nimport { END } from 'redux-saga';\nimport wrapper from '../../store/configureStore';\nimport { ADD_TRACK_REQUEST, LOAD_CREATEMAP_REQUEST } from '../../reducers/map';\nimport axios from 'axios';\nimport create from '@ant-design/icons/lib/components/IconFont';\nimport useInput from '../../hooks/useInput';\n\n\n\n\nfunction createPath() {\n\n    const [trackName,onChangeTrackName]=useInput('');\n\n    const {createMap}=useSelector((state)=>state.map)\n\nconst dispatch=useDispatch()\n\n\nconst dummyMap={\n    id:2,\n    name:'경북대학교',\n    distance:350,\n    userId:1,\n    description:'설명',\n    event:'bike',\n    gps:{\n        type:\"LineString\",\n        coordinates: [\n            [\n                128.6107980854627,\n                35.892532678390346\n            ],\n            [\n                128.6068460393017,\n                35.88766339206395\n            ],\n            [\n                 128.61174492985546,\n                 35.88602911241712\n            ],\n            [128.6145031287387,\n                35.88856389908935\n            ],\n            [\n                128.6123212699206,\n                35.89099855199497\n            ],\n            [\n                128.6128976099858,\n                35.89463371630573\n            ]\n           \n        ],\n        id: \"62133c5ff58346f2e09756af\"\n    \n    },\n    altitude: [\n        { x: 0, y: 8 },\n        { x: 1, y: 5 },\n        { x: 2, y: 4 },\n        { x: 3, y: 9 },\n        { x: 4, y: 34 },\n        { x: 5, y: 7 },\n    ],\n    start_latlng: [\n        128.6107980854627,\n        35.892532678390346\n    ],\n    end_latlng: [\n        128.6128976099858,\n        35.89463371630573\n    ],\n    createdAt: \"2022-02-21T07:16:47.648Z\",\n    }\n\n\nconst mapContainerStyle = {\n    height: \"400px\",\n    width: \"800px\",\n    marginLeft:'50px',\n    marginTop:'20px'\n  };\n\n    \n\nconst [strokeWeight,setStrokeWeight]=useState(5)\n\n\nconst mouseOut=()=>{\n    setStrokeWeight(5)\n    console.log('aaa')\n}\n\nconst mouseOver=()=>{\n    setStrokeWeight(10)\n    console.log('over')\n}\n   \n\n    const options = {\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.8,\n        strokeWeight: 5,\n        fillColor: '#FF0000',\n        fillOpacity: 0.35,\n        clickable: true,\n        draggable: false,\n        editable: false,\n        visible: true,\n        radius: 30000,\n        //-27부터 호주 시작해서 점찍고 점찍고 한다\n        paths: [\n              [\n                  {lat:  35.969997373905, lng: 128.45170755523503},\n                  {lat:35.985501427015464, lng:128.40407191943035},\n              \n                  {lat: 35.89580489690752, lng: 128.62238368221892}\n                  \n              ]\n        \n        ],\n        zIndex: 1\n      };\n\n      const drag=()=>{\n          console.log('drag')\n      }\n\n      const onLoad = polyline => {\n        console.log('polyline: ', polyline)\n      };\n\n      const [number,setNumber]=useState([0,createMap.gps.coordinates.length-1])\n\n      const [distacnce,setDistance]=useState()\n      \n      const [leftPath,setLeftPath]=useState({\n          lat:createMap.gps.coordinates[0][1],lng:createMap.gps.coordinates[0][0]\n        })\n      const [rightPath,setRightPath]=useState({\n        lat:createMap.gps.coordinates[createMap.gps.coordinates.length-1][1],lng:createMap.gps.coordinates[createMap.gps.coordinates.length-1][0]\n      })\n\n      const change=(value)=>{\n        setNumber(value)\n       \n      }\n\n      useEffect(()=>{\n          setLeftPath({\n              lat:createMap.gps.coordinates[number[0]][1],\n              lng:createMap.gps.coordinates[number[0]][0]\n          \n            })\n            console.log(number[0])\n\n      },[number[0]])\n      useEffect(()=>{\n        setRightPath({\n            lat:createMap.gps.coordinates[number[1]][1],\n            lng:createMap.gps.coordinates[number[1]][0]\n        \n          })\n          console.log(number[1])\n\n\n    },[number[1]])\n    const storePath=[]\n    const altitudes=[]\n   \n    \n    var totalDistance=0\n    \n    const [newPath,setNewPath]=useState()\n\n    const pathStore=()=>{\n        \n        for(var i=number[0]; i<number[1]+1; i++){\n            storePath.push(createMap.gps.coordinates[i])\n            altitudes.push(createMap.altitude[i].y)\n            \n        }\n        totalDistance=createMap.distance[number[1]]-createMap.distance[number[0]]\n        console.log(totalDistance,'al',altitudes)\n        // setNewPath(storePath)  \n\n        // console.log('..',newPath)\n        \n    //   createMap.altitude.map((v)=>(\n    //     altitudes.push(v.y)\n    //     ))\n\n        dispatch({\n            type:ADD_TRACK_REQUEST,\n            data:{\n                trackName,\n                totalDistance,\n                // userId:createMap.track.user.userId,//나중에포스트 sns되면\n                // name:createMap.track.user.name,//나중에 포스트Sns되면\n                // description:createMap.track.description,//나중에포스트sns되면\n                // checkPoint:createMap.track.checkPoint//나중에포스트sns되면\n                //더미\n                userId:1,\n                name:'김동영',\n                description:'라이딩하기좋아요',\n                checkPoint:[[1,2]],\n                //더미\n                event:createMap.event,\n                \n                gps:storePath,\n                altitude:altitudes\n            }\n        })\n      \n    }\n\n  return (\n    <div>\n        <Row>\n            <Col span={4}>\n                {/* <SideBar></SideBar> */}\n            </Col>\n            <Col span={12}>\n            <h1>{number[0]}</h1>\n<h1>{number[1]}</h1>\n        <Slider range defaultValue={number} max={createMap.gps.coordinates.length-1} onChange={change} />\n        {/* {state&&<Switch size=\"small\" checked={disabled} onChange={this.handleDisabledChange} />} */}\n    <LoadScript\n    googleMapsApiKey=\"AIzaSyAYsO2CGL0YCjMoLk29eyitFC2PIJnJbYE\"\n    >\n        \n      <GoogleMap\n        id=\"marker-example\"\n        mapContainerStyle={mapContainerStyle}\n        zoom={12}\n        \n        center={{lat:35.89567677518036, lng:  128.6200643553443}}\n       \n        \n      \n        \n      >\n    \n    {/* <Marker  position={{lat:dummyMap.start_latlng[1],lng:dummyMap.start_latlng[0]}}  /> */}\n   \n    <Marker position={leftPath} icon={{url:' http://maps.google.com/mapfiles/ms/icons/blue.png',}} ></Marker>\n    <Marker position={rightPath} ></Marker>\n    \n   \n         <Polyline onDragStart={drag} onLoad={onLoad}  options={options} path={createMap.gps.coordinates.map((m)=>(\n            {\n                lat:m[1],\n                lng:m[0]\n            }\n        ))}></Polyline> \n     \n    \n    \n    \n    \n    \n        \n      </GoogleMap>\n      </LoadScript>\n      \n      \n      <Input placeholder='경로이름을 입력해주세요' value={trackName} onChange={onChangeTrackName}></Input>\n      <Button onClick={pathStore}>경로만들기</Button>\n\n    <div>\n        {/* <CreatedPath mapContainerStyle={mapContainerStyle} options={options} newPath={newPath} dummyMap={dummyMap}></CreatedPath> */}\n        </div>  \n\n            </Col>\n        </Row>\n\n\n\n{/* <Slider defaultValue={number} onChange={change} /> */}\n\n    </div>\n  )\n}\n\n// export async function getStaticProps() {\n//     return {\n//       props: {\n//         data: dispatch({\n//             type:BIKE_MAP_REQUEST\n//         }),\n//       },\n//       // revalidate: 10,\n//     };\n//   }\n\nexport async function getStaticPaths(){\n    const posts= await axios.get('http://13.124.24.179/api/gpsdata')\n   \n\nvar paths1=posts.data.gpsDataId.map((id)=>({\n     params:{id:id._id}\n }))\n\n return{\n     paths:paths1,\n    // paths:[  { params: { id: '62256147dc2958292cb17110' } },],\n     fallback:false\n }\n}\n\nexport const getStaticProps=wrapper.getStaticProps(async (context)=>{\n    context.store.dispatch({\n        type:LOAD_CREATEMAP_REQUEST,\n        data:context.params.id\n    })\n    context.store.dispatch(END)\n    await context.store.sagaTask.toPromise()\n})\n\n\nexport default createPath"]},"metadata":{},"sourceType":"module"}