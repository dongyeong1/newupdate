{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/dong/CapstonProject/pages/Create/[id].js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport { Polyline, Marker, StreetViewPanorama, MarkerClusterer } from '@react-google-maps/api';\nimport { Form, Card, Table, Button, Slider, Switch, Row, Col, Input } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_TRACK_REQUEST } from '../../reducers/map';\nimport useInput from '../../hooks/useInput';\nimport { LOAD_LOGIN_REQUEST } from '../../reducers/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createPath() {\n  _s();\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      trackName = _useInput2[0],\n      onChangeTrackName = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      trackDescription = _useInput4[0],\n      onChangeTrackDescription = _useInput4[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.map;\n  }),\n      createMap = _useSelector.createMap;\n\n  var _useState = useState([0, createMap.gps.coordinates.length - 1]),\n      number = _useState[0],\n      setNumber = _useState[1];\n\n  var _useState2 = useState([createMap.gps.coordinates]),\n      twoPolyline = _useState2[0],\n      setTwoPolyline = _useState2[1];\n\n  var _useState3 = useState({\n    lat: createMap.gps.coordinates[0][1],\n    lng: createMap.gps.coordinates[0][0]\n  }),\n      leftPath = _useState3[0],\n      setLeftPath = _useState3[1];\n\n  var _useState4 = useState({\n    lat: createMap.gps.coordinates[createMap.gps.coordinates.length - 1][1],\n    lng: createMap.gps.coordinates[createMap.gps.coordinates.length - 1][0]\n  }),\n      rightPath = _useState4[0],\n      setRightPath = _useState4[1];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch({\n      type: LOAD_LOGIN_REQUEST\n    });\n  }, []);\n  useEffect(function () {\n    setLeftPath({\n      lat: createMap.gps.coordinates[number[0]][1],\n      lng: createMap.gps.coordinates[number[0]][0]\n    });\n    setTwoPolyline([createMap.gps.coordinates.slice(number[0], number[1])]);\n    console.log('two', twoPolyline);\n    console.log(number[0]);\n  }, [number[0]]);\n  useEffect(function () {\n    setRightPath({\n      lat: createMap.gps.coordinates[number[1]][1],\n      lng: createMap.gps.coordinates[number[1]][0]\n    });\n    setTwoPolyline([createMap.gps.coordinates.slice(number[0], number[1])]);\n    console.log('three', twoPolyline);\n    console.log(number[1]);\n  }, [number[1]]);\n  var mapContainerStyle = {\n    height: \"500px\",\n    width: \"600px\",\n    marginTop: 30\n  };\n  var options = {\n    strokeColor: '#348feb',\n    strokeOpacity: 0.8,\n    strokeWeight: 5,\n    fillColor: '#FF0000',\n    fillOpacity: 0.35,\n    clickable: true,\n    draggable: false,\n    editable: false,\n    visible: true,\n    radius: 30000,\n    paths: [[{\n      lat: 35.969997373905,\n      lng: 128.45170755523503\n    }, {\n      lat: 35.985501427015464,\n      lng: 128.40407191943035\n    }, {\n      lat: 35.89580489690752,\n      lng: 128.62238368221892\n    }]],\n    zIndex: 1\n  };\n  var options111 = {\n    strokeColor: '#d43b24',\n    strokeOpacity: 0.8,\n    strokeWeight: 5,\n    fillColor: '#FF0000',\n    fillOpacity: 0.35,\n    clickable: true,\n    draggable: false,\n    editable: false,\n    visible: true,\n    radius: 30000,\n    //-27부터 호주 시작해서 점찍고 점찍고 한다\n    paths: [[{\n      lat: 35.969997373905,\n      lng: 128.45170755523503\n    }, {\n      lat: 35.985501427015464,\n      lng: 128.40407191943035\n    }, {\n      lat: 35.89580489690752,\n      lng: 128.62238368221892\n    }]],\n    zIndex: 1\n  };\n\n  var change = function change(value) {\n    console.log('value', value);\n    setNumber(value);\n  };\n\n  var storePath = [];\n  var altitudes = [];\n  var totalDistance = 0;\n\n  var pathStore = function pathStore() {\n    for (var i = number[0]; i < number[1] + 1; i++) {\n      storePath.push(createMap.gps.coordinates[i]);\n      altitudes.push(createMap.altitude[i].y);\n    }\n\n    totalDistance = createMap.distance[number[1]] - createMap.distance[number[0]];\n    console.log(totalDistance, 'al', altitudes);\n    dispatch({\n      type: ADD_TRACK_REQUEST,\n      data: {\n        trackName: trackName,\n        totalDistance: totalDistance,\n        // userId:createMap.track.user.userId,//나중에포스트 sns되면\n        // name:createMap.track.user.name,//나중에 포스트Sns되면\n        // desription:createMap.track.description,//나중에포스트sns되면\n        // checkPoint:createMap.track.checkPoint//나중에포스트sns되면\n        //더미\n        userId: createMap.user.userId,\n        name: createMap.user.name,\n        description: trackDescription,\n        checkPoint: [[1, 2]],\n        //더미\n        event: createMap.event,\n        gps: storePath,\n        altitude: altitudes\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            fontSize: 40\n          },\n          children: \"\\uACBD\\uBD81\\uB300\\uD559\\uAD50 \\uD55C\\uBC14\\uD034\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: 40\n          },\n          children: /*#__PURE__*/_jsxDEV(Slider, {\n            range: true,\n            defaultValue: number,\n            max: createMap.gps.coordinates.length - 1,\n            onChange: change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n          googleMapsApiKey: \"AIzaSyAYsO2CGL0YCjMoLk29eyitFC2PIJnJbYE\",\n          children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n            id: \"marker-example\",\n            mapContainerStyle: mapContainerStyle,\n            zoom: 14,\n            center: {\n              lat: createMap.gps.coordinates[createMap.gps.coordinates.length % 2][1],\n              lng: createMap.gps.coordinates[createMap.gps.coordinates.length % 2][0]\n            },\n            children: [/*#__PURE__*/_jsxDEV(Marker, {\n              position: leftPath,\n              icon: {\n                url: ' http://maps.google.com/mapfiles/ms/icons/blue.png'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Marker, {\n              position: rightPath\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n              options: options,\n              path: createMap.gps.coordinates.map(function (m) {\n                return {\n                  lat: m[1],\n                  lng: m[0]\n                };\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n              options: options111,\n              path: twoPolyline[0].map(function (m) {\n                return {\n                  lat: m[1],\n                  lng: m[0]\n                };\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            marginTop: 150,\n            borderRadius: 40,\n            marginLeft: 90\n          },\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            style: {},\n            placeholder: \"\\uACBD\\uB85C\\uC774\\uB984\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n            value: trackName,\n            onChange: onChangeTrackName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input.TextArea, {\n            placeholder: \"\\uACBD\\uB85C\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n            value: trackDescription,\n            onChange: onChangeTrackDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: pathStore,\n            children: \"\\uACBD\\uB85C\\uB9CC\\uB4E4\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 1\n  }, this);\n}\n\n_s(createPath, \"bqzHSl55wMmTVGC83H93yU6RYqo=\", false, function () {\n  return [useInput, useInput, useSelector, useDispatch];\n});\n\nexport var __N_SSG = true;\nexport default createPath;","map":{"version":3,"sources":["/Users/dong/CapstonProject/pages/Create/[id].js"],"names":["React","useEffect","useState","GoogleMap","LoadScript","Polyline","Marker","StreetViewPanorama","MarkerClusterer","Form","Card","Table","Button","Slider","Switch","Row","Col","Input","useDispatch","useSelector","ADD_TRACK_REQUEST","useInput","LOAD_LOGIN_REQUEST","createPath","trackName","onChangeTrackName","trackDescription","onChangeTrackDescription","state","map","createMap","gps","coordinates","length","number","setNumber","twoPolyline","setTwoPolyline","lat","lng","leftPath","setLeftPath","rightPath","setRightPath","dispatch","type","slice","console","log","mapContainerStyle","height","width","marginTop","options","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","clickable","draggable","editable","visible","radius","paths","zIndex","options111","change","value","storePath","altitudes","totalDistance","pathStore","i","push","altitude","y","distance","data","userId","user","name","description","checkPoint","event","fontSize","marginLeft","url","m","borderRadius"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport { Polyline ,Marker,StreetViewPanorama,MarkerClusterer} from '@react-google-maps/api';\nimport {Form,Card,Table,Button,Slider, Switch,Row,Col,Input} from 'antd'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { END } from 'redux-saga';\nimport wrapper from '../../store/configureStore';\nimport { ADD_TRACK_REQUEST, LOAD_CREATEMAP_REQUEST } from '../../reducers/map';\nimport axios from 'axios';\nimport useInput from '../../hooks/useInput';\nimport { LOAD_LOGIN_REQUEST } from '../../reducers/user';\n\n\nfunction createPath() {\n    \n\n    const [trackName,onChangeTrackName]=useInput('');\n    const [trackDescription,onChangeTrackDescription]=useInput('')\n\n    const {createMap}=useSelector((state)=>state.map)\n\n    const [number,setNumber]=useState([0,createMap.gps.coordinates.length-1])\n    const [twoPolyline,setTwoPolyline]=useState([createMap.gps.coordinates])\n    \n    const [leftPath,setLeftPath]=useState({\n        lat:createMap.gps.coordinates[0][1],lng:createMap.gps.coordinates[0][0]\n      })\n    const [rightPath,setRightPath]=useState({\n      lat:createMap.gps.coordinates[createMap.gps.coordinates.length-1][1],lng:createMap.gps.coordinates[createMap.gps.coordinates.length-1][0]\n    })\n\n\n    const dispatch=useDispatch()\n   \n\n        \n        useEffect(()=>{\n            dispatch({\n                type: LOAD_LOGIN_REQUEST\n                });\n        },[])\n\n\n        useEffect(()=>{\n            setLeftPath({\n                lat:createMap.gps.coordinates[number[0]][1],\n                lng:createMap.gps.coordinates[number[0]][0]\n            \n              })\n              setTwoPolyline([createMap.gps.coordinates.slice(number[0],number[1])])\n              console.log('two',twoPolyline)\n              console.log(number[0])\n  \n        },[number[0]])\n        useEffect(()=>{\n          setRightPath({\n              lat:createMap.gps.coordinates[number[1]][1],\n              lng:createMap.gps.coordinates[number[1]][0]\n          \n            })\n            setTwoPolyline([createMap.gps.coordinates.slice(number[0],number[1])])\n            console.log('three',twoPolyline)\n            console.log(number[1])\n  \n  \n      },[number[1]])\n\nconst mapContainerStyle = {\n    height: \"500px\",\n    width: \"600px\",\n    marginTop:30 \n  };\n\n    const options = {\n        strokeColor: '#348feb',\n        strokeOpacity: 0.8,\n        strokeWeight: 5,\n        fillColor: '#FF0000',\n        fillOpacity: 0.35,\n        clickable: true,\n        draggable: false,\n        editable: false,\n        visible: true,\n        radius: 30000,\n        paths: [\n              [\n                  {lat:  35.969997373905, lng: 128.45170755523503},\n                  {lat:35.985501427015464, lng:128.40407191943035},\n                  {lat: 35.89580489690752, lng: 128.62238368221892}\n              ]\n        ],\n        zIndex: 1\n      };\n\n\n      const options111 = {\n        strokeColor: '#d43b24',\n        strokeOpacity: 0.8,\n        strokeWeight: 5,\n        fillColor: '#FF0000',\n        fillOpacity: 0.35,\n        clickable: true,\n        draggable: false,\n        editable: false,\n        visible: true,\n        radius: 30000,\n        //-27부터 호주 시작해서 점찍고 점찍고 한다\n        paths: [\n              [\n                  {lat:  35.969997373905, lng: 128.45170755523503},\n                  {lat:35.985501427015464, lng:128.40407191943035}, \n                  {lat: 35.89580489690752, lng: 128.62238368221892}               \n              ]     \n        ],\n        zIndex: 1\n      };\n\n\n\n   \n      const change=(value)=>{\n          console.log('value',value)\n        setNumber(value)\n       \n      }\n\n    \n    const storePath=[]\n    const altitudes=[]\n   \n    var totalDistance=0\n  \n    \n\n    const pathStore=()=>{\n        \n        for(var i=number[0]; i<number[1]+1; i++){\n            storePath.push(createMap.gps.coordinates[i])\n            altitudes.push(createMap.altitude[i].y)\n            \n        }\n        totalDistance=createMap.distance[number[1]]-createMap.distance[number[0]]\n        console.log(totalDistance,'al',altitudes)\n       \n        dispatch({\n            type:ADD_TRACK_REQUEST,\n            data:{\n                trackName,\n                totalDistance,\n                // userId:createMap.track.user.userId,//나중에포스트 sns되면\n                // name:createMap.track.user.name,//나중에 포스트Sns되면\n            // desription:createMap.track.description,//나중에포스트sns되면\n                // checkPoint:createMap.track.checkPoint//나중에포스트sns되면\n                //더미\n                userId:createMap.user.userId,\n                name:createMap.user.name,\n                description:trackDescription,\n                checkPoint:[[1,2]],\n                //더미\n                event:createMap.event,\n                \n                gps:storePath,\n                altitude:altitudes\n            }\n        })\n      \n    }\n\n  return (\n<div>\n<Row>\n    <Col span={12}>\n            <h1 style={{fontSize:40}}>경북대학교 한바퀴</h1>\n        <div style={{marginLeft:40}}><Slider range defaultValue={number} max={createMap.gps.coordinates.length-1} onChange={change} /></div>\n        \n        <LoadScript\n        googleMapsApiKey=\"AIzaSyAYsO2CGL0YCjMoLk29eyitFC2PIJnJbYE\"\n        >\n        \n      <GoogleMap\n        id=\"marker-example\"\n        mapContainerStyle={mapContainerStyle}\n        zoom={14}\n        center={{\n            lat: createMap.gps.coordinates[createMap.gps.coordinates.length%2][1],\n            lng: createMap.gps.coordinates[createMap.gps.coordinates.length%2][0],\n        }}>\n        \n        <Marker position={leftPath} icon={{url:' http://maps.google.com/mapfiles/ms/icons/blue.png',}} ></Marker>\n        <Marker position={rightPath} ></Marker>\n    \n         <Polyline   options={options} path={createMap.gps.coordinates.map((m)=>(\n            {\n                lat:m[1],\n                lng:m[0]\n            }\n        ))}></Polyline> \n        <Polyline  options={options111} path={twoPolyline[0].map((m)=>(\n            {\n                lat:m[1],\n                lng:m[0]\n            }\n        ))}></Polyline> \n\n        </GoogleMap>\n        </LoadScript>       \n    </Col>\n\n    <Col span={12}>         \n            <Card style={{marginTop:150,borderRadius:40,marginLeft:90}}>\n                <Input  style={{}} placeholder='경로이름을 입력해주세요' value={trackName} onChange={onChangeTrackName}/>\n                <Input.TextArea placeholder='경로내용을 입력해주세요' value={trackDescription} onChange={onChangeTrackDescription}/>\n            \n                <Button  onClick={pathStore}>경로만들기</Button>\n            </Card>\n    </Col>\n</Row>\n</div>\n  )\n}\n\nexport async function getStaticPaths(){\n    const posts= await axios.get('http://13.124.24.179/api/gpsdata')\n   \n\nvar paths1=posts.data.map((id)=>({\n     params:{id:id._id}\n }))\n\n return{\n     paths:paths1,\n    // paths:[  { params: { id: '62256147dc2958292cb17110' } },],\n     fallback:false\n }\n}\n\nexport const getStaticProps=wrapper.getStaticProps(async (context)=>{\n    const cookie = context.req ? context.req.headers.cookie : '';\n    axios.defaults.headers.Cookie = '';\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n   \n    context.store.dispatch({\n        type:LOAD_CREATEMAP_REQUEST,\n        data:context.params.id\n    })\n    context.store.dispatch(END)\n    await context.store.sagaTask.toPromise()\n})\n\nexport default createPath"]},"metadata":{},"sourceType":"module"}