{"ast":null,"code":"var _jsxFileName = \"/Users/dong/CapstonProject/pages/polylineTest.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport { Polyline, Marker, StreetViewPanorama, MarkerClusterer } from '@react-google-maps/api';\nimport AppLayout from '../component/AppLayout'; // import Streetview from 'react-google-streetview';// import RecordElevation from '../component/RecordElavation'\n\nimport { BIKE_MAP_REQUEST, SEARCH_MAP_REQUEST } from '../reducers/map';\nimport { LOAD_MAP_REQUEST } from '../reducers/map';\nimport GeomHandle from '../component/GoogleMap';\nimport { Input, Col, Row, Button } from 'antd';\nimport SideBar from '../component/Layout/SideBar';\nimport { InfoWindow } from '@react-google-maps/api';\nimport Router from 'next/router'; // import {useHistory} from \n\nimport Link from 'next/link';\nimport SelectMap from '../component/map/selectMap'; // import InfoWindow from '../component/InfoWindow';\n\nfunction polylineTest() {\n  // const {searchMap}=useSelector((state)=>state.map)\n  // const dispatch=useDispatch()\n  //    useEffect(()=>{\n  //     dispatch({\n  //         type:BIKE_MAP_REQUEST\n  //     })\n  //    },[])\n  // const [propsPosition,setPropsPosition]=useState()\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    span: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), __jsx(Col, {\n    span: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, __jsx(SelectMap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 8\n    }\n  }))));\n}\n\nexport const getStaticProps = wrapper.getStaticProps(async context => {\n  context.store.dispatch({\n    type: LOAD_MAP_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default /*#__PURE__*/React.memo(polylineTest);","map":{"version":3,"sources":["/Users/dong/CapstonProject/pages/polylineTest.js"],"names":["React","useState","useEffect","useDispatch","useSelector","GoogleMap","LoadScript","Polyline","Marker","StreetViewPanorama","MarkerClusterer","AppLayout","BIKE_MAP_REQUEST","SEARCH_MAP_REQUEST","LOAD_MAP_REQUEST","GeomHandle","Input","Col","Row","Button","SideBar","InfoWindow","Router","Link","SelectMap","polylineTest","getStaticProps","wrapper","context","store","dispatch","type","data","params","id","END","sagaTask","toPromise","memo"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,wBAAtC;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA0BC,kBAA1B,EAA6CC,eAA7C,QAAmE,wBAAnE;AACA,OAAOC,SAAP,MAAsB,wBAAtB,C,CACA;;AACA,SAASC,gBAAT,EAA2BC,kBAA3B,QAAqD,iBAArD;AACA,SAAQC,gBAAR,QAA+B,iBAA/B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,SAASC,KAAT,EAAeC,GAAf,EAAmBC,GAAnB,EAAuBC,MAAvB,QAAqC,MAArC;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAOC,MAAP,MAAmB,aAAnB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,4BAAtB,C,CACA;;AAkBA,SAASC,YAAT,GAAwB;AAGpB;AAEA;AAEJ;AACA;AACA;AACA;AAEA;AACI;AAsBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAMI,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMT,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANS,CANJ,CADJ,CADJ;AAwBE;;AAGN,OAAO,MAAMC,cAAc,GAACC,OAAO,CAACD,cAAR,CAAuB,MAAOE,OAAP,IAAiB;AAEhEA,EAAAA,OAAO,CAACC,KAAR,CAAcC,QAAd,CAAuB;AACfC,IAAAA,IAAI,EAACjB,gBADU;AAEfkB,IAAAA,IAAI,EAACJ,OAAO,CAACK,MAAR,CAAeC;AAFL,GAAvB;AAIAN,EAAAA,OAAO,CAACC,KAAR,CAAcC,QAAd,CAAuBK,GAAvB;AACA,QAAMP,OAAO,CAACC,KAAR,CAAcO,QAAd,CAAuBC,SAAvB,EAAN;AACH,CAR2B,CAArB;AAaL,4BAAerC,KAAK,CAACsC,IAAN,CAAWb,YAAX,CAAf","sourcesContent":["import React, {useState,useEffect} from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport { Polyline ,Marker,StreetViewPanorama,MarkerClusterer} from '@react-google-maps/api';\nimport AppLayout from '../component/AppLayout';\n// import Streetview from 'react-google-streetview';// import RecordElevation from '../component/RecordElavation'\nimport { BIKE_MAP_REQUEST, SEARCH_MAP_REQUEST } from '../reducers/map';\nimport {LOAD_MAP_REQUEST} from '../reducers/map'\nimport GeomHandle from '../component/GoogleMap'\nimport { Input,Col,Row,Button } from 'antd';\nimport SideBar from '../component/Layout/SideBar';\nimport { InfoWindow } from '@react-google-maps/api';\nimport Router from 'next/router'\n// import {useHistory} from \nimport Link from 'next/link'\nimport SelectMap from '../component/map/selectMap'\n// import InfoWindow from '../component/InfoWindow';\n\n\n\n\n\n\n\n\n\n\n\n   \n    \n\n\n\n\nfunction polylineTest() {\n\n\n    // const {searchMap}=useSelector((state)=>state.map)\n\n    // const dispatch=useDispatch()\n\n//    useEffect(()=>{\n//     dispatch({\n//         type:BIKE_MAP_REQUEST\n//     })\n\n//    },[])\n    // const [propsPosition,setPropsPosition]=useState()\n\n\n\n\n\n\n\n    \n    \n      \n \n\n  \n\n\n    \n  \n\n    \n      \n  \n    return (\n        <div>\n            <Row>\n            <Col span={4}>\n                {/* <SideBar ></SideBar> */}\n\n                </Col>\n             \n                <Col span={10}>\n       \n       \n       \n              \n\n       <SelectMap></SelectMap>\n\n                </Col>\n\n\n            </Row>\n           \n       \n         </div>\n\n    )}\n\n\nexport const getStaticProps=wrapper.getStaticProps(async (context)=>{\n \n    context.store.dispatch({\n            type:LOAD_MAP_REQUEST,\n            data:context.params.id\n        })\n    context.store.dispatch(END)\n    await context.store.sagaTask.toPromise()\n})\n\n\n  \n  \n  export default React.memo(polylineTest)\n\n"]},"metadata":{},"sourceType":"module"}