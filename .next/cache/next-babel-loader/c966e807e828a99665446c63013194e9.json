{"ast":null,"code":"import shortid from \"shortid\";\nimport produce from \"immer\";\nimport faker from 'faker';\nexport const initialState = {\n  //    mainPosts:[{\n  //     id: 1,\n  //     User: {\n  //       id: 1,\n  //       nickname: '동영',\n  //     },\n  //     content: '첫 번째 게시글',\n  //     Images: [{\n  //       src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\n  //     }, {\n  //       src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\n  //     }, {\n  //       src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\n  //     }],\n  //     Comments:[{\n  //         User:{\n  //           id:1,\n  //           nickname:'현종'\n  //         },\n  //         content:'안녕'\n  //       } ]\n  // },\n  // {\n  //     id: 2,\n  //     User: {\n  //       id: 2,\n  //       nickname: '재현',\n  //     },\n  //     content: '두 번째 게시글',\n  //     Images: [{\n  //       src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\n  //     }, {\n  //       src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\n  //     }, {\n  //       src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\n  //     }],\n  //     Comments:[{\n  //         User:{\n  //           id:1,\n  //           nickname:'현종'\n  //         },\n  //         content:'안녕'\n  //       } ]\n  // }\n  // ,\n  // {\n  //     id: 3,\n  //     User: {\n  //       id: 3,\n  //       nickname: '현종',\n  //     },\n  //     content: '세번째 게시글',\n  //     Images: [{\n  //       src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\n  //     }, {\n  //       src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\n  //     }, {\n  //       src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\n  //     }],\n  //     Comments:[{\n  //         User:{\n  //           id:1,\n  //           nickname:'동영'\n  //         },\n  //         content:'안녕'\n  //       } ]\n  // },\n  // {\n  //     id: 4,\n  //     User: {\n  //       id: 4,\n  //       nickname: '대영',\n  //     },\n  //     content: '네 번째 게시글',\n  //     Images: [{\n  //       src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\n  //     }, {\n  //       src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\n  //     }, {\n  //       src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\n  //     }],\n  //     Comments:[]\n  // },\n  // {\n  //     id: 5,\n  //     User: {\n  //       id: 5,\n  //       nickname: '새별',\n  //     },\n  //     content: '다섯번째 게시글',\n  //     Images: [{\n  //       src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\n  //     }, {\n  //       src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\n  //     }, {\n  //       src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\n  //     }],\n  //     Comments:[]\n  // },\n  // {\n  //     id: 6,\n  //     User: {\n  //       id: 6,\n  //       nickname: '세준',\n  //     },\n  //     content: '여섯번째 게시글',\n  //     Images: [{\n  //       src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\n  //     }, {\n  //       src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\n  //     }, {\n  //       src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\n  //     }],\n  //     Comments:[]\n  // },\n  // ],\n  mainPosts: [],\n  addCommentDone: false,\n  addCommentLoading: false,\n  addCommentError: false,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  loadsPostsLoading: false,\n  loadsPostsDone: false,\n  loadsPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  hasMorePosts: true\n};\nexport const LOADS_POSTS_REQUEST = 'LOADS_POSTS_REQUEST';\nexport const LOADS_POSTS_SUCCESS = 'LOADS_POSTS_SUCCESS';\nexport const LOADS_POSTS_FAILURE = 'LOADS_POSTS_FAILURE';\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nconst dummyPost = data => ({\n  id: shortid.generate(),\n  User: {\n    id: shortid.generate(),\n    nickname: faker.name.findName()\n  },\n  content: data,\n  Images: [{\n    src: faker.image.imageUrl()\n  }],\n  Comments: [{\n    User: {\n      id: shortid.generate(),\n      nickname: faker.name.findName()\n    },\n    content: faker.lorem.sentence()\n  }]\n});\n\nexport const generateDummyPost = data => Array(number).fill().map(() => ({\n  id: shortid.generate(),\n  User: {\n    id: shortid.generate(),\n    nickname: faker.name.findName()\n  },\n  content: faker.lorem.paragraph(),\n  Images: [{\n    src: faker.image.imageUrl()\n  }]\n}));\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true; // draft.hasMorePosts = draft.mainPosts.length < 50;\n        // draft.mainPosts = action.data.concat(draft.mainPosts);\n        //  백만들어지면 포스트 불러올것\n\n        console.log('nexq', action.data.nextPage);\n        draft.mainPosts = action.data;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = \"ㅇㅇㅇ\";\n        break;\n\n      case LOADS_POSTS_REQUEST:\n        draft.loadsPostsLoading = true;\n        draft.loadsPostsDone = false;\n        draft.loadsPostsError = null;\n        break;\n\n      case LOADS_POSTS_SUCCESS:\n        draft.loadsPostsLoading = false;\n        draft.loadsPostsDone = true;\n        draft.mainPosts = action.data;\n        break;\n\n      case LOADS_POSTS_FAILURE:\n        draft.loadsPostsLoading = false;\n        draft.loadsPostsError = \"ㅇㅇㅇ\";\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        const commentpost = draft.mainPosts.find(v => v.id === action.data.id);\n        commentpost.comment.unshift(action.data.result.comment); // draft.mainPosts.find((v)=>v.id===action.data.id)\n\n        draft.mainPosts = draft.mainPosts;\n        break;\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = 'ss';\n        break;\n\n      default:\n        return state;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/dong/CapstonProject/reducers/post.js"],"names":["shortid","produce","faker","initialState","mainPosts","addCommentDone","addCommentLoading","addCommentError","loadPostsLoading","loadPostsDone","loadPostsError","loadsPostsLoading","loadsPostsDone","loadsPostsError","addPostLoading","addPostDone","hasMorePosts","LOADS_POSTS_REQUEST","LOADS_POSTS_SUCCESS","LOADS_POSTS_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","dummyPost","data","id","generate","User","nickname","name","findName","content","Images","src","image","imageUrl","Comments","lorem","sentence","generateDummyPost","Array","number","fill","map","paragraph","reducer","state","action","draft","type","addPostError","unshift","error","console","log","nextPage","commentpost","find","v","comment","result"],"mappings":"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","sourcesContent":["import shortid from \"shortid\";\nimport produce  from \"immer\";\nimport faker from 'faker';\n\n\nexport const initialState={\n//    mainPosts:[{\n    \n//     id: 1,\n//     User: {\n//       id: 1,\n//       nickname: '동영',\n//     },\n//     content: '첫 번째 게시글',\n//     Images: [{\n//       src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\n//     }, {\n//       src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\n//     }, {\n//       src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\n//     }],\n//     Comments:[{\n//         User:{\n//           id:1,\n//           nickname:'현종'\n//         },\n//         content:'안녕'\n//       } ]\n  \n\n// },\n// {\n    \n//     id: 2,\n//     User: {\n//       id: 2,\n//       nickname: '재현',\n//     },\n//     content: '두 번째 게시글',\n//     Images: [{\n//       src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\n//     }, {\n//       src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\n//     }, {\n//       src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\n//     }],\n//     Comments:[{\n//         User:{\n//           id:1,\n//           nickname:'현종'\n//         },\n//         content:'안녕'\n//       } ]\n  \n\n// }\n// ,\n// {\n    \n//     id: 3,\n//     User: {\n//       id: 3,\n//       nickname: '현종',\n//     },\n//     content: '세번째 게시글',\n//     Images: [{\n//       src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\n//     }, {\n//       src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\n//     }, {\n//       src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\n//     }],\n//     Comments:[{\n//         User:{\n//           id:1,\n//           nickname:'동영'\n//         },\n//         content:'안녕'\n//       } ]\n  \n\n// },\n// {\n    \n//     id: 4,\n//     User: {\n//       id: 4,\n//       nickname: '대영',\n//     },\n//     content: '네 번째 게시글',\n//     Images: [{\n//       src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\n//     }, {\n//       src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\n//     }, {\n//       src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\n//     }],\n//     Comments:[]\n    \n  \n\n// },\n// {\n    \n//     id: 5,\n//     User: {\n//       id: 5,\n//       nickname: '새별',\n//     },\n//     content: '다섯번째 게시글',\n//     Images: [{\n//       src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\n//     }, {\n//       src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\n//     }, {\n//       src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\n//     }],\n//     Comments:[]\n  \n\n// },\n// {\n    \n//     id: 6,\n//     User: {\n//       id: 6,\n//       nickname: '세준',\n//     },\n//     content: '여섯번째 게시글',\n//     Images: [{\n//       src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\n//     }, {\n//       src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\n//     }, {\n//       src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\n//     }],\n//     Comments:[]\n  \n\n// },\n\n// ],\nmainPosts:[],\n   addCommentDone:false,\n   addCommentLoading:false,\n   addCommentError:false,\n   loadPostsLoading: false,\n   loadPostsDone: false,\n   loadPostsError: null,\n   loadsPostsLoading: false,\n   loadsPostsDone: false,\n   loadsPostsError: null,\n   addPostLoading:false,\n   addPostDone:false,\n   hasMorePosts:true\n}\n\nexport const LOADS_POSTS_REQUEST = 'LOADS_POSTS_REQUEST';\nexport const LOADS_POSTS_SUCCESS = 'LOADS_POSTS_SUCCESS';\nexport const LOADS_POSTS_FAILURE = 'LOADS_POSTS_FAILURE';\n\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\n\nexport const ADD_POST_REQUEST ='ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS ='ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE ='ADD_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST='ADD_COMMENT_REQUEST'\nexport const ADD_COMMENT_SUCCESS='ADD_COMMENT_SUCCESS'\nexport const ADD_COMMENT_FAILURE='ADD_COMMENT_FAILURE'\n\n\n\n\nconst dummyPost=(data)=>({\n    id:shortid.generate(),\n    User:{\n      id:shortid.generate(),\n      nickname:faker.name.findName()\n    },\n    content:data,\n    Images:[\n      {\n        src:faker.image.imageUrl()\n      }\n    ],\n    Comments:[{\n      User:{\n        id:shortid.generate(),\n        nickname:faker.name.findName()\n      },\n      content:faker.lorem.sentence()\n    } ]\n})\n\nexport const generateDummyPost=(data)=> Array(number).fill().map(( )=>({\n    id:shortid.generate(),\n    User:{\n      id:shortid.generate(),\n      nickname:faker.name.findName()\n    },\n    content:faker.lorem.paragraph(),\n    Images:[\n      {\n        src:faker.image.imageUrl()\n      }\n    ],\n   \n  })) \n  \n\n\n\n\nconst reducer=(state=initialState,action)=>{\n    return produce(state,(draft)=>{\n        switch(action.type){\n            case ADD_POST_REQUEST:\n                draft.addPostLoading = true;\n                draft.addPostDone = false;\n                draft.addPostError = null;\n                break;\n              case ADD_POST_SUCCESS: \n                draft.addPostLoading = false;\n                draft.addPostDone = true;\n                draft.mainPosts.unshift(dummyPost(action.data));\n                break;\n              case ADD_POST_FAILURE:\n                draft.addPostLoading = false;\n                draft.addPostError = action.error;\n                break;\n                case LOAD_POSTS_REQUEST:\n                    draft.loadPostsLoading = true;\n                    draft.loadPostsDone = false;\n                    draft.loadPostsError = null;\n                    break;\n                    case LOAD_POSTS_SUCCESS:\n                      \n                    draft.loadPostsLoading = false;\n                    draft.loadPostsDone = true;\n                    // draft.hasMorePosts = draft.mainPosts.length < 50;\n                    // draft.mainPosts = action.data.concat(draft.mainPosts);\n                    //  백만들어지면 포스트 불러올것\n                    console.log('nexq',action.data.nextPage)\n                    draft.mainPosts=action.data\n                    break;\n                    case LOAD_POSTS_FAILURE:\n                    draft.loadPostsLoading = false; \n                    draft.loadPostsError = \"ㅇㅇㅇ\";\n                    break;\n\n                    case LOADS_POSTS_REQUEST:\n                      draft.loadsPostsLoading = true;\n                      draft.loadsPostsDone = false;\n                      draft.loadsPostsError = null;\n                      break;\n                      case LOADS_POSTS_SUCCESS:\n                        \n                      draft.loadsPostsLoading = false;\n                      draft.loadsPostsDone = true;\n\n                      draft.mainPosts=action.data\n                      break;\n                      case LOADS_POSTS_FAILURE:\n                      draft.loadsPostsLoading = false; \n                      draft.loadsPostsError = \"ㅇㅇㅇ\";\n                      break;\n\n                    case ADD_COMMENT_REQUEST:\n                    draft.addCommentLoading = true;\n                    draft.addCommentDone = false;\n                    break;\n                    case ADD_COMMENT_SUCCESS:\n                    draft.addCommentLoading = false;\n                    draft.addCommentDone = true;\n\n                    const commentpost=draft.mainPosts.find((v)=>v.id===action.data.id)\n                    commentpost.comment.unshift(action.data.result.comment)\n                    // draft.mainPosts.find((v)=>v.id===action.data.id)\n                  \n                    draft.mainPosts=draft.mainPosts\n                    break;\n                    case ADD_COMMENT_FAILURE:\n                    draft.addCommentLoading = false; \n                    draft.addCommentError = 'ss';\n                    break;\n           \n           \n            default:\n                return state\n        }\n    })\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}