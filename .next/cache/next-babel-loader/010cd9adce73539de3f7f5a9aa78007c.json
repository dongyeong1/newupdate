{"ast":null,"code":"import { all, call, fork, put, takeLatest, take } from 'redux-saga/effects';\nimport { ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, LOAD_POSTS_FAILURE, LOAD_POSTS_SUCCESS, LOAD_POSTS_REQUEST, ADD_COMMENT_REQUEST, ADD_COMMENT_FAILURE, ADD_COMMENT_SUCCESS, LOADS_POSTS_FAILURE, LOADS_POSTS_SUCCESS, LOADS_POSTS_REQUEST } from '../reducers/post';\nimport axios from 'axios';\n\nfunction addPostAPI(data) {// return axios.post('/signup',data)\n}\n\nfunction* addPost(action) {\n  try {\n    // const result=yield call(addPostAPI,action.data)\n    console.log('ddddddddd');\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nconst loadPostsAPI = async () => {\n  console.log('1111');\n  const res = await axios.get('https://2yubi.shop/api/post/index');\n  const data = await res.data;\n  return data;\n};\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI);\n    console.log('dongresultss', result);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      error: 'xx'\n    });\n  }\n}\n\nconst loadsPostsAPI = async () => {\n  try {\n    const res = await fetch(\"https://2yubi.shop/api/post/index\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      credentials: \"include\"\n    });\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfunction* loadsPosts(action) {\n  try {\n    const result = yield call(loadsPostsAPI);\n    console.log('dongresultss', result);\n    yield put({\n      type: LOADS_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOADS_POSTS_FAILURE,\n      error: 'xx'\n    });\n  }\n}\n\nconst addCommentAPI = async data => {\n  try {\n    const res = await fetch(`https://2yubi.shop/api/comment/store/${data.postId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify({\n        data\n      })\n    });\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n\n  return axios.post(`https://2yubi.shop/api/comment/store/${data.postId}`, data.contents);\n};\n\nfunction* addComment(action) {\n  try {\n    yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: 'err.response.data'\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchLoadPosts() {\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchLoadsPosts() {\n  yield takeLatest(LOADS_POSTS_REQUEST, loadsPosts);\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchAddPost), fork(watchLoadPosts), fork(watchAddComment), fork(watchLoadsPosts)]);\n}","map":{"version":3,"sources":["/Users/dong/CapstonProject/sagas/post.js"],"names":["all","call","fork","put","takeLatest","take","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","LOAD_POSTS_FAILURE","LOAD_POSTS_SUCCESS","LOAD_POSTS_REQUEST","ADD_COMMENT_REQUEST","ADD_COMMENT_FAILURE","ADD_COMMENT_SUCCESS","LOADS_POSTS_FAILURE","LOADS_POSTS_SUCCESS","LOADS_POSTS_REQUEST","axios","addPostAPI","data","addPost","action","console","log","type","err","error","response","loadPostsAPI","res","get","loadPosts","result","loadsPostsAPI","fetch","method","headers","Accept","credentials","json","loadsPosts","addCommentAPI","postId","body","JSON","stringify","post","contents","addComment","watchAddPost","watchLoadPosts","watchAddComment","watchLoadsPosts","rootSaga"],"mappings":"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","sourcesContent":["\nimport { all,call,fork,put,takeLatest, take} from 'redux-saga/effects'\n\nimport { ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, LOAD_POSTS_FAILURE, LOAD_POSTS_SUCCESS,LOAD_POSTS_REQUEST,ADD_COMMENT_REQUEST,ADD_COMMENT_FAILURE,ADD_COMMENT_SUCCESS,LOADS_POSTS_FAILURE,LOADS_POSTS_SUCCESS,LOADS_POSTS_REQUEST} from '../reducers/post'\nimport axios from 'axios'\n\nfunction addPostAPI(data){\n// return axios.post('/signup',data)\n}\n\nfunction* addPost(action){\n\n    try{\n        // const result=yield call(addPostAPI,action.data)\n        console.log('ddddddddd')\n          yield put({\n              type:ADD_POST_SUCCESS,\n              data:action.data\n          })\n      }catch(err){\n          yield put({\n              type:ADD_POST_FAILURE,\n              error:err.response.data,\n               \n          })\n      }\n}\n\n\nconst loadPostsAPI =async()=>{\n    console.log('1111')\n    const res=await axios.get('https://2yubi.shop/api/post/index')\n\n    const data=await res.data\n    return data\n    }\n    \n\nfunction* loadPosts(action){\n    try{\n        const result = yield call(loadPostsAPI)\n        console.log('dongresultss',result)\n        yield put({\n            type:LOAD_POSTS_SUCCESS,\n            data:result.data\n        })\n\n    }catch(err){\n        yield put({\n            type:LOAD_POSTS_FAILURE,\n            error:'xx',\n             \n        })\n\n    }\n}\n\nconst loadsPostsAPI =async()=>{\n    try{\n        const res= await fetch(\"https://2yubi.shop/api/post/index\", {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n            credentials: \"include\",\n            \n          });\n          const data= await res.json()\n\n          return data\n\n    }catch(err){\n        console.log(err)\n    }\n    }\n    \n\nfunction* loadsPosts(action){\n    try{\n        const result = yield call(loadsPostsAPI)\n        console.log('dongresultss',result)\n        yield put({\n            type:LOADS_POSTS_SUCCESS,\n            data:result.data\n        })\n\n    }catch(err){\n        yield put({\n            type:LOADS_POSTS_FAILURE,\n            error:'xx',\n             \n        })\n\n    }\n}\n\n\nconst addCommentAPI=async(data)=>{\n\n    try{\n        const res= await fetch(`https://2yubi.shop/api/comment/store/${data.postId}`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n            credentials: \"include\",\n            body: JSON.stringify({\n              data\n             \n        }),\n          });\n          const data= await res.json()\n        \n      \n          return data\n\n    }catch(err){\n        console.log(err)\n    }\n\n    \n\n    \n    return axios.post(`https://2yubi.shop/api/comment/store/${data.postId}`,data.contents)\n    }\n    \n\nfunction* addComment(action){\n    try{\n        yield call(addCommentAPI,action.data)\n        yield put({\n            type:ADD_COMMENT_SUCCESS,\n            data:action.data\n        })\n\n    }catch(err){\n        yield put({\n            type:ADD_COMMENT_FAILURE,\n            error:'err.response.data',\n             \n        })\n\n    }\n}\n\n\n\nfunction* watchAddPost(){\n    yield takeLatest(ADD_POST_REQUEST,addPost)\n}\n\nfunction* watchLoadPosts(){\n    yield takeLatest(LOAD_POSTS_REQUEST,loadPosts)\n}\nfunction* watchAddComment(){\n    yield takeLatest(ADD_COMMENT_REQUEST,addComment)\n}\nfunction* watchLoadsPosts(){\n    yield takeLatest(LOADS_POSTS_REQUEST,loadsPosts)\n}\n\nexport default function* rootSaga(){\n\n    yield all([\n        fork(watchAddPost),\n        fork(watchLoadPosts),\n        fork(watchAddComment),\n        fork(watchLoadsPosts),\n        \n      \n    ])\n\n}\n"]},"metadata":{},"sourceType":"module"}