{"ast":null,"code":"var _jsxFileName = \"/Users/dong/CapstonProject/component/map/selectMap.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport { Polyline, Marker, StreetViewPanorama, MarkerClusterer } from '@react-google-maps/api';\nimport { InfoWindow } from '@react-google-maps/api';\nimport Router from 'next/router';\nimport { LOAD_MAP_REQUEST } from '../../reducers/map';\nimport { MOVING_MAP_REQUEST } from '../../reducers/map';\nimport GeomHandle from '../GoogleMap';\n\nfunction selectMap(_ref) {\n  _s();\n\n  var _this = this;\n\n  var mapState = _ref.mapState,\n      geom = _ref.geom;\n  var dispatch = useDispatch();\n  var mapContainerStyle = {\n    height: \"400px\",\n    width: \"800px\"\n  };\n\n  var _useSelector = useSelector(function (state) {\n    return state.map;\n  }),\n      searchMap = _useSelector.searchMap; // const [geom ,setGeom]=useState({lat:35.969997373905, lng: 128.45170755523503})\n\n\n  var _useState = useState(null),\n      mapref = _useState[0],\n      setMapRef = _useState[1];\n\n  var handleOnLoad = function handleOnLoad(map) {\n    setMapRef(map);\n  };\n\n  var handleCenterChanged = function handleCenterChanged() {\n    // if (mapref) {\n    var zoom = mapref.getZoom();\n    var ne = mapref.getBounds().getNorthEast();\n    var sw = mapref.getBounds().getSouthWest();\n    console.log('zoom', zoom);\n    console.log('north', ne.lat(), ',', ne.lng());\n    console.log('south', sw.lat(), ',', sw.lng()); // }\n\n    dispatch({\n      type: MOVING_MAP_REQUEST,\n      data: {\n        north: {\n          lat: ne.lat(),\n          lng: ne.lng()\n        },\n        south: {\n          lat: sw.lat(),\n          lng: sw.lat()\n        }\n      }\n    });\n  }; //////markercluseter\n\n\n  var optionss = {\n    imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m' // so you must have m1.png, m2.png, m3.png, m4.png, m5.png and m6.png in that folder\n\n  };\n\n  function createKey(location) {\n    return location.lat + location.lng;\n  } //////markercluseter\n  //polyline\n\n\n  var _useState2 = useState({\n    lat: '',\n    lng: ''\n  }),\n      infoPosition = _useState2[0],\n      setInfoPosition = _useState2[1];\n\n  var _useState3 = useState(false),\n      target = _useState3[0],\n      setTarget = _useState3[1];\n\n  var _useState4 = useState(Array.from({\n    length: searchMap.length\n  }, function () {\n    return 5;\n  })),\n      strokeWeight = _useState4[0],\n      setStrokeWeight = _useState4[1];\n\n  var strokeWeights = Array.from({\n    length: searchMap.length\n  }, function () {\n    return 5;\n  });\n\n  var polylineClick = function polylineClick(positionData) {\n    setInfoPosition({\n      lat: positionData.gps.coordinates[3][1],\n      lng: positionData.gps.coordinates[3][0]\n    });\n    setPropsId(positionData.id);\n    setPropsPosition(positionData);\n    setTarget(true);\n  };\n\n  function mouseOver(index) {\n    console.log('ssss', strokeWeight);\n    strokeWeights[index] = 10;\n    setStrokeWeight(strokeWeights);\n    console.log('over');\n  }\n\n  function mouseOut(index) {\n    strokeWeights[index] = 5;\n    setStrokeWeight(strokeWeights);\n    console.log('aaa');\n  } //polyline\n  //infoWindow\n\n\n  var closeClick = function closeClick() {\n    setTarget(false);\n  };\n\n  var divStyle = {\n    background: \"white\",\n    border: \"1px solid #ccc\",\n    padding: 15\n  };\n\n  var oneRoute = function oneRoute() {\n    dispatch({\n      type: LOAD_MAP_REQUEST,\n      data: propsId\n    });\n    Router.push({\n      pathname: '/Route/[id]',\n      query: {\n        id: propsId\n      }\n    });\n    console.log('dong', searchMap);\n  }; //infoWindow\n\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, __jsx(LoadScript, {\n    googleMapsApiKey: \"AIzaSyAYsO2CGL0YCjMoLk29eyitFC2PIJnJbYE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 1\n    }\n  }, __jsx(GoogleMap, {\n    id: \"marker-example\",\n    mapContainerStyle: mapContainerStyle,\n    zoom: 13,\n    center: geom,\n    onLoad: handleOnLoad,\n    onDragEnd: handleCenterChanged // onZoomChanged={handleCenterChanged}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, __jsx(MarkerClusterer, {\n    options: optionss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 1\n    }\n  }, function (clusterer) {\n    return searchMap.map(function (p) {\n      return __jsx(Marker, {\n        key: createKey(p),\n        position: {\n          lat: p.start_latlng[1],\n          lng: p.start_latlng[0]\n        },\n        clusterer: clusterer,\n        icon: {\n          scaledSize: new google.maps.Size(30, 30)\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }\n      });\n    });\n  }), searchMap.map(function (m, index) {\n    return __jsx(Polyline, {\n      onRightClick: function onRightClick() {\n        return polylineClick(m);\n      },\n      onMouseOver: function onMouseOver() {\n        return mouseOver(index);\n      },\n      onMouseOut: function onMouseOut() {\n        return mouseOut(index);\n      },\n      options: {\n        strokeWeight: strokeWeight[index],\n        clickable: true,\n        visible: true,\n        strokeColor: '#FF0000',\n        fillColor: '#FF0000'\n      },\n      path: m.gps.coordinates.map(function (p) {\n        return {\n          lat: p[1],\n          lng: p[0]\n        };\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    });\n  }), target && __jsx(InfoWindow, {\n    position: infoPosition,\n    onCloseClick: closeClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 14\n    }\n  }, __jsx(\"div\", {\n    style: divStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, \"\\uB3D9\\uC601\"), __jsx(\"button\", {\n    onClick: oneRoute,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, \"\\uC0C1\\uC138\\uBCF4\\uAE30\"))))));\n}\n\n_s(selectMap, \"WKk2HrcSjGSo3Fc8ReHJ3XHV69s=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\nexport default selectMap;","map":{"version":3,"sources":["/Users/dong/CapstonProject/component/map/selectMap.js"],"names":["React","useState","useEffect","useDispatch","useSelector","GoogleMap","LoadScript","Polyline","Marker","StreetViewPanorama","MarkerClusterer","InfoWindow","Router","LOAD_MAP_REQUEST","MOVING_MAP_REQUEST","GeomHandle","selectMap","mapState","geom","dispatch","mapContainerStyle","height","width","state","map","searchMap","mapref","setMapRef","handleOnLoad","handleCenterChanged","zoom","getZoom","ne","getBounds","getNorthEast","sw","getSouthWest","console","log","lat","lng","type","data","north","south","optionss","imagePath","createKey","location","infoPosition","setInfoPosition","target","setTarget","Array","from","length","strokeWeight","setStrokeWeight","strokeWeights","polylineClick","positionData","gps","coordinates","setPropsId","id","setPropsPosition","mouseOver","index","mouseOut","closeClick","divStyle","background","border","padding","oneRoute","propsId","push","pathname","query","clusterer","p","start_latlng","scaledSize","google","maps","Size","m","clickable","visible","strokeColor","fillColor"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport { Polyline ,Marker,StreetViewPanorama,MarkerClusterer} from '@react-google-maps/api';\nimport { InfoWindow } from '@react-google-maps/api';\nimport Router from 'next/router'\nimport {LOAD_MAP_REQUEST} from '../../reducers/map'\nimport { MOVING_MAP_REQUEST } from '../../reducers/map';\n\nimport GeomHandle from '../GoogleMap'\n\nfunction selectMap({mapState,geom}) {\n\n    const dispatch=useDispatch()\n\n\n\nconst mapContainerStyle = {\n    height: \"400px\",\n    width: \"800px\"\n  };\n  \n\n    const {searchMap}=useSelector((state)=>state.map)\n\n    // const [geom ,setGeom]=useState({lat:35.969997373905, lng: 128.45170755523503})\n    const [mapref, setMapRef] = useState(null);\n\n\n    const handleOnLoad = map => {\n        setMapRef(map);\n        \n      };\n\n\n      const handleCenterChanged = () => {\n        // if (mapref) {\n          const zoom=mapref.getZoom()\n          const ne=mapref.getBounds().getNorthEast();\n          const sw=mapref.getBounds().getSouthWest();\n\n          console.log('zoom',zoom);\n          console.log('north', ne.lat(),',',ne.lng())\n          console.log('south',sw.lat(),',',sw.lng())\n        // }\n\n        dispatch({ \n          type:MOVING_MAP_REQUEST,\n          data:{\n            north:{\n              lat:ne.lat(),\n              lng:ne.lng()\n            },\n            south:{\n              lat:sw.lat(),\n              lng:sw.lat()\n            },\n  \n          }\n        })\n      \n      }\n\n      //////markercluseter\n\n\nconst optionss = {\n    imagePath:\n      'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m', // so you must have m1.png, m2.png, m3.png, m4.png, m5.png and m6.png in that folder\n  }\n\n\nfunction createKey(location) {\n    return location.lat + location.lng\n  }\n\n      //////markercluseter\n\n      //polyline\n\n      const [infoPosition,setInfoPosition]=useState({\n        lat:'',\n        lng:'',\n    })\n    \n      const [target,setTarget]=useState(false)\n\n\n      const [strokeWeight,setStrokeWeight]=useState(Array.from({length: searchMap.length}, () => 5))\n      const strokeWeights= Array.from({length: searchMap.length}, () => 5);\n\n\n      const polylineClick=(positionData)=>{\n     \n    \n        setInfoPosition({\n            lat:positionData.gps.coordinates[3][1],\n            lng:positionData.gps.coordinates[3][0]\n        })\n        setPropsId(positionData.id)\n        setPropsPosition(positionData)\n        setTarget(true)\n        \n    }\n    \n\nfunction mouseOver(index){\n    console.log('ssss',strokeWeight)\n    strokeWeights[index]=10\n    setStrokeWeight(strokeWeights)\n    console.log('over')\n}\n\nfunction mouseOut(index){\n    strokeWeights[index]=5\n    setStrokeWeight(strokeWeights)\n    console.log('aaa')\n\n}\n\n      //polyline\n\n      //infoWindow\n      const closeClick=()=>{\n        setTarget(false)\n    }\n\n\nconst divStyle = {\n    background: `white`,\n    border: `1px solid #ccc`,\n    padding: 15\n  }\n\n\n  const oneRoute=()=>{\n    dispatch({\n               type:LOAD_MAP_REQUEST,\n               data:propsId\n             })\n    Router.push({\n        pathname: '/Route/[id]',\n        query: {id:propsId},\n      });\n\n      console.log('dong',searchMap)\n}\n\n\n      //infoWindow\n\n\n  \n    \n\n    \n\n\n  return (\n    <div>\n\n<LoadScript\n        googleMapsApiKey=\"AIzaSyAYsO2CGL0YCjMoLk29eyitFC2PIJnJbYE\"\n        >\n            \n          <GoogleMap\n            id=\"marker-example\"\n            mapContainerStyle={mapContainerStyle}\n            zoom={13}\n            center={geom}\n            onLoad={handleOnLoad}\n            onDragEnd={handleCenterChanged}\n            // onZoomChanged={handleCenterChanged}\n          >\n\n<MarkerClusterer options={optionss}>\n          {(clusterer) =>\n            searchMap.map((p) => (\n              <Marker  key={createKey(p)} position={{lat:p.start_latlng[1],lng:p.start_latlng[0]}} clusterer={clusterer}  icon={{\n              scaledSize: new google.maps.Size(30,30),} } />\n            ))\n          }\n        </MarkerClusterer>\n      \n\n        {searchMap.map((m,index)=>(\n            <Polyline  onRightClick={()=>polylineClick(m)} onMouseOver={()=>mouseOver(index)} onMouseOut={()=>mouseOut(index)}  options={{strokeWeight:strokeWeight[index],clickable:true,visible:true,strokeColor: '#FF0000',fillColor: '#FF0000',}} path={m.gps.coordinates.map((p)=>(\n                {\n                    lat:p[1],\n                    lng:p[0]\n                }\n            ))}></Polyline>\n            \n            ))}\n            \n    {target&&<InfoWindow position={infoPosition} onCloseClick={closeClick}>\n        <div style={divStyle}>\n            <h1>동영</h1>\n                {/* <Link href={{\n                    pathname:'/Route/[id]',\n                    query: {id:propsId},\n                }}><a>상세보기</a></Link> */}\n            <button onClick={oneRoute}>상세보기</button>\n        </div>\n        </InfoWindow>} \n         \n\n        \n       \n            \n          </GoogleMap>\n          </LoadScript>\n             \n\n    </div>\n  )\n}\n\nexport default selectMap"]},"metadata":{},"sourceType":"module"}