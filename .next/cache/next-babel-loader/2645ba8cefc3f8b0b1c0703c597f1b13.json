{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(addPost),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(loadPosts),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(loadsPosts),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(addComment),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddPost),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadPosts),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddComment),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadsPosts),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, call, fork, put, takeLatest, take } from 'redux-saga/effects';\nimport { ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, LOAD_POSTS_FAILURE, LOAD_POSTS_SUCCESS, LOAD_POSTS_REQUEST, ADD_COMMENT_REQUEST, ADD_COMMENT_FAILURE, ADD_COMMENT_SUCCESS, LOADS_POSTS_FAILURE, LOADS_POSTS_SUCCESS, LOADS_POSTS_REQUEST } from '../reducers/post';\nimport axios from 'axios';\n\nfunction addPostAPI(data) {// return axios.post('/signup',data)\n}\n\nfunction addPost(action) {\n  return _regeneratorRuntime.wrap(function addPost$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          // const result=yield call(addPostAPI,action.data)\n          console.log('ddddddddd');\n          _context.next = 4;\n          return put({\n            type: ADD_POST_SUCCESS,\n            data: action.data\n          });\n\n        case 4:\n          _context.next = 10;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 10;\n          return put({\n            type: ADD_POST_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 6]]);\n}\n\nvar loadPostsAPI = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log('1111');\n            _context2.next = 3;\n            return axios.get('https://2yubi.shop/api/post/index');\n\n          case 3:\n            res = _context2.sent;\n            _context2.next = 6;\n            return res.data;\n\n          case 6:\n            data = _context2.sent;\n            return _context2.abrupt(\"return\", data);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function loadPostsAPI() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction loadPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadPosts$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(loadPostsAPI);\n\n        case 3:\n          result = _context3.sent;\n          console.log('dongresultss', result);\n          _context3.next = 7;\n          return put({\n            type: LOAD_POSTS_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context3.next = 13;\n          break;\n\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 13;\n          return put({\n            type: LOAD_POSTS_FAILURE,\n            error: 'xx'\n          });\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked2, null, [[0, 9]]);\n}\n\nvar loadsPostsAPI = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return fetch(\"https://2yubi.shop/api/post/index\", {\n              method: \"GET\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\"\n              },\n              credentials: \"include\"\n            });\n\n          case 3:\n            res = _context4.sent;\n            _context4.next = 6;\n            return res.json();\n\n          case 6:\n            data = _context4.sent;\n            return _context4.abrupt(\"return\", data);\n\n          case 10:\n            _context4.prev = 10;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.log(_context4.t0);\n\n          case 13:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee2, null, [[0, 10]]);\n  }));\n\n  return function loadsPostsAPI() {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nfunction loadsPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadsPosts$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(loadsPostsAPI);\n\n        case 3:\n          result = _context5.sent;\n          console.log('dongresultss', result);\n          _context5.next = 7;\n          return put({\n            type: LOADS_POSTS_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context5.next = 13;\n          break;\n\n        case 9:\n          _context5.prev = 9;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 13;\n          return put({\n            type: LOADS_POSTS_FAILURE,\n            error: 'xx'\n          });\n\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked3, null, [[0, 9]]);\n}\n\nvar addCommentAPI = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(data) {\n    var res, _data;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            _context6.next = 3;\n            return fetch(\"https://2yubi.shop/api/comment/store/\".concat(_data.postId), {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\"\n              },\n              credentials: \"include\",\n              body: JSON.stringify({\n                data: _data\n              })\n            });\n\n          case 3:\n            res = _context6.sent;\n            _context6.next = 6;\n            return res.json();\n\n          case 6:\n            _data = _context6.sent;\n            return _context6.abrupt(\"return\", _data);\n\n          case 10:\n            _context6.prev = 10;\n            _context6.t0 = _context6[\"catch\"](0);\n            console.log(_context6.t0);\n\n          case 13:\n            return _context6.abrupt(\"return\", axios.post(\"https://2yubi.shop/api/comment/store/\".concat(data.postId), data.contents));\n\n          case 14:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee3, null, [[0, 10]]);\n  }));\n\n  return function addCommentAPI(_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nfunction addComment(action) {\n  return _regeneratorRuntime.wrap(function addComment$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(addCommentAPI, action.data);\n\n        case 3:\n          _context7.next = 5;\n          return put({\n            type: ADD_COMMENT_SUCCESS,\n            data: action.data\n          });\n\n        case 5:\n          _context7.next = 11;\n          break;\n\n        case 7:\n          _context7.prev = 7;\n          _context7.t0 = _context7[\"catch\"](0);\n          _context7.next = 11;\n          return put({\n            type: ADD_COMMENT_FAILURE,\n            error: 'err.response.data'\n          });\n\n        case 11:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked4, null, [[0, 7]]);\n}\n\nfunction watchAddPost() {\n  return _regeneratorRuntime.wrap(function watchAddPost$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(ADD_POST_REQUEST, addPost);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction watchLoadPosts() {\n  return _regeneratorRuntime.wrap(function watchLoadPosts$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction watchAddComment() {\n  return _regeneratorRuntime.wrap(function watchAddComment$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(ADD_COMMENT_REQUEST, addComment);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked7);\n}\n\nfunction watchLoadsPosts() {\n  return _regeneratorRuntime.wrap(function watchLoadsPosts$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return takeLatest(LOADS_POSTS_REQUEST, loadsPosts);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked8);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return all([fork(watchAddPost), fork(watchLoadPosts), fork(watchAddComment), fork(watchLoadsPosts)]);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked9);\n}","map":{"version":3,"sources":["/Users/dong/CapstonProject/sagas/post.js"],"names":["addPost","loadPosts","loadsPosts","addComment","watchAddPost","watchLoadPosts","watchAddComment","watchLoadsPosts","rootSaga","all","call","fork","put","takeLatest","take","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","LOAD_POSTS_FAILURE","LOAD_POSTS_SUCCESS","LOAD_POSTS_REQUEST","ADD_COMMENT_REQUEST","ADD_COMMENT_FAILURE","ADD_COMMENT_SUCCESS","LOADS_POSTS_FAILURE","LOADS_POSTS_SUCCESS","LOADS_POSTS_REQUEST","axios","addPostAPI","data","action","console","log","type","error","response","loadPostsAPI","get","res","result","loadsPostsAPI","fetch","method","headers","Accept","credentials","json","addCommentAPI","postId","body","JSON","stringify","post","contents"],"mappings":"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","sourcesContent":["\nimport { all,call,fork,put,takeLatest, take} from 'redux-saga/effects'\n\nimport { ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, LOAD_POSTS_FAILURE, LOAD_POSTS_SUCCESS,LOAD_POSTS_REQUEST,ADD_COMMENT_REQUEST,ADD_COMMENT_FAILURE,ADD_COMMENT_SUCCESS,LOADS_POSTS_FAILURE,LOADS_POSTS_SUCCESS,LOADS_POSTS_REQUEST} from '../reducers/post'\nimport axios from 'axios'\n\nfunction addPostAPI(data){\n// return axios.post('/signup',data)\n}\n\nfunction* addPost(action){\n\n    try{\n        // const result=yield call(addPostAPI,action.data)\n        console.log('ddddddddd')\n          yield put({\n              type:ADD_POST_SUCCESS,\n              data:action.data\n          })\n      }catch(err){\n          yield put({\n              type:ADD_POST_FAILURE,\n              error:err.response.data,\n               \n          })\n      }\n}\n\n\nconst loadPostsAPI =async()=>{\n    console.log('1111')\n    const res=await axios.get('https://2yubi.shop/api/post/index')\n\n    const data=await res.data\n    return data\n    }\n    \n\nfunction* loadPosts(action){\n    try{\n        const result = yield call(loadPostsAPI)\n        console.log('dongresultss',result)\n        yield put({\n            type:LOAD_POSTS_SUCCESS,\n            data:result.data\n        })\n\n    }catch(err){\n        yield put({\n            type:LOAD_POSTS_FAILURE,\n            error:'xx',\n             \n        })\n\n    }\n}\n\nconst loadsPostsAPI =async()=>{\n    try{\n        const res= await fetch(\"https://2yubi.shop/api/post/index\", {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n            credentials: \"include\",\n            \n          });\n          const data= await res.json()\n\n          return data\n\n    }catch(err){\n        console.log(err)\n    }\n    }\n    \n\nfunction* loadsPosts(action){\n    try{\n        const result = yield call(loadsPostsAPI)\n        console.log('dongresultss',result)\n        yield put({\n            type:LOADS_POSTS_SUCCESS,\n            data:result.data\n        })\n\n    }catch(err){\n        yield put({\n            type:LOADS_POSTS_FAILURE,\n            error:'xx',\n             \n        })\n\n    }\n}\n\n\nconst addCommentAPI=async(data)=>{\n\n    try{\n        const res= await fetch(`https://2yubi.shop/api/comment/store/${data.postId}`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n            credentials: \"include\",\n            body: JSON.stringify({\n              data\n             \n        }),\n          });\n          const data= await res.json()\n        \n      \n          return data\n\n    }catch(err){\n        console.log(err)\n    }\n\n    \n\n    \n    return axios.post(`https://2yubi.shop/api/comment/store/${data.postId}`,data.contents)\n    }\n    \n\nfunction* addComment(action){\n    try{\n        yield call(addCommentAPI,action.data)\n        yield put({\n            type:ADD_COMMENT_SUCCESS,\n            data:action.data\n        })\n\n    }catch(err){\n        yield put({\n            type:ADD_COMMENT_FAILURE,\n            error:'err.response.data',\n             \n        })\n\n    }\n}\n\n\n\nfunction* watchAddPost(){\n    yield takeLatest(ADD_POST_REQUEST,addPost)\n}\n\nfunction* watchLoadPosts(){\n    yield takeLatest(LOAD_POSTS_REQUEST,loadPosts)\n}\nfunction* watchAddComment(){\n    yield takeLatest(ADD_COMMENT_REQUEST,addComment)\n}\nfunction* watchLoadsPosts(){\n    yield takeLatest(LOADS_POSTS_REQUEST,loadsPosts)\n}\n\nexport default function* rootSaga(){\n\n    yield all([\n        fork(watchAddPost),\n        fork(watchLoadPosts),\n        fork(watchAddComment),\n        fork(watchLoadsPosts),\n        \n      \n    ])\n\n}\n"]},"metadata":{},"sourceType":"module"}