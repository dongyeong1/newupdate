{"ast":null,"code":"import { applyMiddleware, createStore, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\n\nconst configureStore = context => {\n  console.log('context', context);\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware]; //   const enhancer = process.env.NODE_ENV === 'production'\n  //     ? compose(applyMiddleware(...middlewares))\n  //     : composeWithDevTools(\n  //       applyMiddleware(...middlewares),\n  //     );\n\n  const store = createStore(reducer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore);\nexport default wrapper;","map":{"version":3,"sources":["/Users/dong/CapstonProject/store/configureStore.js"],"names":["applyMiddleware","createStore","compose","createSagaMiddleware","createWrapper","composeWithDevTools","reducer","rootSaga","configureStore","context","console","log","sagaMiddleware","middlewares","store","sagaTask","run","wrapper"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,cAAc,GAAIC,OAAD,IAAa;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBF,OAAtB;AACA,QAAMG,cAAc,GAAGT,oBAAoB,EAA3C;AACA,QAAMU,WAAW,GAAG,CAACD,cAAD,CAApB,CAHkC,CAIpC;AACA;AACA;AACA;AACA;;AACE,QAAME,KAAK,GAAGb,WAAW,CAACK,OAAD,CAAzB;AACAQ,EAAAA,KAAK,CAACC,QAAN,GAAiBH,cAAc,CAACI,GAAf,CAAmBT,QAAnB,CAAjB;AACA,SAAOO,KAAP;AACD,CAZD;;AAcA,MAAMG,OAAO,GAAGb,aAAa,CAACI,cAAD,CAA7B;AAEA,eAAeS,OAAf","sourcesContent":["import { applyMiddleware, createStore, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\n\nconst configureStore = (context) => {\n  console.log('context',context);\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n//   const enhancer = process.env.NODE_ENV === 'production'\n//     ? compose(applyMiddleware(...middlewares))\n//     : composeWithDevTools(\n//       applyMiddleware(...middlewares),\n//     );\n  const store = createStore(reducer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore);\n\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}