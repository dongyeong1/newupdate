{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/dong/CapstonProject/component/CommentForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport useInput from '../hooks/useInput';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nfunction CommetForm(_ref) {\n  _s();\n\n  var _jsx;\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      addCommentDone = _useSelector.addCommentDone,\n      addCommentLoading = _useSelector.addCommentLoading;\n\n  var me = useSelector(function (state) {\n    return state.user.me;\n  });\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      commentText = _useInput2[0],\n      onChangeCommentText = _useInput2[1],\n      setValue = _useInput2[2];\n\n  var onSubmitComment = function onSubmitComment() {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: me.id,\n        nickname: me.nickname\n      }\n    });\n  }; // commentText,me\n\n\n  useEffect(function () {\n    if (addCommentDone) {\n      setValue('');\n    }\n  }, [addCommentDone]);\n  return (//   <Form onFinish={onSubmitComment}>\n    //       <Form.Item style={{position:'relative' ,margin:0 ,zIndex:1}}>\n    __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 1\n      }\n    }, __jsx(Input.TextArea, {\n      value: commentText,\n      onChange: onChangeCommentText,\n      style: {\n        marginTop: 30,\n        marginLeft: 100,\n        width: 500\n      },\n      rows: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 1\n      }\n    }), __jsx(Button, (_jsx = {\n      type: \"primary\",\n      htmlType: \"submit\",\n      style: {\n        position: 'absolute',\n        right: 0,\n        bottom: -40\n      }\n    }, _defineProperty(_jsx, \"style\", {\n      marginRight: 10,\n      marginTop: 10\n    }), _defineProperty(_jsx, \"onClick\", onSubmitComment), _defineProperty(_jsx, \"loading\", addCommentLoading), _defineProperty(_jsx, \"__self\", this), _defineProperty(_jsx, \"__source\", {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }), _jsx), \"\\uB4F1\\uB85D\")) //       </Form.Item>\n    //   </Form>\n\n  );\n}\n\n_s(CommetForm, \"qC7KuZU7Du644o2auNWqXwcieio=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useInput];\n});\n\n_c = CommetForm;\nCommetForm.PropTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommetForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommetForm\");","map":{"version":3,"sources":["/Users/dong/CapstonProject/component/CommentForm.js"],"names":["React","useCallback","useEffect","Form","Input","Button","PropTypes","useInput","useSelector","useDispatch","ADD_COMMENT_REQUEST","CommetForm","post","dispatch","state","addCommentDone","addCommentLoading","me","user","commentText","onChangeCommentText","setValue","onSubmitComment","type","data","content","postId","id","userId","nickname","marginTop","marginLeft","width","position","right","bottom","marginRight","object","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAoBC,MAApB,QAAiC,MAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAAQC,mBAAR,QAAkC,kBAAlC;;AAEA,SAASC,UAAT,OAA4B;AAAA;;AAAA;;AAAA,MAAPC,IAAO,QAAPA,IAAO;AAExB,MAAMC,QAAQ,GAAEJ,WAAW,EAA3B;;AACA,qBAAyCD,WAAW,CAAC,UAACM,KAAD;AAAA,WAASA,KAAK,CAACF,IAAf;AAAA,GAAD,CAApD;AAAA,MAAOG,cAAP,gBAAOA,cAAP;AAAA,MAAsBC,iBAAtB,gBAAsBA,iBAAtB;;AACA,MAAMC,EAAE,GAACT,WAAW,CAAC,UAACM,KAAD;AAAA,WAASA,KAAK,CAACI,IAAN,CAAWD,EAApB;AAAA,GAAD,CAApB;;AAEA,kBAAiDV,QAAQ,CAAC,EAAD,CAAzD;AAAA;AAAA,MAAOY,WAAP;AAAA,MAAmBC,mBAAnB;AAAA,MAAuCC,QAAvC;;AAIA,MAAMC,eAAe,GAAC,SAAhBA,eAAgB,GAAI;AAGtBT,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAACb,mBADA;AAELc,MAAAA,IAAI,EAAE;AACFC,QAAAA,OAAO,EAACN,WADN;AAEFO,QAAAA,MAAM,EAACd,IAAI,CAACe,EAFV;AAGHC,QAAAA,MAAM,EAACX,EAAE,CAACU,EAHP;AAIFE,QAAAA,QAAQ,EAACZ,EAAE,CAACY;AAJV;AAFD,KAAD,CAAR;AAYH,GAfD,CAVwB,CA0BxB;;;AAEA3B,EAAAA,SAAS,CAAC,YAAI;AACV,QAAGa,cAAH,EAAkB;AACdM,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AACJ,GAJQ,EAIP,CAACN,cAAD,CAJO,CAAT;AAMA,SAGJ;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,MAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,KAAK,EAAEI,WAAvB;AAAoC,MAAA,QAAQ,EAAEC,mBAA9C;AAAmE,MAAA,KAAK,EAAE;AAACU,QAAAA,SAAS,EAAC,EAAX;AAAcC,QAAAA,UAAU,EAAC,GAAzB;AAA6BC,QAAAA,KAAK,EAAC;AAAnC,OAA1E;AAAmH,MAAA,IAAI,EAAE,CAAzH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGU,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAyC,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAC,UAAV;AAAsBC,QAAAA,KAAK,EAAC,CAA5B;AAA8BC,QAAAA,MAAM,EAAC,CAAC;AAAtC;AAAhD,sCAAkG;AAACC,MAAAA,WAAW,EAAC,EAAb;AAAgBN,MAAAA,SAAS,EAAC;AAA1B,KAAlG,oCAA0IR,eAA1I,oCAAoKN,iBAApK;AAAA;AAAA;AAAA;AAAA,8BAHV,CALI,CAWJ;AACA;;AAZI;AAcH;;GAhDQL,U;UAEWF,W,EACyBD,W,EAChCA,W,EAEwCD,Q;;;KAN5CI,U;AAkDTA,UAAU,CAACL,SAAX,GAAqB;AACjBM,EAAAA,IAAI,EAACN,SAAS,CAAC+B,MAAV,CAAiBC;AADL,CAArB;AAKA,eAAe3B,UAAf","sourcesContent":["import React, { useCallback,useEffect } from 'react';\nimport {Form, Input,Button} from 'antd'\nimport PropTypes from 'prop-types'\nimport useInput from '../hooks/useInput';\nimport { useSelector,useDispatch } from 'react-redux';\nimport {ADD_COMMENT_REQUEST} from '../reducers/post'\n\nfunction CommetForm({post}) {\n\n    const dispatch =useDispatch();\n    const {addCommentDone,addCommentLoading}=useSelector((state)=>state.post)\n    const me=useSelector((state)=>state.user.me)\n  \n    const [commentText,onChangeCommentText,setValue]=useInput('');\n    \n  \n\n    const onSubmitComment=()=>{\n\n\n        dispatch({\n            type:ADD_COMMENT_REQUEST,\n            data: {\n                content:commentText,\n                postId:post.id,\n               userId:me.id,\n                nickname:me.nickname\n               \n            }\n    \n        })\n\n    }\n    // commentText,me\n\n    useEffect(()=>{\n        if(addCommentDone){\n            setValue('')\n        }\n    },[addCommentDone])\n\n    return( \n\n\n//   <Form onFinish={onSubmitComment}>\n//       <Form.Item style={{position:'relative' ,margin:0 ,zIndex:1}}>\n<div>\n\n<Input.TextArea value={commentText} onChange={onChangeCommentText} style={{marginTop:30,marginLeft:100,width:500}} rows={4} />\n          <Button type=\"primary\" htmlType='submit' style={{position:'absolute' ,right:0,bottom:-40}} style={{marginRight:10,marginTop:10}} onClick={onSubmitComment} loading={addCommentLoading}>등록</Button>\n</div>\n          \n//       </Form.Item>\n//   </Form>\n  );\n}\n\nCommetForm.PropTypes={\n    post:PropTypes.object.isRequired,\n};\n\n\nexport default CommetForm;\n"]},"metadata":{},"sourceType":"module"}