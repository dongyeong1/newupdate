{"ast":null,"code":"var _jsxFileName = \"/Users/dong/CapstonProject/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { Menu, Button, Row, Col } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LoginForm from '../component/LoginForm';\nimport UserProfile from '../component/UserProfile';\nimport UserBadge from '../component/userBadge';\nimport axios from 'axios';\nimport wrapper from '../store/configureStore';\nimport PostCard from '../component/PostCard';\nimport Guild from '../component/Guild'; // import AppLayout from '../component/AppLayout';\n\nimport MyNote from '../component/MyNote';\nimport PostForm from '../component/postForm';\nimport Badge from '../component/badge';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport SideBar from '../component/Layout/SideBar'; // import wrapper from '../store/configureStore'\n\nimport { END } from 'redux-saga';\n\nfunction index() {\n  const {\n    searchMap\n  } = useSelector(state => state.map);\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    console.log(searchMap);\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  return __jsx(\"div\", {\n    style: {\n      backgroundColor: 'gray'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    gutter: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(Col, {\n    xl: 3,\n    xxl: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, __jsx(SideBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  })), __jsx(Col, {\n    xl: 12,\n    xxl: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), __jsx(Col, {\n    xl: 6,\n    xxl: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, __jsx(MyNote, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }), __jsx(Guild, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }))));\n} // export const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n//   //   const cookie = context.req ? context.req.headers.cookie : '';\n//   // axios.defaults.headers.Cookie = '';\n//   // if (context.req && cookie) {\n//   //   axios.defaults.headers.Cookie = cookie;\n//   // }\n// // context.store.dispatch({\n// //     type:LOAD_MY_INFO_REQUEST\n// //   });\n//   context.store.dispatch({\n//       type:LOAD_POSTS_REQUEST\n//   })\n//   context.store.dispatch(END)\n//   await context.store.sagaTask.toPromise()\n// })\n\n\nexport default index;","map":{"version":3,"sources":["/Users/dong/CapstonProject/pages/index.js"],"names":["React","useEffect","Menu","Button","Row","Col","useDispatch","useSelector","LoginForm","UserProfile","UserBadge","axios","wrapper","PostCard","Guild","MyNote","PostForm","Badge","LOAD_POSTS_REQUEST","SideBar","END","index","searchMap","state","map","me","user","mainPosts","post","dispatch","console","log","type","backgroundColor"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA8B,OAA9B;AACA,SAASC,IAAT,EAAeC,MAAf,EAAsBC,GAAtB,EAA0BC,GAA1B,QAAoC,MAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAAQC,kBAAR,QAAiC,kBAAjC;AACA,OAAOC,OAAP,MAAoB,6BAApB,C,CACA;;AACA,SAASC,GAAT,QAAoB,YAApB;;AACA,SAASC,KAAT,GAAiB;AACb,QAAM;AAACC,IAAAA;AAAD,MAAYf,WAAW,CAAEgB,KAAD,IAASA,KAAK,CAACC,GAAhB,CAA7B;AACA,QAAM;AAACC,IAAAA;AAAD,MAAMlB,WAAW,CAAEgB,KAAD,IAASA,KAAK,CAACG,IAAhB,CAAvB;AACA,QAAM;AAACC,IAAAA;AAAD,MAAYpB,WAAW,CAAEgB,KAAD,IAASA,KAAK,CAACK,IAAhB,CAA7B;AACF,QAAMC,QAAQ,GAACvB,WAAW,EAA1B;AACEL,EAAAA,SAAS,CAAC,MAAI;AACV6B,IAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ;AACAO,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAACd;AADE,KAAD,CAAR;AAIH,GANQ,EAMP,EANO,CAAT;AAOF,SACE;AAAK,IAAA,KAAK,EAAE;AAACe,MAAAA,eAAe,EAAC;AAAjB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGA,MAAC,GAAD;AAAK,IAAA,MAAM,EAAE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASY,MAAC,GAAD;AAAM,IAAA,EAAE,EAAE,CAAV;AAAa,IAAA,GAAG,EAAE,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CATZ,EAcY,MAAC,GAAD;AAAM,IAAA,EAAE,EAAE,EAAV;AAAc,IAAA,GAAG,EAAE,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdZ,EAkBY,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,IAAA,GAAG,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAlBZ,CAHA,CADF;AAiCD,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeZ,KAAf","sourcesContent":["import React ,{useEffect}from 'react'\nimport { Menu, Button,Row,Col} from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LoginForm from '../component/LoginForm';\nimport UserProfile from '../component/UserProfile';\nimport UserBadge from '../component/userBadge';\nimport axios from 'axios'\n\nimport wrapper from '../store/configureStore';\nimport PostCard from '../component/PostCard';\nimport Guild from '../component/Guild';\n// import AppLayout from '../component/AppLayout';\nimport MyNote from '../component/MyNote';\nimport PostForm from '../component/postForm';\nimport Badge from '../component/badge';\nimport {LOAD_POSTS_REQUEST} from '../reducers/post'\nimport SideBar from '../component/Layout/SideBar';\n// import wrapper from '../store/configureStore'\nimport { END } from 'redux-saga';\nfunction index() {\n    const {searchMap}=useSelector((state)=>state.map)\n    const {me} =useSelector((state)=>state.user)\n    const {mainPosts}=useSelector((state)=>state.post)\n  const dispatch=useDispatch()\n    useEffect(()=>{\n        console.log(searchMap)\n        dispatch({\n          type:LOAD_POSTS_REQUEST\n      })\n\n    },[])\n  return (\n    <div style={{backgroundColor:'gray'}}> \n    {/* <AppLayout></AppLayout> */}\n    \n    <Row gutter={12} >\n                {/* <Col span={12}>asd</Col>\n                <Col span={12}>asds</Col> */}\n                {/* <Col span={6}> */}\n                    {/* <UserProfile></UserProfile>`` */}\n                    {/* {me? <UserProfile></UserProfile>:<LoginForm></LoginForm>}\n                    <MyNote></MyNote> */}\n                    {/* <oneExerciseChart/> */}\n                {/* </Col> */}\n                <Col  xl={3} xxl={4} >\n                <SideBar ></SideBar>\n\n                </Col>\n               \n                <Col  xl={12} xxl={12} >\n                    {/* <PostForm></PostForm> */}\n                {/* {mainPosts.map((post)=> <PostCard post={post} key={post.id}/> )} */}\n                </Col>\n                <Col xl={6} xxl={6}>\n                    {/* <Badge></Badge> */}\n                    <MyNote></MyNote>\n                    <Guild ></Guild>\n\n                    {/* <UserBadge></UserBadge> */}\n                    </Col>\n\n            </Row>\n    </div>\n  )\n}\n\n\n// export const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n//   //   const cookie = context.req ? context.req.headers.cookie : '';\n//   // axios.defaults.headers.Cookie = '';\n//   // if (context.req && cookie) {\n//   //   axios.defaults.headers.Cookie = cookie;\n//   // }\n// // context.store.dispatch({\n// //     type:LOAD_MY_INFO_REQUEST\n// //   });\n//   context.store.dispatch({\n//       type:LOAD_POSTS_REQUEST\n//   })\n//   context.store.dispatch(END)\n//   await context.store.sagaTask.toPromise()\n// })\n\nexport default index;\n"]},"metadata":{},"sourceType":"module"}