{"ast":null,"code":"import { all, call, fork, put, takeLatest, take } from 'redux-saga/effects';\nimport { ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, LOAD_POSTS_FAILURE, LOAD_POSTS_SUCCESS, LOAD_POSTS_REQUEST, ADD_COMMENT_REQUEST, ADD_COMMENT_FAILURE, ADD_COMMENT_SUCCESS, LOADS_POSTS_FAILURE, LOADS_POSTS_SUCCESS, LOADS_POSTS_REQUEST, LOAD_MORE_POST_REQUEST, LOAD_MORE_POST_SUCCESS, LOAD_MORE_POST_FAILURE, DELETE_POST_REQUEST, DELETE_POST_SUCCESS, DELETE_POST_FAILURE } from '../reducers/post';\nimport axios from 'axios';\n\nfunction addPostAPI(data) {// return axios.post('/signup',data)\n}\n\nfunction* addPost(action) {\n  try {\n    // const result=yield call(addPostAPI,action.data)\n    console.log('ddddddddd');\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nconst loadPostsAPI = async () => {\n  console.log('1111');\n  const res = await axios.get('https://2yubi.shop/api/post/index');\n  const data = await res.data;\n  console.log('jjjjjj', data);\n  return data;\n};\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI);\n    console.log('dongresultss', result);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: {\n        data: result.data,\n        nextPage: result.next_page_url\n      }\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      error: 'xx'\n    });\n  }\n}\n\nconst morePostAPI = async datas => {\n  const res = await fetch(`${datas}`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    },\n    credentials: \"include\"\n  });\n  const data = await res.json();\n  console.log('pageResult', data);\n  return data;\n};\n\nfunction* morePost(action) {\n  try {\n    const result = yield call(morePostAPI, action.data);\n    console.log('dongresultss', result);\n    yield put({\n      type: LOAD_MORE_POST_SUCCESS,\n      data: {\n        data: result.data,\n        nextPage: result.next_page_url\n      }\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MORE_POST_FAILURE,\n      error: 'xx'\n    });\n  }\n}\n\nconst loadsPostsAPI = async () => {\n  try {\n    const res = await fetch(\"https://2yubi.shop/api/post/index\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      credentials: \"include\"\n    });\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfunction* loadsPosts(action) {\n  try {\n    const result = yield call(loadsPostsAPI);\n    console.log('dongresultss', result);\n    yield put({\n      type: LOADS_POSTS_SUCCESS,\n      data: {\n        data: result.data,\n        nextPage: result.next_page_url\n      }\n    });\n  } catch (err) {\n    yield put({\n      type: LOADS_POSTS_FAILURE,\n      error: 'xx'\n    });\n  }\n}\n\nconst addCommentAPI = async datas => {\n  try {\n    const res = await fetch(`https://2yubi.shop/api/comment/store/${datas.postId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify({\n        content: datas.contents.content\n      })\n    });\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    console.log(err);\n  } // return axios.post(`https://2yubi.shop/api/comment/store/${data.postId}`,data.contents)\n\n};\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    console.log('commentresult', result);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: {\n        id: action.data.postId,\n        result\n      }\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: 'err.response.data'\n    });\n  }\n}\n\nconst deletePostAPI = async datas => {\n  const res = await axios.delete(`https://2yubi.shop/api/post/${datas}`);\n  const data = await res.data;\n  return data;\n};\n\nfunction* deletePost(action) {\n  try {\n    const result = yield call(deletePostAPI, action.data);\n    yield put({\n      type: DELETE_POST_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: DELETE_POST_FAILURE,\n      error: 'xx'\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchLoadPosts() {\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchLoadsPosts() {\n  yield takeLatest(LOADS_POSTS_REQUEST, loadsPosts);\n}\n\nfunction* watchLoadMorePost() {\n  yield takeLatest(LOAD_MORE_POST_REQUEST, morePost);\n}\n\nfunction* watchDeletePost() {\n  yield takeLatest(DELETE_POST_REQUEST, deletePost);\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchAddPost), fork(watchLoadPosts), fork(watchAddComment), fork(watchLoadsPosts), fork(watchLoadMorePost), fork(watchDeletePost)]);\n}","map":{"version":3,"sources":["/Users/dong/CapstonProject/sagas/post.js"],"names":["all","call","fork","put","takeLatest","take","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","LOAD_POSTS_FAILURE","LOAD_POSTS_SUCCESS","LOAD_POSTS_REQUEST","ADD_COMMENT_REQUEST","ADD_COMMENT_FAILURE","ADD_COMMENT_SUCCESS","LOADS_POSTS_FAILURE","LOADS_POSTS_SUCCESS","LOADS_POSTS_REQUEST","LOAD_MORE_POST_REQUEST","LOAD_MORE_POST_SUCCESS","LOAD_MORE_POST_FAILURE","DELETE_POST_REQUEST","DELETE_POST_SUCCESS","DELETE_POST_FAILURE","axios","addPostAPI","data","addPost","action","console","log","type","err","error","response","loadPostsAPI","res","get","loadPosts","result","nextPage","next_page_url","morePostAPI","datas","fetch","method","headers","Accept","credentials","json","morePost","loadsPostsAPI","loadsPosts","addCommentAPI","postId","body","JSON","stringify","content","contents","addComment","id","deletePostAPI","delete","deletePost","watchAddPost","watchLoadPosts","watchAddComment","watchLoadsPosts","watchLoadMorePost","watchDeletePost","rootSaga"],"mappings":"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","sourcesContent":["\nimport { all,call,fork,put,takeLatest, take} from 'redux-saga/effects'\n\nimport { ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, LOAD_POSTS_FAILURE, LOAD_POSTS_SUCCESS,LOAD_POSTS_REQUEST,ADD_COMMENT_REQUEST,ADD_COMMENT_FAILURE,ADD_COMMENT_SUCCESS,LOADS_POSTS_FAILURE,LOADS_POSTS_SUCCESS,LOADS_POSTS_REQUEST, LOAD_MORE_POST_REQUEST, LOAD_MORE_POST_SUCCESS, LOAD_MORE_POST_FAILURE, DELETE_POST_REQUEST, DELETE_POST_SUCCESS, DELETE_POST_FAILURE} from '../reducers/post'\nimport axios from 'axios'\n\nfunction addPostAPI(data){\n// return axios.post('/signup',data)\n}\n\nfunction* addPost(action){\n\n    try{\n        // const result=yield call(addPostAPI,action.data)\n        console.log('ddddddddd')\n          yield put({\n              type:ADD_POST_SUCCESS,\n              data:action.data\n          })\n      }catch(err){\n          yield put({\n              type:ADD_POST_FAILURE,\n              error:err.response.data,\n               \n          })\n      }\n}\n\n\nconst loadPostsAPI =async()=>{\n    console.log('1111')\n    const res=await axios.get('https://2yubi.shop/api/post/index')\n\n    const data=await res.data\n    console.log('jjjjjj',data)\n    return data\n    }\n    \n\nfunction* loadPosts(action){\n    try{\n        const result = yield call(loadPostsAPI)\n        console.log('dongresultss',result)\n        yield put({\n            type:LOAD_POSTS_SUCCESS,\n            data:{\ndata:result.data,\nnextPage:result.next_page_url\n            }\n                \n                \n        })\n\n    }catch(err){\n        yield put({\n            type:LOAD_POSTS_FAILURE,\n            error:'xx',\n             \n        })\n\n    }\n}\n\n\n\n\n\nconst morePostAPI =async(datas)=>{\n   \n\n    const res= await fetch(`${datas}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n        credentials: \"include\",\n        \n      });\n\n\n\n\n    \n\n      const data= await res.json()\n    console.log('pageResult',data)\n    return data\n    }\n    \n\nfunction* morePost(action){\n    try{\n        const result = yield call(morePostAPI,action.data)\n        console.log('dongresultss',result)\n        yield put({\n            type:LOAD_MORE_POST_SUCCESS,\n            data:{\ndata:result.data,\nnextPage:result.next_page_url\n            }\n                \n                \n        })\n\n    }catch(err){\n        yield put({\n            type:LOAD_MORE_POST_FAILURE,\n            error:'xx',\n             \n        })\n\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\nconst loadsPostsAPI =async()=>{\n    try{\n        const res= await fetch(\"https://2yubi.shop/api/post/index\", {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n            credentials: \"include\",\n            \n          });\n          const data= await res.json()\n\n          return data\n\n    }catch(err){\n        console.log(err)\n    }\n    }\n    \n\n\n\n\n\n\n    \n\nfunction* loadsPosts(action){\n    try{\n        const result = yield call(loadsPostsAPI)\n        console.log('dongresultss',result)\n        yield put({\n            type:LOADS_POSTS_SUCCESS,\n            data:{\n                data:result.data,\n                nextPage:result.next_page_url\n                            }\n                                \n        })\n\n    }catch(err){\n        yield put({\n            type:LOADS_POSTS_FAILURE,\n            error:'xx',\n             \n        })\n\n    }\n}\n\n\n\n\n\n\n\n\nconst addCommentAPI=async(datas)=>{\n\n    try{\n        \n        const res= await fetch(`https://2yubi.shop/api/comment/store/${datas.postId}`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n            credentials: \"include\",\n            body: JSON.stringify({\n              content:datas.contents.content\n             \n        }),\n          });\n          const data= await res.json()\n        \n      \n          return data\n\n    }catch(err){\n        console.log(err)\n    }\n\n    \n\n    \n    // return axios.post(`https://2yubi.shop/api/comment/store/${data.postId}`,data.contents)\n    }\n    \n\nfunction* addComment(action){\n    try{\n        const result=yield call(addCommentAPI,action.data)\n        console.log('commentresult',result)\n        yield put({\n            type:ADD_COMMENT_SUCCESS,\n            data:{\n                id:action.data.postId,\n                result\n\n            }\n        })\n\n    }catch(err){\n        yield put({\n            type:ADD_COMMENT_FAILURE,\n            error:'err.response.data',\n             \n        })\n\n    }\n}\n\n\n\n\n\nconst deletePostAPI =async(datas)=>{\n  \n    const res=await axios.delete(`https://2yubi.shop/api/post/${datas}`)\n\n    const data=await res.data\n    \n    return data\n    }\n    \n\nfunction* deletePost(action){\n    try{\n        const result = yield call(deletePostAPI,action.data)\n    \n        yield put({\n            type:DELETE_POST_SUCCESS,\n          \n                \n                \n        })\n\n    }catch(err){\n        yield put({\n            type:DELETE_POST_FAILURE,\n            error:'xx',\n             \n        })\n\n    }\n}\n\n\n\n\nfunction* watchAddPost(){\n    yield takeLatest(ADD_POST_REQUEST,addPost)\n}\n\nfunction* watchLoadPosts(){\n    yield takeLatest(LOAD_POSTS_REQUEST,loadPosts)\n}\nfunction* watchAddComment(){\n    yield takeLatest(ADD_COMMENT_REQUEST,addComment)\n}\nfunction* watchLoadsPosts(){\n    yield takeLatest(LOADS_POSTS_REQUEST,loadsPosts)\n}\nfunction* watchLoadMorePost(){\n    yield takeLatest(LOAD_MORE_POST_REQUEST,morePost)\n}\nfunction* watchDeletePost(){\n    yield takeLatest(DELETE_POST_REQUEST,deletePost)\n}\n\nexport default function* rootSaga(){\n\n    yield all([\n        fork(watchAddPost),\n        fork(watchLoadPosts),\n        fork(watchAddComment),\n        fork(watchLoadsPosts),\n        fork(watchLoadMorePost),\n        fork(watchDeletePost),\n      \n    ])\n\n}\n"]},"metadata":{},"sourceType":"module"}