{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport shortid from \"shortid\";\nimport produce from \"immer\";\nimport faker from 'faker';\nexport var initialState = {\n  mainPosts: [],\n  addCommentDone: false,\n  addCommentLoading: false,\n  addCommentError: false,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  loadsPostsLoading: false,\n  loadsPostsDone: false,\n  loadsPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  hasMorePosts: true,\n  loadMorePostLoading: false,\n  loadMorePostDone: false,\n  loadMorePostError: null\n};\nexport var LOAD_MORE_POST_SUCCESS = 'LOAD_MORE_POST_SUCCESS';\nexport var LOAD_MORE_POST_REQUEST = 'LOAD_MORE_POST_REQUEST';\nexport var LOAD_MORE_POST_FAILURE = 'LOAD_MORE_POST_FAILURE';\nexport var LOADS_POSTS_REQUEST = 'LOADS_POSTS_REQUEST';\nexport var LOADS_POSTS_SUCCESS = 'LOADS_POSTS_SUCCESS';\nexport var LOADS_POSTS_FAILURE = 'LOADS_POSTS_FAILURE';\nexport var LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport var LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport var LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: shortid.generate(),\n    User: {\n      id: shortid.generate(),\n      nickname: faker.name.findName()\n    },\n    content: data,\n    Images: [{\n      src: faker.image.imageUrl()\n    }],\n    Comments: [{\n      User: {\n        id: shortid.generate(),\n        nickname: faker.name.findName()\n      },\n      content: faker.lorem.sentence()\n    }]\n  };\n};\n\nexport var generateDummyPost = function generateDummyPost(data) {\n  return Array(number).fill().map(function () {\n    return {\n      id: shortid.generate(),\n      User: {\n        id: shortid.generate(),\n        nickname: faker.name.findName()\n      },\n      content: faker.lorem.paragraph(),\n      Images: [{\n        src: faker.image.imageUrl()\n      }]\n    };\n  });\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    var _draft$mainPosts$data;\n\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true; // draft.hasMorePosts = draft.mainPosts.length < 50;\n        // draft.mainPosts = action.data.concat(draft.mainPosts);\n        //  백만들어지면 포스트 불러올것\n\n        console.log('nexq', action.data.nextPage);\n        draft.mainPosts = action.data;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = \"ㅇㅇㅇ\";\n        break;\n\n      case LOAD_MORE_POST_REQUEST:\n        draft.loadMorePostLoading = true;\n        draft.loadMorePostDone = false;\n        draft.loadMorePostError = null;\n        break;\n\n      case LOAD_MORE_POST_SUCCESS:\n        draft.loadMorePostLoading = false;\n        draft.loadMorePostDone = true;\n        draft.hasMorePosts = draft.mainPosts.data.length < 30; // draft.mainPosts = action.data.concat(draft.mainPosts);\n        //  백만들어지면 포스트 불러올것\n\n        draft.mainPosts.nextPage = action.data.nextPage;\n\n        (_draft$mainPosts$data = draft.mainPosts.data).push.apply(_draft$mainPosts$data, _toConsumableArray(action.data.data));\n\n        break;\n\n      case LOAD_MORE_POST_FAILURE:\n        draft.loadMorePostLoading = false;\n        draft.loadMorePostError = \"ㅇㅇㅇ\";\n        break;\n\n      case LOADS_POSTS_REQUEST:\n        draft.loadsPostsLoading = true;\n        draft.loadsPostsDone = false;\n        draft.loadsPostsError = null;\n        break;\n\n      case LOADS_POSTS_SUCCESS:\n        draft.loadsPostsLoading = false;\n        draft.loadsPostsDone = true;\n        draft.mainPosts = action.data;\n        break;\n\n      case LOADS_POSTS_FAILURE:\n        draft.loadsPostsLoading = false;\n        draft.loadsPostsError = \"ㅇㅇㅇ\";\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        var commentpost = draft.mainPosts.find(function (v) {\n          return v.id === action.data.id;\n        });\n        commentpost.comment.unshift(action.data.result.comment); // draft.mainPosts.find((v)=>v.id===action.data.id)\n\n        draft.mainPosts = draft.mainPosts;\n        break;\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = 'ss';\n        break;\n\n      default:\n        return state;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/dong/CapstonProject/reducers/post.js"],"names":["shortid","produce","faker","initialState","mainPosts","addCommentDone","addCommentLoading","addCommentError","loadPostsLoading","loadPostsDone","loadPostsError","loadsPostsLoading","loadsPostsDone","loadsPostsError","addPostLoading","addPostDone","hasMorePosts","loadMorePostLoading","loadMorePostDone","loadMorePostError","LOAD_MORE_POST_SUCCESS","LOAD_MORE_POST_REQUEST","LOAD_MORE_POST_FAILURE","LOADS_POSTS_REQUEST","LOADS_POSTS_SUCCESS","LOADS_POSTS_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","dummyPost","data","id","generate","User","nickname","name","findName","content","Images","src","image","imageUrl","Comments","lorem","sentence","generateDummyPost","Array","number","fill","map","paragraph","reducer","state","action","draft","type","addPostError","unshift","error","console","log","nextPage","length","push","commentpost","find","v","comment","result"],"mappings":"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","sourcesContent":["import shortid from \"shortid\";\nimport produce  from \"immer\";\nimport faker from 'faker';\n\n\nexport const initialState={\n\nmainPosts:[],\n\n   addCommentDone:false,\n   addCommentLoading:false,\n   addCommentError:false,\n   loadPostsLoading: false,\n   loadPostsDone: false,\n   loadPostsError: null,\n   loadsPostsLoading: false,\n   loadsPostsDone: false,\n   loadsPostsError: null,\n   addPostLoading:false,\n   addPostDone:false,\n   hasMorePosts:true,\n   loadMorePostLoading:false,\n   loadMorePostDone:false,\n   loadMorePostError:null\n\n}\n\nexport const LOAD_MORE_POST_SUCCESS='LOAD_MORE_POST_SUCCESS'\nexport const LOAD_MORE_POST_REQUEST='LOAD_MORE_POST_REQUEST'\nexport const LOAD_MORE_POST_FAILURE='LOAD_MORE_POST_FAILURE'\n\nexport const LOADS_POSTS_REQUEST = 'LOADS_POSTS_REQUEST';\nexport const LOADS_POSTS_SUCCESS = 'LOADS_POSTS_SUCCESS';\nexport const LOADS_POSTS_FAILURE = 'LOADS_POSTS_FAILURE';\n\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\n\nexport const ADD_POST_REQUEST ='ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS ='ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE ='ADD_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST='ADD_COMMENT_REQUEST'\nexport const ADD_COMMENT_SUCCESS='ADD_COMMENT_SUCCESS'\nexport const ADD_COMMENT_FAILURE='ADD_COMMENT_FAILURE'\n\n\n\n\nconst dummyPost=(data)=>({\n    id:shortid.generate(),\n    User:{\n      id:shortid.generate(),\n      nickname:faker.name.findName()\n    },\n    content:data,\n    Images:[\n      {\n        src:faker.image.imageUrl()\n      }\n    ],\n    Comments:[{\n      User:{\n        id:shortid.generate(),\n        nickname:faker.name.findName()\n      },\n      content:faker.lorem.sentence()\n    } ]\n})\n\nexport const generateDummyPost=(data)=> Array(number).fill().map(( )=>({\n    id:shortid.generate(),\n    User:{\n      id:shortid.generate(),\n      nickname:faker.name.findName()\n    },\n    content:faker.lorem.paragraph(),\n    Images:[\n      {\n        src:faker.image.imageUrl()\n      }\n    ],\n   \n  })) \n  \n\n\n\n\nconst reducer=(state=initialState,action)=>{\n    return produce(state,(draft)=>{\n        switch(action.type){\n            case ADD_POST_REQUEST:\n                draft.addPostLoading = true;\n                draft.addPostDone = false;\n                draft.addPostError = null;\n                break;\n              case ADD_POST_SUCCESS: \n                draft.addPostLoading = false;\n                draft.addPostDone = true;\n                draft.mainPosts.unshift(dummyPost(action.data));\n                break;\n              case ADD_POST_FAILURE:\n                draft.addPostLoading = false;\n                draft.addPostError = action.error;\n                break;\n                case LOAD_POSTS_REQUEST:\n                    draft.loadPostsLoading = true;\n                    draft.loadPostsDone = false;\n                    draft.loadPostsError = null;\n                    break;\n                    case LOAD_POSTS_SUCCESS:\n                      \n                    draft.loadPostsLoading = false;\n                    draft.loadPostsDone = true;\n                    // draft.hasMorePosts = draft.mainPosts.length < 50;\n                    // draft.mainPosts = action.data.concat(draft.mainPosts);\n                    //  백만들어지면 포스트 불러올것\n                    console.log('nexq',action.data.nextPage)\n                    draft.mainPosts=action.data\n                    break;\n                    case LOAD_POSTS_FAILURE:\n                    draft.loadPostsLoading = false; \n                    draft.loadPostsError = \"ㅇㅇㅇ\";\n                    break;\n\n\n                    case LOAD_MORE_POST_REQUEST:\n                      draft.loadMorePostLoading = true;\n                      draft.loadMorePostDone = false;\n                      draft.loadMorePostError = null;\n                      break;\n                      case LOAD_MORE_POST_SUCCESS:\n                        \n                      draft.loadMorePostLoading = false;\n                      draft.loadMorePostDone = true;\n                      draft.hasMorePosts = draft.mainPosts.data.length < 30;\n                      // draft.mainPosts = action.data.concat(draft.mainPosts);\n                      //  백만들어지면 포스트 불러올것\n                      draft.mainPosts.nextPage=action.data.nextPage\n                      draft.mainPosts.data.push(...action.data.data)\n                      break;\n                      case LOAD_MORE_POST_FAILURE:\n                      draft.loadMorePostLoading = false; \n                      draft.loadMorePostError = \"ㅇㅇㅇ\";\n                      break;\n\n\n\n\n\n                    case LOADS_POSTS_REQUEST:\n                      draft.loadsPostsLoading = true;\n                      draft.loadsPostsDone = false;\n                      draft.loadsPostsError = null;\n                      break;\n                      case LOADS_POSTS_SUCCESS:\n                        \n                      draft.loadsPostsLoading = false;\n                      draft.loadsPostsDone = true;\n\n                      draft.mainPosts=action.data\n                      break;\n                      case LOADS_POSTS_FAILURE:\n                      draft.loadsPostsLoading = false; \n                      draft.loadsPostsError = \"ㅇㅇㅇ\";\n                      break;\n\n                    case ADD_COMMENT_REQUEST:\n                    draft.addCommentLoading = true;\n                    draft.addCommentDone = false;\n                    break;\n                    case ADD_COMMENT_SUCCESS:\n                    draft.addCommentLoading = false;\n                    draft.addCommentDone = true;\n\n                    const commentpost=draft.mainPosts.find((v)=>v.id===action.data.id)\n                    commentpost.comment.unshift(action.data.result.comment)\n                    // draft.mainPosts.find((v)=>v.id===action.data.id)\n                  \n                    draft.mainPosts=draft.mainPosts\n                    break;\n                    case ADD_COMMENT_FAILURE:\n                    draft.addCommentLoading = false; \n                    draft.addCommentError = 'ss';\n                    break;\n           \n           \n            default:\n                return state\n        }\n    })\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}