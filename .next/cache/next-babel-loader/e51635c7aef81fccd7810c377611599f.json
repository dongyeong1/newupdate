{"ast":null,"code":"var _jsxFileName = \"/Users/dong/CapstonProject/pages/Route/[id].js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport AppLayout from '../../component/AppLayout';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Polyline, Marker, StreetViewPanorama, MarkerClusterer } from '@react-google-maps/api';\nimport { MdDirectionsBike } from 'react-icons/md';\nimport { Menu, Button, Row, Col } from 'antd';\nimport { LOAD_MAP_REQUEST } from '../../reducers/map';\nimport wrapper from '../../store/configureStore';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport { Card, Table } from 'antd';\nimport { useRouter } from 'next/router';\nimport RouteInformation from '../../component/RouteInformation';\nimport { VerticalGridLines, HorizontalGridLines, XYPlot, LineSeries, XAxis, YAxis, Crosshair } from \"react-vis\";\nimport \"react-vis/dist/style.css\"; // const dummyMap={\n//     id: \"62133c5ff58346f2e09756ae\",\n//     name: \"복현동~영진전문대\",\n//     distance: 350,\n//     userId: 1,\n//     description: \"test\",\n//     event: \"bike\",\n//     checkPoint: [\n//         [\n//             1,\n//             1\n//         ],\n//         [\n//             2,\n//             2\n//         ],\n//         [\n//             3,\n//             3\n//         ],\n//         [\n//             4,\n//             4\n//         ],\n//         [\n//             5,\n//             5\n//         ],\n//         [\n//             6,\n//             6\n//         ]\n//     ],\n//     gps: {\n//         type: \"LineString\",\n//         coordinates: [\n//             [\n//                 128.5076750946045,\n//                 35.85643024981724\n//             ],\n//             [\n//                 128.5903787612915,\n//                 35.861891596895745\n//             ],\n//             [\n//                 128.58788967132568,\n//                 35.85669182451275\n//             ],\n//             [\n//                 128.58299732208252,\n//                 35.8562222630588\n//             ],\n//             [\n//                 128.5823106765747,\n//                 35.86476089045524\n//             ],\n//             [\n//                 128.58748197555542,\n//                 35.86634330488515\n//             ]\n//         ],\n//         id: \"62133c5ff58346f2e09756af\"\n//     },\n//     altitude: [\n//         { x: 0, y: 8 },\n//         { x: 1, y: 5 },\n//         { x: 2, y: 4 },\n//         { x: 3, y: 9 },\n//         { x: 4, y: 34 },\n//         { x: 5, y: 7 },\n//     ],\n//     start_latlng: [\n//         128.5076750946045,\n//         35.85643024981724\n//     ],\n//     end_latlng: [\n//         128.58748197555542,\n//         35.86634330488515\n//     ],\n//     createdAt: \"2022-02-21T07:16:47.648Z\",\n//     \"__v\": 0\n// }\n\nconst mapContainerStyle = {\n  height: \"400px\",\n  width: \"800px\",\n  marginLeft: '50px',\n  marginTop: '20px'\n};\nconst dummyLank = [{\n  'userId': 1,\n  'userNickname': '동영',\n  'record': '02:36:02',\n  'speed': '27',\n  'date': '2021년2월22일'\n}, {\n  'userId': 2,\n  'userNickname': '재현',\n  'record': '02:38:57',\n  'speed': '26',\n  'date': '2021년2월22일'\n}, {\n  'userId': 3,\n  'userNickname': '현종',\n  'record': '02:40:22',\n  'speed': '25',\n  'date': '2021년2월22일'\n}, {\n  'userId': 4,\n  'userNickname': '새별',\n  'record': '02:52:11',\n  'speed': '25',\n  'date': '2021년2월22일'\n}, {\n  'userId': 5,\n  'userNickname': '대영',\n  'record': '02:55:32',\n  'speed': '24',\n  'date': '2021년2월22일'\n}, {\n  'userId': 6,\n  'userNickname': '세준',\n  'record': '02:58:06',\n  'speed': '24',\n  'date': '2021년2월22일'\n}];\n\nfunction oneRoute() {\n  const {\n    loadMap,\n    searchMap\n  } = useSelector(state => state.map);\n  const router = useRouter();\n  const dispatch = useDispatch(); // useEffect(()=>{\n  //     dispatch({\n  //         type:LOAD_MAP_REQUEST,\n  //         data:router.query.id\n  //     })\n  //     // console.log('llll',loadMap,searchMap)\n  //     // console.log('결과',searchMap.filter((v)=>v.id===1))\n  // },[])\n\n  useEffect(() => {\n    console.log(router.query);\n  }, []);\n  const {\n    0: strokeWeight,\n    1: setStrokeWeight\n  } = useState(5);\n\n  const mouseOut = () => {\n    setStrokeWeight(5);\n    console.log('aaa');\n  };\n\n  const mouseOver = () => {\n    setStrokeWeight(10);\n    console.log('over');\n  };\n\n  const options = {\n    strokeColor: '#FF0000',\n    strokeOpacity: 0.8,\n    strokeWeight: strokeWeight,\n    fillColor: '#FF0000',\n    fillOpacity: 0.35,\n    clickable: true,\n    draggable: false,\n    editable: false,\n    visible: true,\n    radius: 30000,\n    //-27부터 호주 시작해서 점찍고 점찍고 한다\n    paths: [[{\n      lat: 35.969997373905,\n      lng: 128.45170755523503\n    }, {\n      lat: 35.985501427015464,\n      lng: 128.40407191943035\n    }, {\n      lat: 35.89580489690752,\n      lng: 128.62238368221892\n    }]],\n    zIndex: 1\n  }; //elevmarker\n\n  const {\n    0: elevPath,\n    1: setElevPath\n  } = useState({\n    lat: '',\n    lng: ''\n  });\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    crosshairValue: []\n  });\n  const {\n    0: index,\n    1: setIndex\n  } = useState('');\n\n  const handleMouseOver = () => {\n    console.log('qqqq');\n    setState({\n      crosshairValue: []\n    });\n    setIndex(0);\n  };\n\n  const qq = (value, {\n    index\n  }) => {\n    console.log(value);\n    console.log('aa', index);\n    setIndex(index);\n    setState({\n      crosshairValue: loadMap[0].altitude.map(d => d)\n    });\n    setElevPath({\n      lat: loadMap[0].gps.coordinates[index][1],\n      lng: loadMap[0].gps.coordinates[index][0]\n    });\n    console.log('ha', state);\n  }; //elevmarker\n\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 5\n    }\n  }, __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 5\n    }\n  }), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 5\n    }\n  }, __jsx(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      fontSize: 33,\n      marginLeft: 50,\n      marginTop: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }\n  }, \"sss\"), __jsx(LoadScript, {\n    googleMapsApiKey: \"AIzaSyAYsO2CGL0YCjMoLk29eyitFC2PIJnJbYE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 2\n    }\n  }, __jsx(GoogleMap, {\n    id: \"marker-example\",\n    mapContainerStyle: mapContainerStyle,\n    zoom: 12,\n    center: {\n      lat: 35.85669182451275,\n      lng: 128.58788967132568\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 4\n    }\n  }, __jsx(Marker, {\n    position: {\n      lat: loadMap[0].start_latlng[1],\n      lng: loadMap[0].start_latlng[0]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 2\n    }\n  }), elevPath && __jsx(Marker, {\n    position: elevPath,\n    icon: {\n      url: ' http://maps.google.com/mapfiles/ms/icons/blue.png'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }\n  }), __jsx(Polyline, {\n    onMouseOver: mouseOver,\n    onMouseOut: mouseOut,\n    options: options,\n    path: loadMap[0].gps.coordinates.map(m => ({\n      lat: m[1],\n      lng: m[0]\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }\n  }))), __jsx(XYPlot, {\n    height: 300,\n    width: 700,\n    onMouseLeave: handleMouseOver,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 5\n    }\n  }, __jsx(VerticalGridLines, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 11\n    }\n  }), __jsx(HorizontalGridLines, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 11\n    }\n  }), __jsx(XAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 11\n    }\n  }), __jsx(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 11\n    }\n  }), __jsx(LineSeries, {\n    data: loadMap[0].altitude,\n    onNearestX: qq,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 11\n    }\n  }), __jsx(Crosshair, {\n    values: state.crosshairValue,\n    className: 'test-class-name',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    style: {\n      background: 'gray',\n      width: 100,\n      height: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 17\n    }\n  }, \"dong\"), __jsx(\"div\", {\n    style: {\n      fontSize: 20,\n      marginLeft: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 17\n    }\n  }, index && state.crosshairValue[index].y))))), __jsx(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }\n  }, __jsx(RouteInformation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    style: {\n      marginTop: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    style: {\n      marginBottom: 10,\n      marginLeft: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 11\n    }\n  }, \"\\uC21C\\uC704\"), __jsx(\"div\", {\n    style: {\n      height: 400,\n      marginTop: 20,\n      marginLeft: 50,\n      width: 800,\n      overflow: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    style: {\n      backgroundColor: 'gray',\n      height: 50,\n      height: 50,\n      width: 785,\n      borderRadius: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    style: {\n      position: 'absolute',\n      bottom: 12,\n      left: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }\n  }, \"\\uC21C\\uC704\"), __jsx(\"span\", {\n    style: {\n      position: 'absolute',\n      bottom: 12,\n      left: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 1\n    }\n  }, \"\\uC774\\uB984\"), __jsx(\"span\", {\n    style: {\n      position: 'absolute',\n      bottom: 12,\n      left: 125\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 1\n    }\n  }, \"\\uC18D\\uB3C4\"), __jsx(\"span\", {\n    style: {\n      position: 'absolute',\n      bottom: 12,\n      left: 220\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 1\n    }\n  }, \"\\uAE30\\uB85D\"), __jsx(\"span\", {\n    style: {\n      position: 'absolute',\n      bottom: 12,\n      left: 370\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 1\n    }\n  }, \"\\uB0A0\\uC9DC\")), dummyLank.map((b, index) => __jsx(Card, {\n    style: {\n      marginBottom: 10,\n      borderRadius: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 38\n    }\n  }, index + 1 + '위'), __jsx(\"span\", {\n    style: {\n      marginLeft: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 21\n    }\n  }, b.userNickname), __jsx(\"span\", {\n    style: {\n      marginLeft: 50,\n      top: 10,\n      fontSize: 11\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 21\n    }\n  }, b.speed), __jsx(\"span\", {\n    style: {\n      marginLeft: 80,\n      top: 10,\n      fontSize: 11\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 21\n    }\n  }, b.record), __jsx(\"span\", {\n    style: {\n      marginLeft: 100,\n      top: 10,\n      fontSize: 11\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 21\n    }\n  }, b.date))))))));\n} //  export const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n//     const cookie = context.req ? context.req.headers.cookie : '';\n//   axios.defaults.headers.Cookie = '';\n//   if (context.req && cookie) {\n//     axios.defaults.headers.Cookie = cookie;\n//   }\n//   context.store.dispatch({\n//       type:LOAD_MAP_REQUEST,\n//       data: context.params.id,\n//   })\n//   context.store.dispatch(END)\n//   await context.store.sagaTask.toPromise()\n// }) \n\n\nexport default oneRoute;","map":{"version":3,"sources":["/Users/dong/CapstonProject/pages/Route/[id].js"],"names":["React","useEffect","useState","AppLayout","GoogleMap","LoadScript","useDispatch","useSelector","Polyline","Marker","StreetViewPanorama","MarkerClusterer","MdDirectionsBike","Menu","Button","Row","Col","LOAD_MAP_REQUEST","wrapper","END","axios","Card","Table","useRouter","RouteInformation","VerticalGridLines","HorizontalGridLines","XYPlot","LineSeries","XAxis","YAxis","Crosshair","mapContainerStyle","height","width","marginLeft","marginTop","dummyLank","oneRoute","loadMap","searchMap","state","map","router","dispatch","console","log","query","strokeWeight","setStrokeWeight","mouseOut","mouseOver","options","strokeColor","strokeOpacity","fillColor","fillOpacity","clickable","draggable","editable","visible","radius","paths","lat","lng","zIndex","elevPath","setElevPath","setState","crosshairValue","index","setIndex","handleMouseOver","qq","value","altitude","d","gps","coordinates","fontSize","start_latlng","url","m","background","y","marginBottom","overflow","backgroundColor","borderRadius","position","bottom","left","b","userNickname","top","speed","record","date"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport AppLayout from '../../component/AppLayout';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Polyline ,Marker,StreetViewPanorama,MarkerClusterer} from '@react-google-maps/api';\nimport { MdDirectionsBike } from 'react-icons/md';\nimport { Menu, Button,Row,Col} from 'antd';\nimport {LOAD_MAP_REQUEST} from '../../reducers/map'\n\n\nimport wrapper from '../../store/configureStore'\nimport { END } from 'redux-saga';\nimport axios from 'axios'\n\n\nimport {Card,Table} from 'antd'\n\nimport { useRouter } from 'next/router';\nimport RouteInformation from '../../component/RouteInformation';\n\n\nimport {\n    VerticalGridLines,\n    HorizontalGridLines,\n    XYPlot,\n    LineSeries,\n    XAxis,\n    YAxis,\n    Crosshair\n  } from \"react-vis\";\n  import \"react-vis/dist/style.css\";\n\n// const dummyMap={\n//     id: \"62133c5ff58346f2e09756ae\",\n//     name: \"복현동~영진전문대\",\n//     distance: 350,\n//     userId: 1,\n//     description: \"test\",\n//     event: \"bike\",\n//     checkPoint: [\n//         [\n//             1,\n//             1\n//         ],\n//         [\n//             2,\n//             2\n//         ],\n//         [\n//             3,\n//             3\n//         ],\n//         [\n//             4,\n//             4\n//         ],\n//         [\n//             5,\n//             5\n//         ],\n//         [\n//             6,\n//             6\n//         ]\n//     ],\n//     gps: {\n//         type: \"LineString\",\n//         coordinates: [\n//             [\n//                 128.5076750946045,\n//                 35.85643024981724\n//             ],\n//             [\n//                 128.5903787612915,\n//                 35.861891596895745\n//             ],\n//             [\n//                 128.58788967132568,\n//                 35.85669182451275\n//             ],\n//             [\n//                 128.58299732208252,\n//                 35.8562222630588\n//             ],\n//             [\n//                 128.5823106765747,\n//                 35.86476089045524\n//             ],\n//             [\n//                 128.58748197555542,\n//                 35.86634330488515\n//             ]\n//         ],\n//         id: \"62133c5ff58346f2e09756af\"\n//     },\n//     altitude: [\n//         { x: 0, y: 8 },\n//         { x: 1, y: 5 },\n//         { x: 2, y: 4 },\n//         { x: 3, y: 9 },\n//         { x: 4, y: 34 },\n//         { x: 5, y: 7 },\n//     ],\n//     start_latlng: [\n//         128.5076750946045,\n//         35.85643024981724\n//     ],\n//     end_latlng: [\n//         128.58748197555542,\n//         35.86634330488515\n//     ],\n//     createdAt: \"2022-02-21T07:16:47.648Z\",\n//     \"__v\": 0\n\n// }\n\n\n\nconst mapContainerStyle = {\n    height: \"400px\",\n    width: \"800px\",\n    marginLeft:'50px',\n    marginTop:'20px'\n  };\n\nconst dummyLank=[\n    {\n        'userId':1,\n        'userNickname':'동영',\n        'record':'02:36:02',\n        'speed':'27',\n        'date':'2021년2월22일'\n    },\n    {\n        'userId':2,\n        'userNickname':'재현',\n        'record':'02:38:57',\n        'speed':'26',\n        'date':'2021년2월22일'\n    },\n    {\n        'userId':3,\n        'userNickname':'현종',\n        'record':'02:40:22',\n        'speed':'25',\n        'date':'2021년2월22일'\n    },\n    {\n        'userId':4,\n        'userNickname':'새별',\n        'record':'02:52:11',\n        'speed':'25',\n        'date':'2021년2월22일'\n    },\n    {\n        'userId':5,\n        'userNickname':'대영',\n        'record':'02:55:32',\n        'speed':'24',\n        'date':'2021년2월22일'\n    },\n    {\n        'userId':6,\n        'userNickname':'세준',\n        'record':'02:58:06',\n        'speed':'24',\n        'date':'2021년2월22일'\n    }\n]\n\n\n\n\n\nfunction oneRoute() {\n\n    \n    const {loadMap,searchMap}=useSelector((state)=>state.map)\n    const router=useRouter()\n\n\n    const dispatch=useDispatch()\n    // useEffect(()=>{\n        \n    //     dispatch({\n    //         type:LOAD_MAP_REQUEST,\n    //         data:router.query.id\n    //     })\n    //     // console.log('llll',loadMap,searchMap)\n    //     // console.log('결과',searchMap.filter((v)=>v.id===1))\n    // },[])\n\n  \n\n    useEffect(()=>{\n        console.log(router.query)\n    },[])\n\n\nconst [strokeWeight,setStrokeWeight]=useState(5)\n\n\nconst mouseOut=()=>{\n    setStrokeWeight(5)\n    console.log('aaa')\n}\n\nconst mouseOver=()=>{\n    setStrokeWeight(10)\n    console.log('over')\n}\n   \n\n    const options = {\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.8,\n        strokeWeight: strokeWeight,\n        fillColor: '#FF0000',\n        fillOpacity: 0.35,\n        clickable: true,\n        draggable: false,\n        editable: false,\n        visible: true,\n        radius: 30000,\n        //-27부터 호주 시작해서 점찍고 점찍고 한다\n        paths: [\n              [\n                  {lat:  35.969997373905, lng: 128.45170755523503},\n                  {lat:35.985501427015464, lng:128.40407191943035},\n              \n                  {lat: 35.89580489690752, lng: 128.62238368221892}\n                  \n              ]\n        \n        ],\n        zIndex: 1\n      };\n\n      //elevmarker\n\n      const [elevPath, setElevPath]=useState({\n          lat:'',\n          lng:'',\n      })\n\n      const [state,setState]=useState({\n        crosshairValue:[]\n    })\n    const [index,setIndex]=useState('')\n\n    const handleMouseOver=()=>{\n        console.log('qqqq')\n        setState({crosshairValue:[]})\n        setIndex(0)\n    }\n    const qq=(value,{index})=>{\n        console.log(value)\n        console.log('aa',index)\n        setIndex(index)\n\n        setState({crosshairValue:loadMap[0].altitude.map(d=>d)})\n        setElevPath({\n            lat:loadMap[0].gps.coordinates[index][1],\n            lng:loadMap[0].gps.coordinates[index][0]\n        })\n        console.log('ha',state)\n    }\n      //elevmarker\n\n\n\n  return (\n    <div>\n     \n\n\n    <AppLayout></AppLayout>  \n\n    <Row>\n        <Col span={12}>\n        <div style={{fontSize:33,marginLeft:50,marginTop:50}}>sss</div> \n \n      \n\n <LoadScript\n googleMapsApiKey=\"AIzaSyAYsO2CGL0YCjMoLk29eyitFC2PIJnJbYE\"\n >\n     \n   <GoogleMap\n     id=\"marker-example\"\n     mapContainerStyle={mapContainerStyle}\n     zoom={12}\n     center={{lat:35.85669182451275, lng:  128.58788967132568}}\n    \n     \n   \n     \n   >\n \n <Marker  position={{lat:loadMap[0].start_latlng[1],lng:loadMap[0].start_latlng[0]}}  />\n\n {elevPath&&<Marker position={elevPath} icon={{url:' http://maps.google.com/mapfiles/ms/icons/blue.png',}} ></Marker>}\n \n \n\n      <Polyline onMouseOver={mouseOver} onMouseOut={mouseOut}  options={options} path={loadMap[0].gps.coordinates.map((m)=>(\n         {\n             lat:m[1],\n             lng:m[0]\n         }\n     ))}></Polyline> \n  \n \n \n \n \n \n     \n   </GoogleMap>\n   </LoadScript>\n\n   \n    <XYPlot height={300} width={700} onMouseLeave={handleMouseOver}>\n          <VerticalGridLines />\n          <HorizontalGridLines />\n          <XAxis />\n          <YAxis />\n          <LineSeries data={loadMap[0].altitude} onNearestX={qq} />\n          <Crosshair\n          values={state.crosshairValue}\n          className={'test-class-name'}\n        >\n            <div style={{background:'gray',width:100,height:100}}>\n                <h3>dong</h3>\n                <div style={{fontSize:20,marginLeft:20}}>{index && state.crosshairValue[index].y}</div>\n            </div>\n\n            </Crosshair>\n        </XYPlot>\n\n        </Col>\n        <Col span={6}>\n\n            \n\n            <RouteInformation></RouteInformation>\n\n            <div style={{marginTop:400}}>\n          <div style={{marginBottom:10,marginLeft:50}}>순위</div>\n        <div style={{ height:400,marginTop:20, marginLeft:50,width:800,overflow:'auto'}}>\n            <Card style={{backgroundColor:'gray' ,height:50,height:50,width:785,borderRadius:30}}>\n            <span style={{position:'absolute',bottom:12,left:20}}>순위</span>\n\n<span style={{position:'absolute',bottom:12,left:50}}>이름</span>\n<span style={{position:'absolute',bottom:12,left:125}}>속도</span>\n<span style={{position:'absolute',bottom:12,left:220}}>기록</span>\n\n<span style={{position:'absolute',bottom:12,left:370}}>날짜</span>\n            </Card>\n          \n        {\n            dummyLank.map((b,index)=>(\n                <Card style={{marginBottom:10,borderRadius:30}}>\n                                     <a>{index+1+'위'}</a>\n\n                    <span style={{marginLeft:10}}>{b.userNickname}</span>\n                    <span style={{marginLeft:50,top:10,fontSize:11}}>{b.speed}</span>\n                    <span style={{marginLeft:80,top:10,fontSize:11}}>{b.record}</span>\n                    \n                    <span style={{marginLeft:100,top:10,fontSize:11}}>{b.date}</span>\n                </Card>\n                \n            ))\n            }\n        </div>\n       \n    \n\n  \n    </div>\n\n        </Col>\n        </Row>     \n   \n\n \n\n\n    \n\n\n\n  \n </div>\n\n\n\n\n )\n}\n//  export const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n//     const cookie = context.req ? context.req.headers.cookie : '';\n//   axios.defaults.headers.Cookie = '';\n//   if (context.req && cookie) {\n//     axios.defaults.headers.Cookie = cookie;\n//   }\n//   context.store.dispatch({\n//       type:LOAD_MAP_REQUEST,\n//       data: context.params.id,\n//   })\n//   context.store.dispatch(END)\n//   await context.store.sagaTask.toPromise()\n// }) \n\nexport default oneRoute"]},"metadata":{},"sourceType":"module"}