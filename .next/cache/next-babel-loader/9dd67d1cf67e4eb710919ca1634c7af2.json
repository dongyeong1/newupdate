{"ast":null,"code":"import { all, call, fork, put, takeLatest, take } from 'redux-saga/effects';\nimport { LOAD_POSTS_FAILURE, LOAD_POSTS_SUCCESS, LOAD_POSTS_REQUEST, ADD_COMMENT_REQUEST, ADD_COMMENT_FAILURE, ADD_COMMENT_SUCCESS, LOADS_POSTS_FAILURE, LOADS_POSTS_SUCCESS, LOADS_POSTS_REQUEST, LOAD_MORE_POST_REQUEST, LOAD_MORE_POST_SUCCESS, LOAD_MORE_POST_FAILURE, DELETE_POST_REQUEST, DELETE_POST_SUCCESS, DELETE_POST_FAILURE } from '../reducers/post';\nimport axios from 'axios';\n\nconst loadPostsAPI = async () => {\n  console.log('1111');\n  const res = await axios.get('https://2yubi.shop/api/post/index');\n  const data = await res.data;\n  console.log('jjjjjj', data);\n  return data;\n};\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI);\n    console.log('dongresultss', result);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: {\n        data: result.data,\n        nextPage: result.next_page_url\n      }\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      error: 'xx'\n    });\n  }\n}\n\nconst morePostAPI = async datas => {\n  const res = await fetch(`${datas}`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    },\n    credentials: \"include\"\n  });\n  const data = await res.json();\n  console.log('pageResult', data);\n  return data;\n};\n\nfunction* morePost(action) {\n  try {\n    const result = yield call(morePostAPI, action.data);\n    console.log('dongresultss', result);\n    yield put({\n      type: LOAD_MORE_POST_SUCCESS,\n      data: {\n        data: result.data,\n        nextPage: result.next_page_url\n      }\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MORE_POST_FAILURE,\n      error: 'xx'\n    });\n  }\n}\n\nconst loadsPostsAPI = async () => {\n  try {\n    const res = await fetch(\"https://2yubi.shop/api/post/index\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      credentials: \"include\"\n    });\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfunction* loadsPosts(action) {\n  try {\n    const result = yield call(loadsPostsAPI);\n    console.log('dongresultss', result);\n    yield put({\n      type: LOADS_POSTS_SUCCESS,\n      data: {\n        data: result.data,\n        nextPage: result.next_page_url\n      }\n    });\n  } catch (err) {\n    yield put({\n      type: LOADS_POSTS_FAILURE,\n      error: 'xx'\n    });\n  }\n}\n\nconst addCommentAPI = async datas => {\n  try {\n    const res = await fetch(`https://2yubi.shop/api/comment/store/${datas.postId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify({\n        content: datas.contents.content\n      })\n    });\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    console.log('commentresult', result);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: {\n        id: action.data.postId,\n        result\n      }\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: 'err.response.data'\n    });\n  }\n}\n\nfunction* watchLoadPosts() {\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchLoadsPosts() {\n  yield takeLatest(LOADS_POSTS_REQUEST, loadsPosts);\n}\n\nfunction* watchLoadMorePost() {\n  yield takeLatest(LOAD_MORE_POST_REQUEST, morePost);\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchLoadPosts), fork(watchAddComment), fork(watchLoadsPosts), fork(watchLoadMorePost)]);\n}","map":{"version":3,"sources":["/Users/dong/CapstonProject/sagas/post.js"],"names":["all","call","fork","put","takeLatest","take","LOAD_POSTS_FAILURE","LOAD_POSTS_SUCCESS","LOAD_POSTS_REQUEST","ADD_COMMENT_REQUEST","ADD_COMMENT_FAILURE","ADD_COMMENT_SUCCESS","LOADS_POSTS_FAILURE","LOADS_POSTS_SUCCESS","LOADS_POSTS_REQUEST","LOAD_MORE_POST_REQUEST","LOAD_MORE_POST_SUCCESS","LOAD_MORE_POST_FAILURE","DELETE_POST_REQUEST","DELETE_POST_SUCCESS","DELETE_POST_FAILURE","axios","loadPostsAPI","console","log","res","get","data","loadPosts","action","result","type","nextPage","next_page_url","err","error","morePostAPI","datas","fetch","method","headers","Accept","credentials","json","morePost","loadsPostsAPI","loadsPosts","addCommentAPI","postId","body","JSON","stringify","content","contents","addComment","id","watchLoadPosts","watchAddComment","watchLoadsPosts","watchLoadMorePost","rootSaga"],"mappings":"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","sourcesContent":["\nimport { all,call,fork,put,takeLatest, take} from 'redux-saga/effects'\n\nimport { LOAD_POSTS_FAILURE, LOAD_POSTS_SUCCESS,LOAD_POSTS_REQUEST,ADD_COMMENT_REQUEST,ADD_COMMENT_FAILURE,ADD_COMMENT_SUCCESS,LOADS_POSTS_FAILURE,LOADS_POSTS_SUCCESS,LOADS_POSTS_REQUEST, LOAD_MORE_POST_REQUEST, LOAD_MORE_POST_SUCCESS, LOAD_MORE_POST_FAILURE, DELETE_POST_REQUEST, DELETE_POST_SUCCESS, DELETE_POST_FAILURE} from '../reducers/post'\nimport axios from 'axios'\n\n\n\n\nconst loadPostsAPI =async()=>{\n    console.log('1111')\n    const res=await axios.get('https://2yubi.shop/api/post/index')\n\n    const data=await res.data\n    console.log('jjjjjj',data)\n    return data\n    }\n    \n\nfunction* loadPosts(action){\n    try{\n        const result = yield call(loadPostsAPI)\n        console.log('dongresultss',result)\n        yield put({\n            type:LOAD_POSTS_SUCCESS,\n            data:{\n            data:result.data,\n            nextPage:result.next_page_url\n            }\n                \n                \n        })\n\n    }catch(err){\n        yield put({\n            type:LOAD_POSTS_FAILURE,\n            error:'xx',\n             \n        })\n\n    }\n}\n\n\n\n\n\nconst morePostAPI =async(datas)=>{\n   \n\n    const res= await fetch(`${datas}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n        credentials: \"include\",\n        \n      });\n\n\n\n\n    \n\n      const data= await res.json()\n    console.log('pageResult',data)\n    return data\n    }\n    \n\nfunction* morePost(action){\n    try{\n        const result = yield call(morePostAPI,action.data)\n        console.log('dongresultss',result)\n        yield put({\n            type:LOAD_MORE_POST_SUCCESS,\n            data:{\n                data:result.data,\n                nextPage:result.next_page_url\n            }\n                \n                \n        })\n\n    }catch(err){\n        yield put({\n            type:LOAD_MORE_POST_FAILURE,\n            error:'xx',\n             \n        })\n\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\nconst loadsPostsAPI =async()=>{\n    try{\n        const res= await fetch(\"https://2yubi.shop/api/post/index\", {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n            credentials: \"include\",\n            \n          });\n          const data= await res.json()\n\n          return data\n\n    }catch(err){\n        console.log(err)\n    }\n}\n    \n\nfunction* loadsPosts(action){\n    try{\n        const result = yield call(loadsPostsAPI)\n        console.log('dongresultss',result)\n        yield put({\n            type:LOADS_POSTS_SUCCESS,\n            data:{\n                data:result.data,\n                nextPage:result.next_page_url\n                            }\n                                \n        })\n\n    }catch(err){\n        yield put({\n            type:LOADS_POSTS_FAILURE,\n            error:'xx',\n             \n        })\n\n    }\n}\n\n\n\n\n\n\n\n\nconst addCommentAPI=async(datas)=>{\n\n    try{\n        \n        const res= await fetch(`https://2yubi.shop/api/comment/store/${datas.postId}`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n            credentials: \"include\",\n            body: JSON.stringify({\n              content:datas.contents.content\n             \n        }),\n          });\n          const data= await res.json()\n        \n      \n          return data\n\n    }catch(err){\n        console.log(err)\n    }\n\n    }\n    \n\nfunction* addComment(action){\n    try{\n        const result=yield call(addCommentAPI,action.data)\n        console.log('commentresult',result)\n        yield put({\n            type:ADD_COMMENT_SUCCESS,\n            data:{\n                id:action.data.postId,\n                result\n\n            }\n        })\n\n    }catch(err){\n        yield put({\n            type:ADD_COMMENT_FAILURE,\n            error:'err.response.data',\n             \n        })\n\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\nfunction* watchLoadPosts(){\n    yield takeLatest(LOAD_POSTS_REQUEST,loadPosts)\n}\nfunction* watchAddComment(){\n    yield takeLatest(ADD_COMMENT_REQUEST,addComment)\n}\nfunction* watchLoadsPosts(){\n    yield takeLatest(LOADS_POSTS_REQUEST,loadsPosts)\n}\nfunction* watchLoadMorePost(){\n    yield takeLatest(LOAD_MORE_POST_REQUEST,morePost)\n}\n\n\nexport default function* rootSaga(){\n\n    yield all([\n        fork(watchLoadPosts),\n        fork(watchAddComment),\n        fork(watchLoadsPosts),\n        fork(watchLoadMorePost),\n      \n    ])\n\n}\n"]},"metadata":{},"sourceType":"module"}