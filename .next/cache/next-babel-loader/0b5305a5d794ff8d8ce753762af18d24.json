{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(addPost),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(loadPosts),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(morePost),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(loadsPosts),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(addComment),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(deletePost),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddPost),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadPosts),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddComment),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadsPosts),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadMorePost),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(watchDeletePost),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, call, fork, put, takeLatest, take } from 'redux-saga/effects';\nimport { ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, LOAD_POSTS_FAILURE, LOAD_POSTS_SUCCESS, LOAD_POSTS_REQUEST, ADD_COMMENT_REQUEST, ADD_COMMENT_FAILURE, ADD_COMMENT_SUCCESS, LOADS_POSTS_FAILURE, LOADS_POSTS_SUCCESS, LOADS_POSTS_REQUEST, LOAD_MORE_POST_REQUEST, LOAD_MORE_POST_SUCCESS, LOAD_MORE_POST_FAILURE, DELETE_POST_REQUEST, DELETE_POST_SUCCESS, DELETE_POST_FAILURE } from '../reducers/post';\nimport axios from 'axios';\n\nfunction addPostAPI(data) {// return axios.post('/signup',data)\n}\n\nfunction addPost(action) {\n  return _regeneratorRuntime.wrap(function addPost$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          // const result=yield call(addPostAPI,action.data)\n          console.log('ddddddddd');\n          _context.next = 4;\n          return put({\n            type: ADD_POST_SUCCESS,\n            data: action.data\n          });\n\n        case 4:\n          _context.next = 10;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 10;\n          return put({\n            type: ADD_POST_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 6]]);\n}\n\nvar loadPostsAPI = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log('1111');\n            _context2.next = 3;\n            return axios.get('https://2yubi.shop/api/post/index');\n\n          case 3:\n            res = _context2.sent;\n            _context2.next = 6;\n            return res.data;\n\n          case 6:\n            data = _context2.sent;\n            console.log('jjjjjj', data);\n            return _context2.abrupt(\"return\", data);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function loadPostsAPI() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction loadPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadPosts$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(loadPostsAPI);\n\n        case 3:\n          result = _context3.sent;\n          console.log('dongresultss', result);\n          _context3.next = 7;\n          return put({\n            type: LOAD_POSTS_SUCCESS,\n            data: {\n              data: result.data,\n              nextPage: result.next_page_url\n            }\n          });\n\n        case 7:\n          _context3.next = 13;\n          break;\n\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 13;\n          return put({\n            type: LOAD_POSTS_FAILURE,\n            error: 'xx'\n          });\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked2, null, [[0, 9]]);\n}\n\nvar morePostAPI = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(datas) {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return fetch(\"\".concat(datas), {\n              method: \"GET\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\"\n              },\n              credentials: \"include\"\n            });\n\n          case 2:\n            res = _context4.sent;\n            _context4.next = 5;\n            return res.json();\n\n          case 5:\n            data = _context4.sent;\n            console.log('pageResult', data);\n            return _context4.abrupt(\"return\", data);\n\n          case 8:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function morePostAPI(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nfunction morePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function morePost$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(morePostAPI, action.data);\n\n        case 3:\n          result = _context5.sent;\n          console.log('dongresultss', result);\n          _context5.next = 7;\n          return put({\n            type: LOAD_MORE_POST_SUCCESS,\n            data: {\n              data: result.data,\n              nextPage: result.next_page_url\n            }\n          });\n\n        case 7:\n          _context5.next = 13;\n          break;\n\n        case 9:\n          _context5.prev = 9;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 13;\n          return put({\n            type: LOAD_MORE_POST_FAILURE,\n            error: 'xx'\n          });\n\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked3, null, [[0, 9]]);\n}\n\nvar loadsPostsAPI = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee3$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            _context6.next = 3;\n            return fetch(\"https://2yubi.shop/api/post/index\", {\n              method: \"GET\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\"\n              },\n              credentials: \"include\"\n            });\n\n          case 3:\n            res = _context6.sent;\n            _context6.next = 6;\n            return res.json();\n\n          case 6:\n            data = _context6.sent;\n            return _context6.abrupt(\"return\", data);\n\n          case 10:\n            _context6.prev = 10;\n            _context6.t0 = _context6[\"catch\"](0);\n            console.log(_context6.t0);\n\n          case 13:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee3, null, [[0, 10]]);\n  }));\n\n  return function loadsPostsAPI() {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nfunction loadsPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadsPosts$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(loadsPostsAPI);\n\n        case 3:\n          result = _context7.sent;\n          console.log('dongresultss', result);\n          _context7.next = 7;\n          return put({\n            type: LOADS_POSTS_SUCCESS,\n            data: {\n              data: result.data,\n              nextPage: result.next_page_url\n            }\n          });\n\n        case 7:\n          _context7.next = 13;\n          break;\n\n        case 9:\n          _context7.prev = 9;\n          _context7.t0 = _context7[\"catch\"](0);\n          _context7.next = 13;\n          return put({\n            type: LOADS_POSTS_FAILURE,\n            error: 'xx'\n          });\n\n        case 13:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked4, null, [[0, 9]]);\n}\n\nvar addCommentAPI = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(datas) {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee4$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n            _context8.next = 3;\n            return fetch(\"https://2yubi.shop/api/comment/store/\".concat(datas.postId), {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\"\n              },\n              credentials: \"include\",\n              body: JSON.stringify({\n                content: datas.contents.content\n              })\n            });\n\n          case 3:\n            res = _context8.sent;\n            _context8.next = 6;\n            return res.json();\n\n          case 6:\n            data = _context8.sent;\n            return _context8.abrupt(\"return\", data);\n\n          case 10:\n            _context8.prev = 10;\n            _context8.t0 = _context8[\"catch\"](0);\n            console.log(_context8.t0);\n\n          case 13:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee4, null, [[0, 10]]);\n  }));\n\n  return function addCommentAPI(_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nfunction addComment(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addComment$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(addCommentAPI, action.data);\n\n        case 3:\n          result = _context9.sent;\n          console.log('commentresult', result);\n          _context9.next = 7;\n          return put({\n            type: ADD_COMMENT_SUCCESS,\n            data: {\n              id: action.data.postId,\n              result: result\n            }\n          });\n\n        case 7:\n          _context9.next = 13;\n          break;\n\n        case 9:\n          _context9.prev = 9;\n          _context9.t0 = _context9[\"catch\"](0);\n          _context9.next = 13;\n          return put({\n            type: ADD_COMMENT_FAILURE,\n            error: 'err.response.data'\n          });\n\n        case 13:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked5, null, [[0, 9]]);\n}\n\nvar deletePostAPI = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(datas) {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee5$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.next = 2;\n            return axios[\"delete\"](\"https://2yubi.shop/api/post/\".concat(datas));\n\n          case 2:\n            res = _context10.sent;\n            _context10.next = 5;\n            return res.data;\n\n          case 5:\n            data = _context10.sent;\n            return _context10.abrupt(\"return\", data);\n\n          case 7:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function deletePostAPI(_x3) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nfunction deletePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function deletePost$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          _context11.next = 3;\n          return call(deletePostAPI, action.data);\n\n        case 3:\n          result = _context11.sent;\n          _context11.next = 6;\n          return put({\n            type: DELETE_POST_SUCCESS\n          });\n\n        case 6:\n          _context11.next = 12;\n          break;\n\n        case 8:\n          _context11.prev = 8;\n          _context11.t0 = _context11[\"catch\"](0);\n          _context11.next = 12;\n          return put({\n            type: DELETE_POST_FAILURE,\n            error: 'xx'\n          });\n\n        case 12:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked6, null, [[0, 8]]);\n}\n\nfunction watchAddPost() {\n  return _regeneratorRuntime.wrap(function watchAddPost$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeLatest(ADD_POST_REQUEST, addPost);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked7);\n}\n\nfunction watchLoadPosts() {\n  return _regeneratorRuntime.wrap(function watchLoadPosts$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction watchAddComment() {\n  return _regeneratorRuntime.wrap(function watchAddComment$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeLatest(ADD_COMMENT_REQUEST, addComment);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked9);\n}\n\nfunction watchLoadsPosts() {\n  return _regeneratorRuntime.wrap(function watchLoadsPosts$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return takeLatest(LOADS_POSTS_REQUEST, loadsPosts);\n\n        case 2:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction watchLoadMorePost() {\n  return _regeneratorRuntime.wrap(function watchLoadMorePost$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return takeLatest(LOAD_MORE_POST_REQUEST, morePost);\n\n        case 2:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked11);\n}\n\nfunction watchDeletePost() {\n  return _regeneratorRuntime.wrap(function watchDeletePost$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.next = 2;\n          return takeLatest(DELETE_POST_REQUEST, deletePost);\n\n        case 2:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked12);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          _context18.next = 2;\n          return all([fork(watchAddPost), fork(watchLoadPosts), fork(watchAddComment), fork(watchLoadsPosts), fork(watchLoadMorePost), fork(watchDeletePost)]);\n\n        case 2:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, _marked13);\n}","map":{"version":3,"sources":["/Users/dong/CapstonProject/sagas/post.js"],"names":["addPost","loadPosts","morePost","loadsPosts","addComment","deletePost","watchAddPost","watchLoadPosts","watchAddComment","watchLoadsPosts","watchLoadMorePost","watchDeletePost","rootSaga","all","call","fork","put","takeLatest","take","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","LOAD_POSTS_FAILURE","LOAD_POSTS_SUCCESS","LOAD_POSTS_REQUEST","ADD_COMMENT_REQUEST","ADD_COMMENT_FAILURE","ADD_COMMENT_SUCCESS","LOADS_POSTS_FAILURE","LOADS_POSTS_SUCCESS","LOADS_POSTS_REQUEST","LOAD_MORE_POST_REQUEST","LOAD_MORE_POST_SUCCESS","LOAD_MORE_POST_FAILURE","DELETE_POST_REQUEST","DELETE_POST_SUCCESS","DELETE_POST_FAILURE","axios","addPostAPI","data","action","console","log","type","error","response","loadPostsAPI","get","res","result","nextPage","next_page_url","morePostAPI","datas","fetch","method","headers","Accept","credentials","json","loadsPostsAPI","addCommentAPI","postId","body","JSON","stringify","content","contents","id","deletePostAPI"],"mappings":"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","sourcesContent":["\nimport { all,call,fork,put,takeLatest, take} from 'redux-saga/effects'\n\nimport { ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, LOAD_POSTS_FAILURE, LOAD_POSTS_SUCCESS,LOAD_POSTS_REQUEST,ADD_COMMENT_REQUEST,ADD_COMMENT_FAILURE,ADD_COMMENT_SUCCESS,LOADS_POSTS_FAILURE,LOADS_POSTS_SUCCESS,LOADS_POSTS_REQUEST, LOAD_MORE_POST_REQUEST, LOAD_MORE_POST_SUCCESS, LOAD_MORE_POST_FAILURE, DELETE_POST_REQUEST, DELETE_POST_SUCCESS, DELETE_POST_FAILURE} from '../reducers/post'\nimport axios from 'axios'\n\nfunction addPostAPI(data){\n// return axios.post('/signup',data)\n}\n\nfunction* addPost(action){\n\n    try{\n        // const result=yield call(addPostAPI,action.data)\n        console.log('ddddddddd')\n          yield put({\n              type:ADD_POST_SUCCESS,\n              data:action.data\n          })\n      }catch(err){\n          yield put({\n              type:ADD_POST_FAILURE,\n              error:err.response.data,\n               \n          })\n      }\n}\n\n\nconst loadPostsAPI =async()=>{\n    console.log('1111')\n    const res=await axios.get('https://2yubi.shop/api/post/index')\n\n    const data=await res.data\n    console.log('jjjjjj',data)\n    return data\n    }\n    \n\nfunction* loadPosts(action){\n    try{\n        const result = yield call(loadPostsAPI)\n        console.log('dongresultss',result)\n        yield put({\n            type:LOAD_POSTS_SUCCESS,\n            data:{\ndata:result.data,\nnextPage:result.next_page_url\n            }\n                \n                \n        })\n\n    }catch(err){\n        yield put({\n            type:LOAD_POSTS_FAILURE,\n            error:'xx',\n             \n        })\n\n    }\n}\n\n\n\n\n\nconst morePostAPI =async(datas)=>{\n   \n\n    const res= await fetch(`${datas}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n        credentials: \"include\",\n        \n      });\n\n\n\n\n    \n\n      const data= await res.json()\n    console.log('pageResult',data)\n    return data\n    }\n    \n\nfunction* morePost(action){\n    try{\n        const result = yield call(morePostAPI,action.data)\n        console.log('dongresultss',result)\n        yield put({\n            type:LOAD_MORE_POST_SUCCESS,\n            data:{\ndata:result.data,\nnextPage:result.next_page_url\n            }\n                \n                \n        })\n\n    }catch(err){\n        yield put({\n            type:LOAD_MORE_POST_FAILURE,\n            error:'xx',\n             \n        })\n\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\nconst loadsPostsAPI =async()=>{\n    try{\n        const res= await fetch(\"https://2yubi.shop/api/post/index\", {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n            credentials: \"include\",\n            \n          });\n          const data= await res.json()\n\n          return data\n\n    }catch(err){\n        console.log(err)\n    }\n    }\n    \n\n\n\n\n\n\n    \n\nfunction* loadsPosts(action){\n    try{\n        const result = yield call(loadsPostsAPI)\n        console.log('dongresultss',result)\n        yield put({\n            type:LOADS_POSTS_SUCCESS,\n            data:{\n                data:result.data,\n                nextPage:result.next_page_url\n                            }\n                                \n        })\n\n    }catch(err){\n        yield put({\n            type:LOADS_POSTS_FAILURE,\n            error:'xx',\n             \n        })\n\n    }\n}\n\n\n\n\n\n\n\n\nconst addCommentAPI=async(datas)=>{\n\n    try{\n        \n        const res= await fetch(`https://2yubi.shop/api/comment/store/${datas.postId}`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n            credentials: \"include\",\n            body: JSON.stringify({\n              content:datas.contents.content\n             \n        }),\n          });\n          const data= await res.json()\n        \n      \n          return data\n\n    }catch(err){\n        console.log(err)\n    }\n\n    \n\n    \n    // return axios.post(`https://2yubi.shop/api/comment/store/${data.postId}`,data.contents)\n    }\n    \n\nfunction* addComment(action){\n    try{\n        const result=yield call(addCommentAPI,action.data)\n        console.log('commentresult',result)\n        yield put({\n            type:ADD_COMMENT_SUCCESS,\n            data:{\n                id:action.data.postId,\n                result\n\n            }\n        })\n\n    }catch(err){\n        yield put({\n            type:ADD_COMMENT_FAILURE,\n            error:'err.response.data',\n             \n        })\n\n    }\n}\n\n\n\n\n\nconst deletePostAPI =async(datas)=>{\n  \n    const res=await axios.delete(`https://2yubi.shop/api/post/${datas}`)\n\n    const data=await res.data\n    \n    return data\n    }\n    \n\nfunction* deletePost(action){\n    try{\n        const result = yield call(deletePostAPI,action.data)\n    \n        yield put({\n            type:DELETE_POST_SUCCESS,\n          \n                \n                \n        })\n\n    }catch(err){\n        yield put({\n            type:DELETE_POST_FAILURE,\n            error:'xx',\n             \n        })\n\n    }\n}\n\n\n\n\nfunction* watchAddPost(){\n    yield takeLatest(ADD_POST_REQUEST,addPost)\n}\n\nfunction* watchLoadPosts(){\n    yield takeLatest(LOAD_POSTS_REQUEST,loadPosts)\n}\nfunction* watchAddComment(){\n    yield takeLatest(ADD_COMMENT_REQUEST,addComment)\n}\nfunction* watchLoadsPosts(){\n    yield takeLatest(LOADS_POSTS_REQUEST,loadsPosts)\n}\nfunction* watchLoadMorePost(){\n    yield takeLatest(LOAD_MORE_POST_REQUEST,morePost)\n}\nfunction* watchDeletePost(){\n    yield takeLatest(DELETE_POST_REQUEST,deletePost)\n}\n\nexport default function* rootSaga(){\n\n    yield all([\n        fork(watchAddPost),\n        fork(watchLoadPosts),\n        fork(watchAddComment),\n        fork(watchLoadsPosts),\n        fork(watchLoadMorePost),\n        fork(watchDeletePost),\n      \n    ])\n\n}\n"]},"metadata":{},"sourceType":"module"}