{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/dong/CapstonProject/pages/Create/[id].js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport { Polyline, Marker, StreetViewPanorama, MarkerClusterer } from '@react-google-maps/api';\nimport { Form, Card, Table, Button, Slider, Switch, Row, Col, Input } from 'antd';\nimport { fa } from 'faker/lib/locales'; // import CreatedPath from './createdPath';\n\nimport SideBar from '../../component/Layout/SideBar';\nimport { useDispatch, useSelector } from 'react-redux'; // import { BIKE_MAP_REQUEST } from '../reducers/map';\n\nimport { ADD_TRACK_REQUEST } from '../../reducers/map';\nimport create from '@ant-design/icons/lib/components/IconFont';\nimport useInput from '../../hooks/useInput';\nimport { LOAD_LOGIN_REQUEST } from '../../reducers/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createPath() {\n  _s();\n\n  var layout = {\n    labelCol: {\n      span: 8\n    },\n    wrapperCol: {\n      span: 16\n    }\n  };\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      trackName = _useInput2[0],\n      onChangeTrackName = _useInput2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.map;\n  }),\n      createMap = _useSelector.createMap;\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch({\n      type: LOAD_LOGIN_REQUEST\n    });\n  }, []);\n  var dummyMap = {\n    id: 2,\n    name: '경북대학교',\n    distance: 350,\n    userId: 1,\n    description: '설명',\n    event: 'bike',\n    gps: {\n      type: \"LineString\",\n      coordinates: [[128.6107980854627, 35.892532678390346], [128.6068460393017, 35.88766339206395], [128.61174492985546, 35.88602911241712], [128.6145031287387, 35.88856389908935], [128.6123212699206, 35.89099855199497], [128.6128976099858, 35.89463371630573]],\n      id: \"62133c5ff58346f2e09756af\"\n    },\n    altitude: [{\n      x: 0,\n      y: 8\n    }, {\n      x: 1,\n      y: 5\n    }, {\n      x: 2,\n      y: 4\n    }, {\n      x: 3,\n      y: 9\n    }, {\n      x: 4,\n      y: 34\n    }, {\n      x: 5,\n      y: 7\n    }],\n    start_latlng: [128.6107980854627, 35.892532678390346],\n    end_latlng: [128.6128976099858, 35.89463371630573],\n    createdAt: \"2022-02-21T07:16:47.648Z\"\n  };\n  var mapContainerStyle = {\n    height: \"500px\",\n    width: \"600px\",\n    marginTop: 30\n  };\n\n  var _useState = useState(5),\n      strokeWeight = _useState[0],\n      setStrokeWeight = _useState[1];\n\n  var mouseOut = function mouseOut() {\n    setStrokeWeight(5);\n    console.log('aaa');\n  };\n\n  var mouseOver = function mouseOver() {\n    setStrokeWeight(10);\n    console.log('over');\n  };\n\n  var options = {\n    strokeColor: '#348feb',\n    strokeOpacity: 0.8,\n    strokeWeight: 5,\n    fillColor: '#FF0000',\n    fillOpacity: 0.35,\n    clickable: true,\n    draggable: false,\n    editable: false,\n    visible: true,\n    radius: 30000,\n    //-27부터 호주 시작해서 점찍고 점찍고 한다\n    paths: [[{\n      lat: 35.969997373905,\n      lng: 128.45170755523503\n    }, {\n      lat: 35.985501427015464,\n      lng: 128.40407191943035\n    }, {\n      lat: 35.89580489690752,\n      lng: 128.62238368221892\n    }]],\n    zIndex: 1\n  };\n  var options111 = {\n    strokeColor: '#d43b24',\n    strokeOpacity: 0.8,\n    strokeWeight: 5,\n    fillColor: '#FF0000',\n    fillOpacity: 0.35,\n    clickable: true,\n    draggable: false,\n    editable: false,\n    visible: true,\n    radius: 30000,\n    //-27부터 호주 시작해서 점찍고 점찍고 한다\n    paths: [[{\n      lat: 35.969997373905,\n      lng: 128.45170755523503\n    }, {\n      lat: 35.985501427015464,\n      lng: 128.40407191943035\n    }, {\n      lat: 35.89580489690752,\n      lng: 128.62238368221892\n    }]],\n    zIndex: 1\n  };\n\n  var drag = function drag() {\n    console.log('drag');\n  };\n\n  var onLoad = function onLoad(polyline) {\n    console.log('polyline: ', polyline);\n  };\n\n  var _useState2 = useState([0, createMap.gps.coordinates.length - 1]),\n      number = _useState2[0],\n      setNumber = _useState2[1];\n\n  var _useState3 = useState(),\n      distacnce = _useState3[0],\n      setDistance = _useState3[1];\n\n  var _useState4 = useState([createMap.gps.coordinates]),\n      twoPolyline = _useState4[0],\n      setTwoPolyline = _useState4[1];\n\n  var _useState5 = useState({\n    lat: createMap.gps.coordinates[0][1],\n    lng: createMap.gps.coordinates[0][0]\n  }),\n      leftPath = _useState5[0],\n      setLeftPath = _useState5[1];\n\n  var _useState6 = useState({\n    lat: createMap.gps.coordinates[createMap.gps.coordinates.length - 1][1],\n    lng: createMap.gps.coordinates[createMap.gps.coordinates.length - 1][0]\n  }),\n      rightPath = _useState6[0],\n      setRightPath = _useState6[1];\n\n  var change = function change(value) {\n    console.log('value', value);\n    setNumber(value);\n  };\n\n  useEffect(function () {\n    setLeftPath({\n      lat: createMap.gps.coordinates[number[0]][1],\n      lng: createMap.gps.coordinates[number[0]][0]\n    });\n    setTwoPolyline([createMap.gps.coordinates.slice(number[0], number[1])]);\n    console.log('two', twoPolyline);\n    console.log(number[0]);\n  }, [number[0]]);\n  useEffect(function () {\n    setRightPath({\n      lat: createMap.gps.coordinates[number[1]][1],\n      lng: createMap.gps.coordinates[number[1]][0]\n    });\n    setTwoPolyline([createMap.gps.coordinates.slice(number[0], number[1])]);\n    console.log('three', twoPolyline);\n    console.log(number[1]);\n  }, [number[1]]);\n  var storePath = [];\n  var altitudes = [];\n  var totalDistance = 0;\n\n  var _useState7 = useState(),\n      newPath = _useState7[0],\n      setNewPath = _useState7[1];\n\n  var pathStore = function pathStore() {\n    for (var i = number[0]; i < number[1] + 1; i++) {\n      storePath.push(createMap.gps.coordinates[i]);\n      altitudes.push(createMap.altitude[i].y);\n    }\n\n    totalDistance = createMap.distance[number[1]] - createMap.distance[number[0]];\n    console.log(totalDistance, 'al', altitudes);\n    dispatch({\n      type: ADD_TRACK_REQUEST,\n      data: {\n        trackName: trackName,\n        totalDistance: totalDistance,\n        // userId:createMap.track.user.userId,//나중에포스트 sns되면\n        // name:createMap.track.user.name,//나중에 포스트Sns되면\n        // desription:createMap.track.description,//나중에포스트sns되면\n        // checkPoint:createMap.track.checkPoint//나중에포스트sns되면\n        //더미\n        userId: 1,\n        name: '김동영',\n        description: '라이딩하기좋아요',\n        checkPoint: [[1, 2]],\n        //더미\n        event: createMap.event,\n        gps: storePath,\n        altitude: altitudes\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            fontSize: 40\n          },\n          children: \"\\uACBD\\uBD81\\uB300\\uD559\\uAD50 \\uD55C\\uBC14\\uD034\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: 40\n          },\n          children: /*#__PURE__*/_jsxDEV(Slider, {\n            range: true,\n            defaultValue: number,\n            max: createMap.gps.coordinates.length - 1,\n            onChange: change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n          googleMapsApiKey: \"AIzaSyAYsO2CGL0YCjMoLk29eyitFC2PIJnJbYE\",\n          children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n            id: \"marker-example\",\n            mapContainerStyle: mapContainerStyle,\n            zoom: 15,\n            center: {\n              lat: createMap.gps.coordinates[0][1],\n              lng: createMap.gps.coordinates[0][0]\n            } // {lat:35.89567677518036, lng:  128.6200643553443}\n            ,\n            children: [/*#__PURE__*/_jsxDEV(Marker, {\n              position: leftPath,\n              icon: {\n                url: ' http://maps.google.com/mapfiles/ms/icons/blue.png'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(Marker, {\n              position: rightPath\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n              onDragStart: drag,\n              onLoad: onLoad,\n              options: options,\n              path: createMap.gps.coordinates.map(function (m) {\n                return {\n                  lat: m[1],\n                  lng: m[0]\n                };\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n              onDragStart: drag,\n              onLoad: onLoad,\n              options: options111,\n              path: twoPolyline[0].map(function (m) {\n                return {\n                  lat: m[1],\n                  lng: m[0]\n                };\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            marginTop: 150,\n            borderRadius: 40,\n            marginLeft: 90\n          },\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            style: {},\n            placeholder: \"\\uACBD\\uB85C\\uC774\\uB984\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n            value: trackName,\n            onChange: onChangeTrackName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: pathStore,\n            children: \"\\uACBD\\uB85C\\uB9CC\\uB4E4\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 5\n  }, this);\n}\n\n_s(createPath, \"cbdiPcfmxg5U/JCt1fXBAMRvVb8=\", false, function () {\n  return [useInput, useSelector, useDispatch];\n});\n\nexport var __N_SSG = true;\nexport default createPath;","map":{"version":3,"sources":["/Users/dong/CapstonProject/pages/Create/[id].js"],"names":["React","useEffect","useState","GoogleMap","LoadScript","Polyline","Marker","StreetViewPanorama","MarkerClusterer","Form","Card","Table","Button","Slider","Switch","Row","Col","Input","fa","SideBar","useDispatch","useSelector","ADD_TRACK_REQUEST","create","useInput","LOAD_LOGIN_REQUEST","createPath","layout","labelCol","span","wrapperCol","trackName","onChangeTrackName","state","map","createMap","dispatch","type","dummyMap","id","name","distance","userId","description","event","gps","coordinates","altitude","x","y","start_latlng","end_latlng","createdAt","mapContainerStyle","height","width","marginTop","strokeWeight","setStrokeWeight","mouseOut","console","log","mouseOver","options","strokeColor","strokeOpacity","fillColor","fillOpacity","clickable","draggable","editable","visible","radius","paths","lat","lng","zIndex","options111","drag","onLoad","polyline","length","number","setNumber","distacnce","setDistance","twoPolyline","setTwoPolyline","leftPath","setLeftPath","rightPath","setRightPath","change","value","slice","storePath","altitudes","totalDistance","newPath","setNewPath","pathStore","i","push","data","checkPoint","fontSize","marginLeft","url","m","borderRadius"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport { Polyline ,Marker,StreetViewPanorama,MarkerClusterer} from '@react-google-maps/api';\nimport {Form,Card,Table,Button,Slider, Switch,Row,Col,Input} from 'antd'\nimport { fa } from 'faker/lib/locales';\n// import CreatedPath from './createdPath';\nimport SideBar from '../../component/Layout/SideBar';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { BIKE_MAP_REQUEST } from '../reducers/map';\nimport { END } from 'redux-saga';\nimport wrapper from '../../store/configureStore';\nimport { ADD_TRACK_REQUEST, LOAD_CREATEMAP_REQUEST } from '../../reducers/map';\nimport axios from 'axios';\nimport create from '@ant-design/icons/lib/components/IconFont';\nimport useInput from '../../hooks/useInput';\nimport { LOAD_LOGIN_REQUEST } from '../../reducers/user';\n\n\n\n\nfunction createPath() {\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n      };\n\n    const [trackName,onChangeTrackName]=useInput('');\n\n    const {createMap}=useSelector((state)=>state.map)\n\n   \n\nconst dispatch=useDispatch()\nuseEffect(()=>{\n    dispatch({\n        type: LOAD_LOGIN_REQUEST\n        });\n},[])\n\n\nconst dummyMap={\n    id:2,\n    name:'경북대학교',\n    distance:350,\n    userId:1,\n    description:'설명',\n    event:'bike',\n    gps:{\n        type:\"LineString\",\n        coordinates: [\n            [\n                128.6107980854627,\n                35.892532678390346\n            ],\n            [\n                128.6068460393017,\n                35.88766339206395\n            ],\n            [\n                 128.61174492985546,\n                 35.88602911241712\n            ],\n            [128.6145031287387,\n                35.88856389908935\n            ],\n            [\n                128.6123212699206,\n                35.89099855199497\n            ],\n            [\n                128.6128976099858,\n                35.89463371630573\n            ]\n           \n        ],\n        id: \"62133c5ff58346f2e09756af\"\n    \n    },\n    altitude: [\n        { x: 0, y: 8 },\n        { x: 1, y: 5 },\n        { x: 2, y: 4 },\n        { x: 3, y: 9 },\n        { x: 4, y: 34 },\n        { x: 5, y: 7 },\n    ],\n    start_latlng: [\n        128.6107980854627,\n        35.892532678390346\n    ],\n    end_latlng: [\n        128.6128976099858,\n        35.89463371630573\n    ],\n    createdAt: \"2022-02-21T07:16:47.648Z\",\n    }\n\n\nconst mapContainerStyle = {\n    height: \"500px\",\n    width: \"600px\",\n    marginTop:30\n   \n   \n  };\n\n    \n\nconst [strokeWeight,setStrokeWeight]=useState(5)\n\n\nconst mouseOut=()=>{\n    setStrokeWeight(5)\n    console.log('aaa')\n}\n\nconst mouseOver=()=>{\n    setStrokeWeight(10)\n    console.log('over')\n}\n   \n\n    const options = {\n        strokeColor: '#348feb',\n        strokeOpacity: 0.8,\n        strokeWeight: 5,\n        fillColor: '#FF0000',\n        fillOpacity: 0.35,\n        clickable: true,\n        draggable: false,\n        editable: false,\n        visible: true,\n        radius: 30000,\n        //-27부터 호주 시작해서 점찍고 점찍고 한다\n        paths: [\n              [\n                  {lat:  35.969997373905, lng: 128.45170755523503},\n                  {lat:35.985501427015464, lng:128.40407191943035},\n              \n                  {lat: 35.89580489690752, lng: 128.62238368221892}\n                  \n              ]\n        \n        ],\n        zIndex: 1\n      };\n\n\n      const options111 = {\n        strokeColor: '#d43b24',\n        strokeOpacity: 0.8,\n        strokeWeight: 5,\n        fillColor: '#FF0000',\n        fillOpacity: 0.35,\n        clickable: true,\n        draggable: false,\n        editable: false,\n        visible: true,\n        radius: 30000,\n        //-27부터 호주 시작해서 점찍고 점찍고 한다\n        paths: [\n              [\n                  {lat:  35.969997373905, lng: 128.45170755523503},\n                  {lat:35.985501427015464, lng:128.40407191943035},\n              \n                  {lat: 35.89580489690752, lng: 128.62238368221892}\n                  \n              ]\n        \n        ],\n        zIndex: 1\n      };\n\n      const drag=()=>{\n          console.log('drag')\n      }\n\n      const onLoad = polyline => {\n        console.log('polyline: ', polyline)\n      };\n\n      const [number,setNumber]=useState([0,createMap.gps.coordinates.length-1])\n\n      const [distacnce,setDistance]=useState()\n\n      const [twoPolyline,setTwoPolyline]=useState([createMap.gps.coordinates])\n      \n      const [leftPath,setLeftPath]=useState({\n          lat:createMap.gps.coordinates[0][1],lng:createMap.gps.coordinates[0][0]\n        })\n      const [rightPath,setRightPath]=useState({\n        lat:createMap.gps.coordinates[createMap.gps.coordinates.length-1][1],lng:createMap.gps.coordinates[createMap.gps.coordinates.length-1][0]\n      })\n\n      const change=(value)=>{\n          console.log('value',value)\n        setNumber(value)\n       \n      }\n\n      useEffect(()=>{\n          setLeftPath({\n              lat:createMap.gps.coordinates[number[0]][1],\n              lng:createMap.gps.coordinates[number[0]][0]\n          \n            })\n            setTwoPolyline([createMap.gps.coordinates.slice(number[0],number[1])])\n            console.log('two',twoPolyline)\n            console.log(number[0])\n\n      },[number[0]])\n      useEffect(()=>{\n        setRightPath({\n            lat:createMap.gps.coordinates[number[1]][1],\n            lng:createMap.gps.coordinates[number[1]][0]\n        \n          })\n          setTwoPolyline([createMap.gps.coordinates.slice(number[0],number[1])])\n          console.log('three',twoPolyline)\n          console.log(number[1])\n\n\n    },[number[1]])\n    const storePath=[]\n    const altitudes=[]\n   \n    \n    var totalDistance=0\n    \n    const [newPath,setNewPath]=useState()\n\n    const pathStore=()=>{\n        \n        for(var i=number[0]; i<number[1]+1; i++){\n            storePath.push(createMap.gps.coordinates[i])\n            altitudes.push(createMap.altitude[i].y)\n            \n        }\n        totalDistance=createMap.distance[number[1]]-createMap.distance[number[0]]\n        console.log(totalDistance,'al',altitudes)\n       \n        dispatch({\n            type:ADD_TRACK_REQUEST,\n            data:{\n                trackName,\n                totalDistance,\n                // userId:createMap.track.user.userId,//나중에포스트 sns되면\n                // name:createMap.track.user.name,//나중에 포스트Sns되면\n            // desription:createMap.track.description,//나중에포스트sns되면\n                // checkPoint:createMap.track.checkPoint//나중에포스트sns되면\n                //더미\n                userId:1,\n                name:'김동영',\n                description:'라이딩하기좋아요',\n                checkPoint:[[1,2]],\n                //더미\n                event:createMap.event,\n                \n                gps:storePath,\n                altitude:altitudes\n            }\n        })\n      \n    }\n\n  return (\n    <div>\n        <Row>\n            <Col span={12}>\n            <h1 style={{fontSize:40}}>경북대학교 한바퀴</h1>\n        <div style={{marginLeft:40}}><Slider range defaultValue={number} max={createMap.gps.coordinates.length-1} onChange={change} /></div>\n        {/* {state&&<Switch size=\"small\" checked={disabled} onChange={this.handleDisabledChange} />} */}\n    <LoadScript\n    googleMapsApiKey=\"AIzaSyAYsO2CGL0YCjMoLk29eyitFC2PIJnJbYE\"\n    >\n        \n      <GoogleMap\n        id=\"marker-example\"\n        mapContainerStyle={mapContainerStyle}\n        zoom={15}\n        \n        center={{\n            lat: createMap.gps.coordinates[0][1],\n            lng: createMap.gps.coordinates[0][0],\n          }\n            \n            // {lat:35.89567677518036, lng:  128.6200643553443}\n        \n        }\n       \n        \n      \n        \n      >\n    \n    {/* <Marker  position={{lat:dummyMap.start_latlng[1],lng:dummyMap.start_latlng[0]}}  /> */}\n   \n    <Marker position={leftPath} icon={{url:' http://maps.google.com/mapfiles/ms/icons/blue.png',}} ></Marker>\n    <Marker position={rightPath} ></Marker>\n    \n   \n         <Polyline onDragStart={drag} onLoad={onLoad}  options={options} path={createMap.gps.coordinates.map((m)=>(\n            {\n                lat:m[1],\n                lng:m[0]\n            }\n        ))}></Polyline> \n        <Polyline onDragStart={drag} onLoad={onLoad}  options={options111} path={twoPolyline[0].map((m)=>(\n            {\n                lat:m[1],\n                lng:m[0]\n            }\n        ))}></Polyline> \n\n     \n    \n    \n    \n    \n    \n        \n      </GoogleMap>\n      </LoadScript>\n      \n      \n                \n            </Col>\n            <Col span={12}>\n            {/* <h1>{number[0]}</h1>\n<h1>{number[1]}</h1> */}\n<Card style={{marginTop:150,borderRadius:40,marginLeft:90}}>\n<Input  style={{}} placeholder='경로이름을 입력해주세요' value={trackName} onChange={onChangeTrackName}></Input>\n\n      <Button  onClick={pathStore}>경로만들기</Button>\n     \n\n</Card>\n\n     \n    <div>\n        {/* <CreatedPath mapContainerStyle={mapContainerStyle} options={options} newPath={newPath} dummyMap={dummyMap}></CreatedPath> */}\n        </div>  \n\n            </Col>\n        </Row>\n\n\n\n{/* <Slider defaultValue={number} onChange={change} /> */}\n\n    </div>\n  )\n}\n\n\n\nexport async function getStaticPaths(){\n    const posts= await axios.get('http://13.124.24.179/api/gpsdata')\n   \n\nvar paths1=posts.data.map((id)=>({\n     params:{id:id._id}\n }))\n\n return{\n     paths:paths1,\n    // paths:[  { params: { id: '62256147dc2958292cb17110' } },],\n     fallback:false\n }\n}\n\nexport const getStaticProps=wrapper.getStaticProps(async (context)=>{\n    // const cookie = context.req ? context.req.headers.cookie : '';\n    // axios.defaults.headers.Cookie = '';\n    // if (context.req && cookie) {\n    //   axios.defaults.headers.Cookie = cookie;\n    // }\n    //  context.store.dispatch({\n    //   type: LOAD_MY_INFO_REQUEST\n    //   });\n    context.store.dispatch({\n        type:LOAD_CREATEMAP_REQUEST,\n        data:context.params.id\n    })\n    context.store.dispatch(END)\n    await context.store.sagaTask.toPromise()\n})\n\n\nexport default createPath"]},"metadata":{},"sourceType":"module"}