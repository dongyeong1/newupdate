{"ast":null,"code":"import { all, call, fork, put, takeLatest, take } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { SEARCH_MAP_REQUEST, SEARCH_MAP_SUCCESS, SEARCH_MAP_FAILURE, LOAD_MAP_REQUEST, LOAD_MAP_SUCCESS, LOAD_MAP_FAILURE, MOVING_MAP_SUCCESS, MOVING_MAP_REQUEST, MOVING_MAP_FAILURE, RUNNING_MAP_FAILURE, RUNNING_MAP_SUCCESS, RUNNING_MAP_REQUEST, BIKE_MAP_REQUEST, BIKE_MAP_SUCCESS, BIKE_MAP_FAILURE, LOAD_CREATEMAP_REQUEST, LOAD_CREATEMAP_SUCCESS, LOAD_CREATEMAP_FAILURE, ADD_TRACK_REQUEST, ADD_TRACK_SUCCESS, ADD_TRACK_FAILURE, LOAD_MY_LOCATION_REQUEST, LOAD_MY_LOCATION_SUCCESS, LOAD_MY_LOCATION_FAILURE, LOAD_TRACK_RANK_REQUEST, LOAD_TRACK_RANK_SUCCESS, LOAD_TRACK_RANK_FAILURE, LOAD_TRACK_MYRANK_REQUEST, LOAD_TRACK_MYRANK_FAILURE, LOAD_TRACK_MYRANK_SUCCESS } from '../reducers/map';\n\nfunction searchMapAPI(data) {\n  // 13.124.24.179/api/track/search?bounds=128.4642505645752&bounds=35.8402903083385&bounds=128.5250186920166&bounds=128.5250186920166&zoom=16&event=B\n  return axios.get(`http://13.124.24.179/api/tracks/search?bounds=${data.north.lng}&bounds=${data.north.lat}&bounds=${data.south.lng}&bounds=${data.south.lat}&event=${data.event}`); // return axios.get(`http://13.124.24.179/api/track/search?bounds=128.4642505645752&bounds=35.8402903083385&bounds=128.5250186920166&bounds=128.5250186920166&zoom=16&event=B`)\n}\n\nfunction* searchMap(action) {\n  try {\n    const result = yield call(searchMapAPI, action.data);\n    yield put({\n      type: SEARCH_MAP_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: SEARCH_MAP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nconst loadMapAPI = async datas => {\n  const res = axios.get(`https://2yubi.shop/api/tracks?track_id=${datas}`); //    const res=axios.get('https://2yubi.shop/api/tracks?track_id=622561232d6ee07c40f75bdc')\n\n  const data = await res;\n  console.log('ddddddddddd');\n  console.log('jusu', data);\n  return data;\n};\n\nfunction* loadMap(action) {\n  try {\n    const result = yield call(loadMapAPI, action.data);\n    console.log('maedong', result.data);\n    yield put({\n      type: LOAD_MAP_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MAP_FAILURE,\n      error: 'ss'\n    });\n  }\n}\n\nfunction movingMapAPI(data) {\n  return axios.get(`http://13.124.24.179/api/tracks/search?bounds=${data.north.lng}&bounds=${data.north.lat}&bounds=${data.south.lng}&bounds=${data.south.lat}&event=${data.event}`);\n}\n\nfunction* movingMap(action) {\n  try {\n    const result = yield call(movingMapAPI, action.data);\n    yield put({\n      type: MOVING_MAP_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: MOVING_MAP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction runningMapAPI(data) {\n  return axios.get(`http://13.124.24.179/api/tracks/search?bounds=${data.north.lng}&bounds=${data.north.lat}&bounds=${data.south.lng}&bounds=${data.south.lat}&event=${data.event}`);\n}\n\nfunction* runningMap(action) {\n  try {\n    const result = yield call(runningMapAPI, action.data);\n    yield put({\n      type: RUNNING_MAP_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: RUNNING_MAP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction bikeMapAPI(data) {\n  return axios.get(`http://13.124.24.179/api/tracks/search?bounds=${data.north.lng}&bounds=${data.north.lat}&bounds=${data.south.lng}&bounds=${data.south.lat}&event=${data.event}`);\n}\n\nfunction* bikeMap(action) {\n  try {\n    const result = yield call(bikeMapAPI, action.data);\n    yield put({\n      type: BIKE_MAP_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: BIKE_MAP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction createmapLoadAPI(data) {\n  return axios.get(`http://13.124.24.179/api/gpsdata/${data}`);\n}\n\nfunction* createmapLoad(action) {\n  try {\n    const result = yield call(createmapLoadAPI, action.data);\n    console.log('zxct', result.data);\n    yield put({\n      type: LOAD_CREATEMAP_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_CREATEMAP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nconst addTrackAPI = async datas => {\n  // return axios.post(`http://3.35.239.14/api/follow/${data}`)\n  try {\n    const res = await fetch(`https://2yubi.shop/api/tracks`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify({\n        gpsData: datas\n      })\n    });\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n}; // function addTrackAPI(data){\n//     console.log('jong',data)\n//     return axios.post(`https://2yubi.shop/api/tracks`,data) \n//    }\n\n\nfunction* addTrack(action) {\n  try {\n    const result = yield call(addTrackAPI, action.data);\n    console.log('dsss', result);\n    yield put({\n      type: ADD_TRACK_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_TRACK_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction myLocationAPI(data) {\n  return axios.get(`http://13.124.24.179/api/tracks/search?bounds=${data.north.lng}&bounds=${data.north.lat}&bounds=${data.south.lng}&bounds=${data.south.lat}&event=${data.event}`);\n}\n\nfunction* myLocation(action) {\n  try {\n    const result = yield call(myLocationAPI, action.data);\n    yield put({\n      type: LOAD_MY_LOCATION_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_LOCATION_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nconst trackRankAPI = async datas => {\n  const res = await axios.get(`https://2yubi.shop/api/ranking/track?track_id=${datas}`);\n  const data = await res.data;\n  console.log('trank', data);\n  return data;\n};\n\nfunction* trackRank(action) {\n  try {\n    console.log('action', action.data);\n    const result = yield call(trackRankAPI, action.data);\n    console.log('trackRank', result);\n    yield put({\n      type: LOAD_TRACK_RANK_SUCCESS,\n      data: result.ranking\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_TRACK_RANK_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nconst trackMyRankAPI = async datas => {\n  const res = await axios.get(`https://2yubi.shop/api/ranking/myRank?track_id=${datas}`);\n  const data = await res.data;\n  console.log('dongdatass', data);\n  return data;\n};\n\nfunction* trackMyRank(action) {\n  try {\n    console.log('action', action.data);\n    const result = yield call(trackMyRankAPI, action.data);\n    console.log('myTrack', result);\n    yield put({\n      type: LOAD_TRACK_MYRANK_SUCCESS,\n      data: result\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_TRACK_MYRANK_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchSearchMap() {\n  yield takeLatest(SEARCH_MAP_REQUEST, searchMap);\n}\n\nfunction* wahchLoadMap() {\n  yield takeLatest(LOAD_MAP_REQUEST, loadMap);\n}\n\nfunction* watchMovingMap() {\n  yield takeLatest(MOVING_MAP_REQUEST, movingMap);\n}\n\nfunction* watchBikeMap() {\n  yield takeLatest(BIKE_MAP_REQUEST, bikeMap);\n}\n\nfunction* watchRunningMap() {\n  yield takeLatest(RUNNING_MAP_REQUEST, runningMap);\n}\n\nfunction* watchCreateMapLoad() {\n  yield takeLatest(LOAD_CREATEMAP_REQUEST, createmapLoad);\n}\n\nfunction* watchAddTrack() {\n  yield takeLatest(ADD_TRACK_REQUEST, addTrack);\n}\n\nfunction* watchMyLocation() {\n  yield takeLatest(LOAD_MY_LOCATION_REQUEST, myLocation);\n}\n\nfunction* watchMapRank() {\n  yield takeLatest(LOAD_TRACK_RANK_REQUEST, trackRank);\n}\n\nfunction* watchMapMyrank() {\n  yield takeLatest(LOAD_TRACK_MYRANK_REQUEST, trackMyRank);\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchSearchMap), fork(wahchLoadMap), fork(watchMovingMap), fork(watchBikeMap), fork(watchRunningMap), fork(watchCreateMapLoad), fork(watchAddTrack), fork(watchMyLocation), fork(watchMapRank), fork(watchMapMyrank)]);\n}","map":{"version":3,"sources":["/Users/dong/CapstonProject/sagas/map.js"],"names":["all","call","fork","put","takeLatest","take","axios","SEARCH_MAP_REQUEST","SEARCH_MAP_SUCCESS","SEARCH_MAP_FAILURE","LOAD_MAP_REQUEST","LOAD_MAP_SUCCESS","LOAD_MAP_FAILURE","MOVING_MAP_SUCCESS","MOVING_MAP_REQUEST","MOVING_MAP_FAILURE","RUNNING_MAP_FAILURE","RUNNING_MAP_SUCCESS","RUNNING_MAP_REQUEST","BIKE_MAP_REQUEST","BIKE_MAP_SUCCESS","BIKE_MAP_FAILURE","LOAD_CREATEMAP_REQUEST","LOAD_CREATEMAP_SUCCESS","LOAD_CREATEMAP_FAILURE","ADD_TRACK_REQUEST","ADD_TRACK_SUCCESS","ADD_TRACK_FAILURE","LOAD_MY_LOCATION_REQUEST","LOAD_MY_LOCATION_SUCCESS","LOAD_MY_LOCATION_FAILURE","LOAD_TRACK_RANK_REQUEST","LOAD_TRACK_RANK_SUCCESS","LOAD_TRACK_RANK_FAILURE","LOAD_TRACK_MYRANK_REQUEST","LOAD_TRACK_MYRANK_FAILURE","LOAD_TRACK_MYRANK_SUCCESS","searchMapAPI","data","get","north","lng","lat","south","event","searchMap","action","result","type","err","error","response","loadMapAPI","datas","res","console","log","loadMap","movingMapAPI","movingMap","runningMapAPI","runningMap","bikeMapAPI","bikeMap","createmapLoadAPI","createmapLoad","addTrackAPI","fetch","method","headers","Accept","credentials","body","JSON","stringify","gpsData","json","addTrack","myLocationAPI","myLocation","trackRankAPI","trackRank","ranking","trackMyRankAPI","trackMyRank","watchSearchMap","wahchLoadMap","watchMovingMap","watchBikeMap","watchRunningMap","watchCreateMapLoad","watchAddTrack","watchMyLocation","watchMapRank","watchMapMyrank","rootSaga"],"mappings":"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","sourcesContent":["import { all,call,fork,put,takeLatest, take} from 'redux-saga/effects'\nimport axios from 'axios'\nimport { SEARCH_MAP_REQUEST ,\nSEARCH_MAP_SUCCESS,\nSEARCH_MAP_FAILURE,\nLOAD_MAP_REQUEST,\nLOAD_MAP_SUCCESS,\nLOAD_MAP_FAILURE,\nMOVING_MAP_SUCCESS,\nMOVING_MAP_REQUEST,\nMOVING_MAP_FAILURE,\nRUNNING_MAP_FAILURE,\nRUNNING_MAP_SUCCESS,\nRUNNING_MAP_REQUEST,\nBIKE_MAP_REQUEST,\nBIKE_MAP_SUCCESS,\nBIKE_MAP_FAILURE,\nLOAD_CREATEMAP_REQUEST,\nLOAD_CREATEMAP_SUCCESS,\nLOAD_CREATEMAP_FAILURE,\nADD_TRACK_REQUEST,\nADD_TRACK_SUCCESS,\nADD_TRACK_FAILURE,\nLOAD_MY_LOCATION_REQUEST,\nLOAD_MY_LOCATION_SUCCESS,\nLOAD_MY_LOCATION_FAILURE,\nLOAD_TRACK_RANK_REQUEST,\nLOAD_TRACK_RANK_SUCCESS,\nLOAD_TRACK_RANK_FAILURE,\nLOAD_TRACK_MYRANK_REQUEST,\nLOAD_TRACK_MYRANK_FAILURE,\nLOAD_TRACK_MYRANK_SUCCESS\n} from '../reducers/map'\n\n\n\nfunction searchMapAPI(data){\n    // 13.124.24.179/api/track/search?bounds=128.4642505645752&bounds=35.8402903083385&bounds=128.5250186920166&bounds=128.5250186920166&zoom=16&event=B\n    return axios.get(`http://13.124.24.179/api/tracks/search?bounds=${data.north.lng}&bounds=${data.north.lat}&bounds=${data.south.lng}&bounds=${data.south.lat}&event=${data.event}`)\n    // return axios.get(`http://13.124.24.179/api/track/search?bounds=128.4642505645752&bounds=35.8402903083385&bounds=128.5250186920166&bounds=128.5250186920166&zoom=16&event=B`)\n    }\n    \n\nfunction* searchMap(action){\n    try{\n        const result = yield call(searchMapAPI,action.data)\n        yield put({\n            type:SEARCH_MAP_SUCCESS,\n            data:result.data\n        })\n\n    }catch(err){\n        yield put({\n            type:SEARCH_MAP_FAILURE,\n            error:err.response.data,\n             \n        })\n\n    }\n}\n\n\nconst loadMapAPI=async(datas)=>{\n   const res=axios.get(`https://2yubi.shop/api/tracks?track_id=${datas}`)\n//    const res=axios.get('https://2yubi.shop/api/tracks?track_id=622561232d6ee07c40f75bdc')\n    const data=await res\n    console.log('ddddddddddd')\n    console.log('jusu',data)\n\n    return data\n    }\n    \n\nfunction* loadMap(action){\n    try{\n        const result = yield call(loadMapAPI,action.data)\n        console.log('maedong',result.data)\n        yield put({\n            type:LOAD_MAP_SUCCESS,\n            data:result.data\n        })\n\n    }catch(err){\n        yield put({\n            type:LOAD_MAP_FAILURE,\n            error:'ss',\n             \n        })\n\n    }\n}\n\nfunction movingMapAPI(data){\n    return axios.get(`http://13.124.24.179/api/tracks/search?bounds=${data.north.lng}&bounds=${data.north.lat}&bounds=${data.south.lng}&bounds=${data.south.lat}&event=${data.event}`)\n    }\n    \n\nfunction* movingMap(action){\n    try{\n        const result = yield call(movingMapAPI,action.data)\n        yield put({\n            type:MOVING_MAP_SUCCESS,\n            data:result.data\n        })\n\n    }catch(err){\n        yield put({\n            type:MOVING_MAP_FAILURE,\n            error:err.response.data,\n        })\n\n    }\n}\n\nfunction runningMapAPI(data){\n    return axios.get(`http://13.124.24.179/api/tracks/search?bounds=${data.north.lng}&bounds=${data.north.lat}&bounds=${data.south.lng}&bounds=${data.south.lat}&event=${data.event}`)    }\n    \n\nfunction* runningMap(action){\n    try{\n        const result = yield call(runningMapAPI,action.data)\n        yield put({\n            type:RUNNING_MAP_SUCCESS,\n            data:result.data\n        })\n\n    }catch(err){\n        yield put({\n            type:RUNNING_MAP_FAILURE,\n            error:err.response.data,\n        })\n\n    }\n}\n\n\nfunction bikeMapAPI(data){\n    return axios.get(`http://13.124.24.179/api/tracks/search?bounds=${data.north.lng}&bounds=${data.north.lat}&bounds=${data.south.lng}&bounds=${data.south.lat}&event=${data.event}`)\n    }\n    \n\nfunction* bikeMap(action){\n    try{\n        const result = yield call(bikeMapAPI,action.data)\n        yield put({\n            type:BIKE_MAP_SUCCESS,\n            data:result.data\n        })\n\n    }catch(err){\n        yield put({\n            type:BIKE_MAP_FAILURE,\n            error:err.response.data,\n        })\n\n    }\n}\n\n\nfunction createmapLoadAPI(data){\n    return axios.get(`http://13.124.24.179/api/gpsdata/${data}`) \n   }\n\n\nfunction* createmapLoad(action){\n    try{\n        const result = yield call(createmapLoadAPI,action.data)\n        console.log('zxct',result.data)\n        yield put({\n            type:LOAD_CREATEMAP_SUCCESS,\n            data:result.data\n        })\n\n    }catch(err){\n        yield put({\n            type:LOAD_CREATEMAP_FAILURE,\n            error:err.response.data,\n        })\n\n    }\n}\n\n\n\n\nconst addTrackAPI=async(datas)=>{\n    // return axios.post(`http://3.35.239.14/api/follow/${data}`)\n    try{\n        const res= await fetch(`https://2yubi.shop/api/tracks`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n            credentials: \"include\",\n            body:JSON.stringify({\n                gpsData:datas\n            })\n           \n          });\n          const data= await res.json()\n      \n       \n          return data\n\n    }catch(err){\n        console.log(err)\n    }\n    }\n    \n\n\n\n\n\n\n// function addTrackAPI(data){\n//     console.log('jong',data)\n//     return axios.post(`https://2yubi.shop/api/tracks`,data) \n//    }\n\n\nfunction* addTrack(action){\n    try{\n        const result = yield call(addTrackAPI,action.data)\n        console.log('dsss',result)\n        yield put({\n            type:ADD_TRACK_SUCCESS,\n        })\n\n    }catch(err){\n        yield put({\n            type:ADD_TRACK_FAILURE,\n            error:err.response.data,\n        })\n\n    }\n}\n\n\nfunction myLocationAPI(data){\n    return axios.get(`http://13.124.24.179/api/tracks/search?bounds=${data.north.lng}&bounds=${data.north.lat}&bounds=${data.south.lng}&bounds=${data.south.lat}&event=${data.event}`)\n}\n   \n\n\nfunction* myLocation(action){\n    try{\n        const result = yield call(myLocationAPI,action.data)\n        yield put({\n            type:LOAD_MY_LOCATION_SUCCESS,\n            data:result.data\n        })\n\n    }catch(err){\n        yield put({\n            type:LOAD_MY_LOCATION_FAILURE,\n            error:err.response.data,\n        })\n\n    }\n}\n\n\n\n\n\nconst trackRankAPI=async(datas)=>{\n\n    const res=await axios.get(`https://2yubi.shop/api/ranking/track?track_id=${datas}`)\n\n    const data=await res.data\n    console.log('trank',data)    \n    return data\n\n    \n   \n}\n\n\n\n\nfunction* trackRank(action){\n    try{\n        console.log('action',action.data)\n        const result = yield call(trackRankAPI,action.data)\n        console.log('trackRank',result)\n        yield put({\n            type:LOAD_TRACK_RANK_SUCCESS,\n            data:result.ranking\n        })\n\n    }catch(err){\n        yield put({\n            type:LOAD_TRACK_RANK_FAILURE,\n            error:err.response.data,\n        })\n\n    }\n}\n\nconst trackMyRankAPI=async(datas)=>{\n\n    const res=await axios.get(`https://2yubi.shop/api/ranking/myRank?track_id=${datas}`)\n\n    const data=await res.data\n    console.log('dongdatass',data)\n    \n    return data\n\n   \n   \n}\n\n\n\n\nfunction* trackMyRank(action){\n    try{\n        console.log('action',action.data)\n        const result = yield call(trackMyRankAPI,action.data)\n        console.log('myTrack',result)\n        yield put({\n            type:LOAD_TRACK_MYRANK_SUCCESS,\n            data:result\n        })\n\n    }catch(err){\n        yield put({\n            type:LOAD_TRACK_MYRANK_FAILURE,\n            error:err.response.data,\n        })\n\n    }\n}\n\n\n\n\nfunction* watchSearchMap(){\n    yield takeLatest(SEARCH_MAP_REQUEST,searchMap)\n}\n\nfunction* wahchLoadMap(){\n    yield takeLatest(LOAD_MAP_REQUEST,loadMap)\n}\n\nfunction* watchMovingMap(){\n    yield takeLatest(MOVING_MAP_REQUEST,movingMap)\n}\n\nfunction* watchBikeMap(){\n    yield takeLatest(BIKE_MAP_REQUEST,bikeMap)\n}\n\nfunction* watchRunningMap(){\n    yield takeLatest(RUNNING_MAP_REQUEST,runningMap)\n}\n\nfunction* watchCreateMapLoad(){\n    yield takeLatest(LOAD_CREATEMAP_REQUEST,createmapLoad)\n}\n\nfunction* watchAddTrack(){\n    yield takeLatest(ADD_TRACK_REQUEST,addTrack)\n}\n\nfunction* watchMyLocation(){\n    yield takeLatest(LOAD_MY_LOCATION_REQUEST,myLocation)\n}\n\nfunction* watchMapRank(){\n    yield takeLatest(LOAD_TRACK_RANK_REQUEST,trackRank)\n}\n\nfunction* watchMapMyrank(){\n    yield takeLatest(LOAD_TRACK_MYRANK_REQUEST,trackMyRank)\n}\n\n\n\n\n\n\n\nexport default function* rootSaga(){\n\n    yield all([\n        fork(watchSearchMap),\n        fork(wahchLoadMap),\n        fork(watchMovingMap),\n        fork(watchBikeMap),\n        fork(watchRunningMap),\n        fork(watchCreateMapLoad),\n        fork(watchAddTrack),\n        fork(watchMyLocation),\n        fork(watchMapRank),\n        fork(watchMapMyrank)\n        \n\n      \n    ])\n\n}\n"]},"metadata":{},"sourceType":"module"}