{"ast":null,"code":"var _jsxFileName = \"/Users/dong/CapstonProject/pages/location.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\n\nfunction location() {\n  function getLocation() {\n    if (navigator.geolocation) {\n      // GPS를 지원하면\n      navigator.geolocation.getCurrentPosition(function (position) {\n        alert(position.coords.latitude + ' ' + position.coords.longitude);\n      }, function (error) {\n        console.error(error);\n      }, {\n        enableHighAccuracy: false,\n        maximumAge: 0,\n        timeout: Infinity\n      });\n    } else {\n      alert('GPS를 지원하지 않습니다');\n    }\n  }\n\n  useEffect(() => {\n    const gsLocation = getLocation();\n    console.log(gsLocation);\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, \"ss\");\n}\n\nexport default location;","map":{"version":3,"sources":["/Users/dong/CapstonProject/pages/location.js"],"names":["React","location","getLocation","navigator","geolocation","getCurrentPosition","position","alert","coords","latitude","longitude","error","console","enableHighAccuracy","maximumAge","timeout","Infinity","useEffect","gsLocation","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,GAAoB;AAEhB,WAASC,WAAT,GAAuB;AACnB,QAAIC,SAAS,CAACC,WAAd,EAA2B;AAAE;AAC3BD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAASC,QAAT,EAAmB;AAC1DC,QAAAA,KAAK,CAACD,QAAQ,CAACE,MAAT,CAAgBC,QAAhB,GAA2B,GAA3B,GAAiCH,QAAQ,CAACE,MAAT,CAAgBE,SAAlD,CAAL;AACD,OAFD,EAEG,UAASC,KAAT,EAAgB;AACjBC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,OAJD,EAIG;AACDE,QAAAA,kBAAkB,EAAE,KADnB;AAEDC,QAAAA,UAAU,EAAE,CAFX;AAGDC,QAAAA,OAAO,EAAEC;AAHR,OAJH;AASD,KAVD,MAUO;AACLT,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACD;AACF;;AACDU,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMC,UAAU,GAAGhB,WAAW,EAA9B;AACAU,IAAAA,OAAO,CAACO,GAAR,CAAYD,UAAZ;AACD,GAHQ,EAGP,EAHO,CAAT;AAIJ,SAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAQD;;AAED,eAAejB,QAAf","sourcesContent":["import React from 'react'\n\nfunction location() {\n\n    function getLocation() {\n        if (navigator.geolocation) { // GPS를 지원하면\n          navigator.geolocation.getCurrentPosition(function(position) {\n            alert(position.coords.latitude + ' ' + position.coords.longitude);\n          }, function(error) {\n            console.error(error);\n          }, {\n            enableHighAccuracy: false,\n            maximumAge: 0,\n            timeout: Infinity\n          });\n        } else {\n          alert('GPS를 지원하지 않습니다');\n        }\n      }\n      useEffect(()=>{\n        const gsLocation = getLocation();\n        console.log(gsLocation)\n      },[])\n  return (\n\n     \n    <div>\n\nss\n    </div>\n  )\n}\n\nexport default location"]},"metadata":{},"sourceType":"module"}