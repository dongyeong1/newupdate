{"ast":null,"code":"import { all, call, fork, put, takeLatest, take } from 'redux-saga/effects';\nimport { LOGIN_FAIL, LOGIN_REQUEST, LOGIN_SUCCESS, LOGOUT_REQUEST, LOGOUT_SUCCESS } from '../reducers/user';\nimport axios from 'axios';\n\nfunction logInAPI(data) {// return axios.post('/login',data)\n}\n\nfunction* login(action) {\n  // const result =yield call(logInAPI,action.data)\n  try {\n    yield put({\n      type: LOGIN_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield {\n      type: LOGIN_FAIL,\n      data: 'error'\n    };\n  }\n}\n\nfunction logOutAPI(data) {// return axios.post('/logout',data)\n}\n\nfunction* logout() {\n  try {\n    // yield call(logOutAPI)\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: 'error'\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOGIN_REQUEST, login);\n}\n\nfunction* watchLogout() {\n  yield takeLatest(LOGOUT_REQUEST, logout);\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchLogin), fork(watchLogout)]);\n}","map":{"version":3,"sources":["/Users/dong/CapstonProject/sagas/user.js"],"names":["all","call","fork","put","takeLatest","take","LOGIN_FAIL","LOGIN_REQUEST","LOGIN_SUCCESS","LOGOUT_REQUEST","LOGOUT_SUCCESS","axios","logInAPI","data","login","action","type","err","logOutAPI","logout","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","error","watchLogin","watchLogout","rootSaga"],"mappings":"AACA,SAASA,GAAT,EAAaC,IAAb,EAAkBC,IAAlB,EAAuBC,GAAvB,EAA2BC,UAA3B,EAAuCC,IAAvC,QAAkD,oBAAlD;AACA,SAAQC,UAAR,EAAoBC,aAApB,EAAkCC,aAAlC,EAAgDC,cAAhD,EAAgEC,cAAhE,QAAqF,kBAArF;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAuB,CACnB;AACH;;AAED,UAAUC,KAAV,CAAgBC,MAAhB,EAAuB;AACvB;AACA,MAAG;AACH,UAAMZ,GAAG,CAAC;AACNa,MAAAA,IAAI,EAACR,aADC;AAENK,MAAAA,IAAI,EAACE,MAAM,CAACF;AAFN,KAAD,CAAT;AAIC,GALD,CAKC,OAAMI,GAAN,EAAU;AACP,UAAM;AACFD,MAAAA,IAAI,EAACV,UADH;AAEFO,MAAAA,IAAI,EAAC;AAFH,KAAN;AAIH;AACA;;AAGD,SAASK,SAAT,CAAmBL,IAAnB,EAAwB,CACpB;AACH;;AAED,UAAUM,MAAV,GAAkB;AACd,MAAG;AACC;AACA,UAAMhB,GAAG,CAAC;AACNa,MAAAA,IAAI,EAACI;AADC,KAAD,CAAT;AAGH,GALD,CAKC,OAAMH,GAAN,EAAU;AACP,UAAMd,GAAG,CAAC;AACNa,MAAAA,IAAI,EAACK,eADC;AAENC,MAAAA,KAAK,EAAC;AAFA,KAAD,CAAT;AAKH;AACJ;;AAED,UAAUC,UAAV,GAAsB;AAClB,QAAMnB,UAAU,CAACG,aAAD,EAAeO,KAAf,CAAhB;AACH;;AAED,UAAUU,WAAV,GAAuB;AACnB,QAAMpB,UAAU,CAACK,cAAD,EAAgBU,MAAhB,CAAhB;AACH;;AAED,eAAe,UAAUM,QAAV,GAAoB;AAE/B,QAAMzB,GAAG,CAAC,CACNE,IAAI,CAACqB,UAAD,CADE,EAENrB,IAAI,CAACsB,WAAD,CAFE,CAAD,CAAT;AAKH","sourcesContent":["\nimport { all,call,fork,put,takeLatest, take} from 'redux-saga/effects'\nimport {LOGIN_FAIL, LOGIN_REQUEST,LOGIN_SUCCESS,LOGOUT_REQUEST, LOGOUT_SUCCESS} from '../reducers/user'\nimport axios from 'axios'\n\nfunction logInAPI(data){\n    // return axios.post('/login',data)\n}\n\nfunction* login(action){\n// const result =yield call(logInAPI,action.data)\ntry{\nyield put({\n    type:LOGIN_SUCCESS,\n    data:action.data\n})\n}catch(err){\n    yield({\n        type:LOGIN_FAIL,\n        data:'error'\n    })\n}\n} \n\n\nfunction logOutAPI(data){\n    // return axios.post('/logout',data)\n}\n\nfunction* logout(){\n    try{\n        // yield call(logOutAPI)\n        yield put({\n            type:LOG_OUT_SUCCESS,\n        })\n    }catch(err){\n        yield put({\n            type:LOG_OUT_FAILURE,\n            error:'error'\n             \n        })\n    }\n} \n\nfunction* watchLogin(){\n    yield takeLatest(LOGIN_REQUEST,login)\n}\n\nfunction* watchLogout(){\n    yield takeLatest(LOGOUT_REQUEST,logout)\n}\n\nexport default function* rootSaga(){\n\n    yield all([\n        fork(watchLogin),\n        fork(watchLogout)\n    ])\n\n}"]},"metadata":{},"sourceType":"module"}