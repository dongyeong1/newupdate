{"ast":null,"code":"import { all, call, fork, put, takeLatest, take } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { SEARCH_MAP_REQUEST, SEARCH_MAP_SUCCESS, SEARCH_MAP_FAILURE, LOAD_MAP_REQUEST, LOAD_MAP_SUCCESS, LOAD_MAP_FAILURE, MOVING_MAP_SUCCESS, MOVING_MAP_REQUEST, MOVING_MAP_FAILURE, RUNNING_MAP_FAILURE, RUNNING_MAP_SUCCESS, RUNNING_MAP_REQUEST, BIKE_MAP_REQUEST, BIKE_MAP_SUCCESS, BIKE_MAP_FAILURE, LOAD_CREATEMAP_REQUEST, LOAD_CREATEMAP_SUCCESS, LOAD_CREATEMAP_FAILURE, ADD_TRACK_REQUEST, ADD_TRACK_SUCCESS, ADD_TRACK_FAILURE, LOAD_MY_LOCATION_REQUEST, LOAD_MY_LOCATION_SUCCESS, LOAD_MY_LOCATION_FAILURE, LOAD_TRACK_RANK_REQUEST, LOAD_TRACK_RANK_SUCCESS, LOAD_TRACK_RANK_FAILURE, LOAD_TRACK_MYRANK_REQUEST } from '../reducers/map';\n\nfunction searchMapAPI(data) {\n  // 13.124.24.179/api/track/search?bounds=128.4642505645752&bounds=35.8402903083385&bounds=128.5250186920166&bounds=128.5250186920166&zoom=16&event=B\n  return axios.get(`http://13.124.24.179/api/tracks/search?bounds=${data.north.lng}&bounds=${data.north.lat}&bounds=${data.south.lng}&bounds=${data.south.lat}&event=${data.event}`); // return axios.get(`http://13.124.24.179/api/track/search?bounds=128.4642505645752&bounds=35.8402903083385&bounds=128.5250186920166&bounds=128.5250186920166&zoom=16&event=B`)\n}\n\nfunction* searchMap(action) {\n  try {\n    const result = yield call(searchMapAPI, action.data);\n    yield put({\n      type: SEARCH_MAP_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: SEARCH_MAP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadMapAPI(data) {\n  return axios.get(`http://13.124.24.179/api/tracks/${data}/ranks`);\n}\n\nfunction* loadMap(action) {\n  try {\n    const result = yield call(loadMapAPI, action.data);\n    console.log('maedong', result.data);\n    yield put({\n      type: LOAD_MAP_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MAP_FAILURE,\n      error: 'ss'\n    });\n  }\n}\n\nfunction movingMapAPI(data) {\n  return axios.get(`http://13.124.24.179/api/tracks/search?bounds=${data.north.lng}&bounds=${data.north.lat}&bounds=${data.south.lng}&bounds=${data.south.lat}&event=${data.event}`);\n}\n\nfunction* movingMap(action) {\n  try {\n    const result = yield call(movingMapAPI, action.data);\n    yield put({\n      type: MOVING_MAP_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: MOVING_MAP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction runningMapAPI(data) {\n  return axios.get(`http://13.124.24.179/api/tracks/search?bounds=${data.north.lng}&bounds=${data.north.lat}&bounds=${data.south.lng}&bounds=${data.south.lat}&event=${data.event}`);\n}\n\nfunction* runningMap(action) {\n  try {\n    const result = yield call(runningMapAPI, action.data);\n    yield put({\n      type: RUNNING_MAP_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: RUNNING_MAP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction bikeMapAPI(data) {\n  return axios.get(`http://13.124.24.179/api/tracks/search?bounds=${data.north.lng}&bounds=${data.north.lat}&bounds=${data.south.lng}&bounds=${data.south.lat}&event=${data.event}`);\n}\n\nfunction* bikeMap(action) {\n  try {\n    const result = yield call(bikeMapAPI, action.data);\n    yield put({\n      type: BIKE_MAP_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: BIKE_MAP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction createmapLoadAPI(data) {\n  return axios.get(`http://13.124.24.179/api/gpsdata/${data}`);\n}\n\nfunction* createmapLoad(action) {\n  try {\n    const result = yield call(createmapLoadAPI, action.data);\n    console.log('zxct', result.data);\n    yield put({\n      type: LOAD_CREATEMAP_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_CREATEMAP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addTrackAPI(data) {\n  console.log('jong', data);\n  return axios.post(`http://13.124.24.179/api/tracks`, data);\n}\n\nfunction* addTrack(action) {\n  try {\n    const result = yield call(addTrackAPI, action.data);\n    console.log('dsss', result);\n    yield put({\n      type: ADD_TRACK_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_TRACK_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction myLocationAPI(data) {\n  return axios.get(`http://13.124.24.179/api/tracks/search?bounds=${data.north.lng}&bounds=${data.north.lat}&bounds=${data.south.lng}&bounds=${data.south.lat}&event=${data.event}`);\n}\n\nfunction* myLocation(action) {\n  try {\n    const result = yield call(myLocationAPI, action.data);\n    yield put({\n      type: LOAD_MY_LOCATION_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_LOCATION_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nconst trackRankAPI = async datas => {\n  const res = await axios.get('https://2yubi.shop/api/ranking/track?track_id=622561232d6ee07c40f75bdc');\n  const data = await res.data;\n  return data;\n};\n\nfunction* trackRank(action) {\n  try {\n    console.log('action', action.data);\n    const result = yield call(trackRankAPI, action.data);\n    console.log('dong', result.ranking);\n    yield put({\n      type: LOAD_TRACK_RANK_SUCCESS,\n      data: result.ranking\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_TRACK_RANK_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nconst trackMyRankAPI = async datas => {\n  const res = await axios.get('https://2yubi.shop/api/ranking/myRank?track_id=622561232d6ee07c40f75bdc');\n  const data = await res.data;\n  return data;\n};\n\nfunction* trackMyRank(action) {\n  try {\n    console.log('action', action.data);\n    const result = yield call(trackMyRankAPI, action.data);\n    console.log('dong', result.ranking);\n    yield put({\n      type: LOAD_TRACK_MYRANK_SUCCESS,\n      data: result.ranking\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_TRACK_MYRANK_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchSearchMap() {\n  yield takeLatest(SEARCH_MAP_REQUEST, searchMap);\n}\n\nfunction* wahchLoadMap() {\n  yield takeLatest(LOAD_MAP_REQUEST, loadMap);\n}\n\nfunction* watchMovingMap() {\n  yield takeLatest(MOVING_MAP_REQUEST, movingMap);\n}\n\nfunction* watchBikeMap() {\n  yield takeLatest(BIKE_MAP_REQUEST, bikeMap);\n}\n\nfunction* watchRunningMap() {\n  yield takeLatest(RUNNING_MAP_REQUEST, runningMap);\n}\n\nfunction* watchCreateMapLoad() {\n  yield takeLatest(LOAD_CREATEMAP_REQUEST, createmapLoad);\n}\n\nfunction* watchAddTrack() {\n  yield takeLatest(ADD_TRACK_REQUEST, addTrack);\n}\n\nfunction* watchMyLocation() {\n  yield takeLatest(LOAD_MY_LOCATION_REQUEST, myLocation);\n}\n\nfunction* watchMapRank() {\n  yield takeLatest(LOAD_TRACK_RANK_REQUEST, trackRank);\n}\n\nfunction* watchMapMyrank() {\n  yield takeLatest(LOAD_TRACK_MYRANK_REQUEST, trackMyRank);\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchSearchMap), fork(wahchLoadMap), fork(watchMovingMap), fork(watchBikeMap), fork(watchRunningMap), fork(watchCreateMapLoad), fork(watchAddTrack), fork(watchMyLocation), fork(watchMapRank), fork(watchMapMyrank)]);\n}","map":{"version":3,"sources":["/Users/dong/CapstonProject/sagas/map.js"],"names":["all","call","fork","put","takeLatest","take","axios","SEARCH_MAP_REQUEST","SEARCH_MAP_SUCCESS","SEARCH_MAP_FAILURE","LOAD_MAP_REQUEST","LOAD_MAP_SUCCESS","LOAD_MAP_FAILURE","MOVING_MAP_SUCCESS","MOVING_MAP_REQUEST","MOVING_MAP_FAILURE","RUNNING_MAP_FAILURE","RUNNING_MAP_SUCCESS","RUNNING_MAP_REQUEST","BIKE_MAP_REQUEST","BIKE_MAP_SUCCESS","BIKE_MAP_FAILURE","LOAD_CREATEMAP_REQUEST","LOAD_CREATEMAP_SUCCESS","LOAD_CREATEMAP_FAILURE","ADD_TRACK_REQUEST","ADD_TRACK_SUCCESS","ADD_TRACK_FAILURE","LOAD_MY_LOCATION_REQUEST","LOAD_MY_LOCATION_SUCCESS","LOAD_MY_LOCATION_FAILURE","LOAD_TRACK_RANK_REQUEST","LOAD_TRACK_RANK_SUCCESS","LOAD_TRACK_RANK_FAILURE","LOAD_TRACK_MYRANK_REQUEST","searchMapAPI","data","get","north","lng","lat","south","event","searchMap","action","result","type","err","error","response","loadMapAPI","loadMap","console","log","movingMapAPI","movingMap","runningMapAPI","runningMap","bikeMapAPI","bikeMap","createmapLoadAPI","createmapLoad","addTrackAPI","post","addTrack","myLocationAPI","myLocation","trackRankAPI","datas","res","trackRank","ranking","trackMyRankAPI","trackMyRank","LOAD_TRACK_MYRANK_SUCCESS","LOAD_TRACK_MYRANK_FAILURE","watchSearchMap","wahchLoadMap","watchMovingMap","watchBikeMap","watchRunningMap","watchCreateMapLoad","watchAddTrack","watchMyLocation","watchMapRank","watchMapMyrank","rootSaga"],"mappings":"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","sourcesContent":["import { all,call,fork,put,takeLatest, take} from 'redux-saga/effects'\nimport axios from 'axios'\nimport { SEARCH_MAP_REQUEST ,\nSEARCH_MAP_SUCCESS,\nSEARCH_MAP_FAILURE,\nLOAD_MAP_REQUEST,\nLOAD_MAP_SUCCESS,\nLOAD_MAP_FAILURE,\nMOVING_MAP_SUCCESS,\nMOVING_MAP_REQUEST,\nMOVING_MAP_FAILURE,\nRUNNING_MAP_FAILURE,\nRUNNING_MAP_SUCCESS,\nRUNNING_MAP_REQUEST,\nBIKE_MAP_REQUEST,\nBIKE_MAP_SUCCESS,\nBIKE_MAP_FAILURE,\nLOAD_CREATEMAP_REQUEST,\nLOAD_CREATEMAP_SUCCESS,\nLOAD_CREATEMAP_FAILURE,\nADD_TRACK_REQUEST,\nADD_TRACK_SUCCESS,\nADD_TRACK_FAILURE,\nLOAD_MY_LOCATION_REQUEST,\nLOAD_MY_LOCATION_SUCCESS,\nLOAD_MY_LOCATION_FAILURE,\nLOAD_TRACK_RANK_REQUEST,\nLOAD_TRACK_RANK_SUCCESS,\nLOAD_TRACK_RANK_FAILURE,\nLOAD_TRACK_MYRANK_REQUEST\n} from '../reducers/map'\n\n\n\nfunction searchMapAPI(data){\n    // 13.124.24.179/api/track/search?bounds=128.4642505645752&bounds=35.8402903083385&bounds=128.5250186920166&bounds=128.5250186920166&zoom=16&event=B\n    return axios.get(`http://13.124.24.179/api/tracks/search?bounds=${data.north.lng}&bounds=${data.north.lat}&bounds=${data.south.lng}&bounds=${data.south.lat}&event=${data.event}`)\n    // return axios.get(`http://13.124.24.179/api/track/search?bounds=128.4642505645752&bounds=35.8402903083385&bounds=128.5250186920166&bounds=128.5250186920166&zoom=16&event=B`)\n    }\n    \n\nfunction* searchMap(action){\n    try{\n        const result = yield call(searchMapAPI,action.data)\n        yield put({\n            type:SEARCH_MAP_SUCCESS,\n            data:result.data\n        })\n\n    }catch(err){\n        yield put({\n            type:SEARCH_MAP_FAILURE,\n            error:err.response.data,\n             \n        })\n\n    }\n}\n\n\nfunction loadMapAPI(data){\n    return axios.get(`http://13.124.24.179/api/tracks/${data}/ranks`)\n    }\n    \n\nfunction* loadMap(action){\n    try{\n        const result = yield call(loadMapAPI,action.data)\n        console.log('maedong',result.data)\n        yield put({\n            type:LOAD_MAP_SUCCESS,\n            data:result.data\n        })\n\n    }catch(err){\n        yield put({\n            type:LOAD_MAP_FAILURE,\n            error:'ss',\n             \n        })\n\n    }\n}\n\nfunction movingMapAPI(data){\n    return axios.get(`http://13.124.24.179/api/tracks/search?bounds=${data.north.lng}&bounds=${data.north.lat}&bounds=${data.south.lng}&bounds=${data.south.lat}&event=${data.event}`)\n    }\n    \n\nfunction* movingMap(action){\n    try{\n        const result = yield call(movingMapAPI,action.data)\n        yield put({\n            type:MOVING_MAP_SUCCESS,\n            data:result.data\n        })\n\n    }catch(err){\n        yield put({\n            type:MOVING_MAP_FAILURE,\n            error:err.response.data,\n        })\n\n    }\n}\n\nfunction runningMapAPI(data){\n    return axios.get(`http://13.124.24.179/api/tracks/search?bounds=${data.north.lng}&bounds=${data.north.lat}&bounds=${data.south.lng}&bounds=${data.south.lat}&event=${data.event}`)    }\n    \n\nfunction* runningMap(action){\n    try{\n        const result = yield call(runningMapAPI,action.data)\n        yield put({\n            type:RUNNING_MAP_SUCCESS,\n            data:result.data\n        })\n\n    }catch(err){\n        yield put({\n            type:RUNNING_MAP_FAILURE,\n            error:err.response.data,\n        })\n\n    }\n}\n\n\nfunction bikeMapAPI(data){\n    return axios.get(`http://13.124.24.179/api/tracks/search?bounds=${data.north.lng}&bounds=${data.north.lat}&bounds=${data.south.lng}&bounds=${data.south.lat}&event=${data.event}`)\n    }\n    \n\nfunction* bikeMap(action){\n    try{\n        const result = yield call(bikeMapAPI,action.data)\n        yield put({\n            type:BIKE_MAP_SUCCESS,\n            data:result.data\n        })\n\n    }catch(err){\n        yield put({\n            type:BIKE_MAP_FAILURE,\n            error:err.response.data,\n        })\n\n    }\n}\n\n\nfunction createmapLoadAPI(data){\n    return axios.get(`http://13.124.24.179/api/gpsdata/${data}`) \n   }\n\n\nfunction* createmapLoad(action){\n    try{\n        const result = yield call(createmapLoadAPI,action.data)\n        console.log('zxct',result.data)\n        yield put({\n            type:LOAD_CREATEMAP_SUCCESS,\n            data:result.data\n        })\n\n    }catch(err){\n        yield put({\n            type:LOAD_CREATEMAP_FAILURE,\n            error:err.response.data,\n        })\n\n    }\n}\n\n\n\nfunction addTrackAPI(data){\n    console.log('jong',data)\n    return axios.post(`http://13.124.24.179/api/tracks`,data) \n   }\n\n\nfunction* addTrack(action){\n    try{\n        const result = yield call(addTrackAPI,action.data)\n        console.log('dsss',result)\n        yield put({\n            type:ADD_TRACK_SUCCESS,\n        })\n\n    }catch(err){\n        yield put({\n            type:ADD_TRACK_FAILURE,\n            error:err.response.data,\n        })\n\n    }\n}\n\n\nfunction myLocationAPI(data){\n    return axios.get(`http://13.124.24.179/api/tracks/search?bounds=${data.north.lng}&bounds=${data.north.lat}&bounds=${data.south.lng}&bounds=${data.south.lat}&event=${data.event}`)\n}\n   \n\n\nfunction* myLocation(action){\n    try{\n        const result = yield call(myLocationAPI,action.data)\n        yield put({\n            type:LOAD_MY_LOCATION_SUCCESS,\n            data:result.data\n        })\n\n    }catch(err){\n        yield put({\n            type:LOAD_MY_LOCATION_FAILURE,\n            error:err.response.data,\n        })\n\n    }\n}\n\n\n\n\n\nconst trackRankAPI=async(datas)=>{\n\n    const res=await axios.get('https://2yubi.shop/api/ranking/track?track_id=622561232d6ee07c40f75bdc')\n\n    const data=await res.data\n    \n    return data\n\n    \n   \n}\n\n\n\n\nfunction* trackRank(action){\n    try{\n        console.log('action',action.data)\n        const result = yield call(trackRankAPI,action.data)\n        console.log('dong',result.ranking)\n        yield put({\n            type:LOAD_TRACK_RANK_SUCCESS,\n            data:result.ranking\n        })\n\n    }catch(err){\n        yield put({\n            type:LOAD_TRACK_RANK_FAILURE,\n            error:err.response.data,\n        })\n\n    }\n}\n\nconst trackMyRankAPI=async(datas)=>{\n\n    const res=await axios.get('https://2yubi.shop/api/ranking/myRank?track_id=622561232d6ee07c40f75bdc')\n\n    const data=await res.data\n    \n    return data\n\n   \n   \n}\n\n\n\n\nfunction* trackMyRank(action){\n    try{\n        console.log('action',action.data)\n        const result = yield call(trackMyRankAPI,action.data)\n        console.log('dong',result.ranking)\n        yield put({\n            type:LOAD_TRACK_MYRANK_SUCCESS,\n            data:result.ranking\n        })\n\n    }catch(err){\n        yield put({\n            type:LOAD_TRACK_MYRANK_FAILURE,\n            error:err.response.data,\n        })\n\n    }\n}\n\n\n\n\nfunction* watchSearchMap(){\n    yield takeLatest(SEARCH_MAP_REQUEST,searchMap)\n}\n\nfunction* wahchLoadMap(){\n    yield takeLatest(LOAD_MAP_REQUEST,loadMap)\n}\n\nfunction* watchMovingMap(){\n    yield takeLatest(MOVING_MAP_REQUEST,movingMap)\n}\n\nfunction* watchBikeMap(){\n    yield takeLatest(BIKE_MAP_REQUEST,bikeMap)\n}\n\nfunction* watchRunningMap(){\n    yield takeLatest(RUNNING_MAP_REQUEST,runningMap)\n}\n\nfunction* watchCreateMapLoad(){\n    yield takeLatest(LOAD_CREATEMAP_REQUEST,createmapLoad)\n}\n\nfunction* watchAddTrack(){\n    yield takeLatest(ADD_TRACK_REQUEST,addTrack)\n}\n\nfunction* watchMyLocation(){\n    yield takeLatest(LOAD_MY_LOCATION_REQUEST,myLocation)\n}\n\nfunction* watchMapRank(){\n    yield takeLatest(LOAD_TRACK_RANK_REQUEST,trackRank)\n}\n\nfunction* watchMapMyrank(){\n    yield takeLatest(LOAD_TRACK_MYRANK_REQUEST,trackMyRank)\n}\n\n\n\n\n\n\n\nexport default function* rootSaga(){\n\n    yield all([\n        fork(watchSearchMap),\n        fork(wahchLoadMap),\n        fork(watchMovingMap),\n        fork(watchBikeMap),\n        fork(watchRunningMap),\n        fork(watchCreateMapLoad),\n        fork(watchAddTrack),\n        fork(watchMyLocation),\n        fork(watchMapRank),\n        fork(watchMapMyrank)\n        \n\n      \n    ])\n\n}\n"]},"metadata":{},"sourceType":"module"}