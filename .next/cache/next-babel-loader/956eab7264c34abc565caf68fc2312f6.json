{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _this = this,\n    _jsxFileName = \"/Users/dong/CapstonProject/component/PostCard.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Card, Button, Avatar, Popover, Row, Col, List, Comment } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined, CommentOutlined, StepForwardOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport Link from 'next/link'; // import CommentForm from './CommentForm';\n// import PostCardContent from './PostCardContent';\n// import PostImages from './PostImages';\n\nimport FollowButton from './FollowButton';\nvar dummyComments = [{\n  User: {\n    nickname: 'nero'\n  },\n  content: '우와 개정판이 나왔군요~'\n}, {\n  User: {\n    nickname: 'hero'\n  },\n  content: '얼른 사고싶어요~'\n}];\nvar CardWrapper = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  margin-bottom: 20px;\\n\"])));\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useState = useState(false),\n      commentFormOpened = _useState[0],\n      setCommentFormOpened = _useState[1];\n\n  var _useState2 = useState(false),\n      liked = _useState2[0],\n      setLiked = _useState2[1];\n\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  return __jsx(Card, {\n    hoverable: true // cover={post.Images[0] && <PostImages images={post.Images} />}\n    ,\n    style: {\n      marginTop: 30,\n      marginLeft: 100,\n      width: '40vw',\n      borderRadius: 20\n    } // actions={[\n    //   <RetweetOutlined key=\"retweet\" />,\n    //   liked\n    //     ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\n    //     : <HeartOutlined key=\"heart\" onClick={onToggleLike} />,\n    //   <MessageOutlined key=\"message\" onClick={onToggleComment} />,\n    //   <Popover\n    //     key=\"ellipsis\"\n    //     content={(\n    //       <Button.Group>\n    //         <Button>신고</Button>\n    //         <Button>수정</Button>\n    //         <Button danger>삭제</Button>\n    //       </Button.Group>\n    //     )}\n    //   >\n    //     <EllipsisOutlined />\n    //   </Popover>,\n    // ]}\n    // extra={<FollowButton post={post} />}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    style: {\n      position: 'relative'\n    },\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }\n    }, post.User.nickname) //   description={'1 hours ago'}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), __jsx(\"a\", {\n    style: {\n      bottom: 30,\n      fontSize: 20,\n      position: 'relative'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, post.User.nickname), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 88\n    }\n  }), __jsx(FollowButton, {\n    post: post,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), __jsx(\"a\", {\n    style: {\n      right: 20,\n      bottom: 30,\n      color: 'gray',\n      fontSize: 12,\n      position: 'relative'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"1 hours ago\"), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, post.content), __jsx(\"img\", {\n    width: 300,\n    height: 300,\n    alt: \"example\",\n    src: \"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, liked ? __jsx(HeartTwoTone, {\n    style: {\n      fontSize: 25\n    },\n    twoToneColor: \"#eb2f96\",\n    key: \"heart\",\n    onClick: onToggleLike,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 14\n    }\n  }) : __jsx(HeartOutlined, {\n    style: {\n      fontSize: 25\n    },\n    key: \"heart\",\n    onClick: onToggleLike,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }), __jsx(\"a\", {\n    style: {\n      marginLeft: 5,\n      fontSize: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 90\n    }\n  }, \"28\")), __jsx(\"button\", {\n    style: {\n      marginLeft: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, __jsx(CommentOutlined, {\n    style: {\n      fontßSize: 25\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }), __jsx(\"a\", {\n    style: {\n      marginLeft: 5,\n      fontSize: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 59\n    }\n  }, \"10\"))), __jsx(Button, {\n    style: {\n      width: 160,\n      marginLeft: 90,\n      borderRadius: 15,\n      top: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, liked ? __jsx(HeartTwoTone, {\n    twoToneColor: \"#eb2f96\",\n    key: \"heart\",\n    onClick: onToggleLike,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 14\n    }\n  }) : __jsx(HeartOutlined, {\n    key: \"heart\",\n    onClick: onToggleLike,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }), \"Like\"), __jsx(Button, {\n    style: {\n      width: 160,\n      marginLeft: 10,\n      borderRadius: 15,\n      top: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, __jsx(CommentOutlined, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 74\n    }\n  }), \"comment\"))\n  /* {commentFormOpened && (\n    <>\n      <CommentForm post={post} />\n      <List\n        header={`${dummyComments.length} 댓글`}\n        itemLayout=\"horizontal\"\n        dataSource={dummyComments}\n        renderItem={(item) => (\n          <li>\n            <Comment\n              author={item.User.nickname}\n              avatar={(\n                <Link href={{ pathname: '/user', query: { id: item.User.id } }} as={`/user/${item.User.id}`}>\n                  <a><Avatar>{item.User.nickname[0]}</Avatar></a>\n                </Link>\n              )}\n              content={item.content}\n            />\n          </li>\n        )}\n      />\n    </>\n  //   )} */\n  ;\n};\n\n_s(PostCard, \"qH0zF1Fa5yJSP+8z2p3BAp0s7TA=\");\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    Images: PropTypes.arrayOf(PropTypes.shape({\n      src: PropTypes.string\n    })),\n    createdAt: PropTypes.object\n  })\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["/Users/dong/CapstonProject/component/PostCard.js"],"names":["React","useState","useCallback","Card","Button","Avatar","Popover","Row","Col","List","Comment","PropTypes","useDispatch","useSelector","RetweetOutlined","HeartTwoTone","HeartOutlined","MessageOutlined","EllipsisOutlined","CommentOutlined","StepForwardOutlined","styled","Link","FollowButton","dummyComments","User","nickname","content","CardWrapper","div","PostCard","post","commentFormOpened","setCommentFormOpened","liked","setLiked","onToggleLike","prev","onToggleComment","marginTop","marginLeft","width","borderRadius","position","bottom","fontSize","right","color","fontßSize","top","propTypes","shape","id","number","object","string","Images","arrayOf","src","createdAt"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Card, Button, Avatar, Popover,Row,Col, List, Comment } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined ,CommentOutlined,StepForwardOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport Link from 'next/link';\n\n// import CommentForm from './CommentForm';\n// import PostCardContent from './PostCardContent';\n// import PostImages from './PostImages';\nimport FollowButton from './FollowButton';\n\nconst dummyComments = [{\n  User: {\n    nickname: 'nero',\n  },\n  content: '우와 개정판이 나왔군요~',\n}, {\n  User: {\n    nickname: 'hero',\n  },\n  content: '얼른 사고싶어요~',\n}];\n\nconst CardWrapper = styled.div`\n  margin-bottom: 20px;\n`;\n\n\n\n\n\n\n\nconst PostCard = ({post}) => {\n\n\n  \n\n\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\n  const [liked, setLiked] = useState(false);\n\n  const onToggleLike = useCallback(() => {\n    setLiked((prev) => !prev);\n  }, []);\n\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened((prev) => !prev);\n  }, []);\n\n  return (\n\n    \n      <Card\n        hoverable\n        // cover={post.Images[0] && <PostImages images={post.Images} />}\n        style={{marginTop:30 ,marginLeft:100,width:'40vw',borderRadius:20}}\n        // actions={[\n        //   <RetweetOutlined key=\"retweet\" />,\n        //   liked\n        //     ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\n        //     : <HeartOutlined key=\"heart\" onClick={onToggleLike} />,\n        //   <MessageOutlined key=\"message\" onClick={onToggleComment} />,\n        //   <Popover\n        //     key=\"ellipsis\"\n        //     content={(\n        //       <Button.Group>\n        //         <Button>신고</Button>\n        //         <Button>수정</Button>\n        //         <Button danger>삭제</Button>\n        //       </Button.Group>\n        //     )}\n        //   >\n        //     <EllipsisOutlined />\n        //   </Popover>,\n        // ]}\n        // extra={<FollowButton post={post} />}\n      >\n        <Card.Meta\n        style={{position:'relative'}}\n          avatar={<Avatar>{post.User.nickname}</Avatar>}\n        \n        //   description={'1 hours ago'}\n        \n         \n        />\n\n        <a style={{bottom:30,fontSize:20,position:'relative'}}>{post.User.nickname}</a><br/>\n        {/* {isFollowing===true ? <Button style={{bottom:30,fontSize:15,position:'relative',left:460,bottom:60}}>언팔로잉</Button> :<Button >팔로잉</Button>} */}\n        <FollowButton  post={post}></FollowButton>\n\n        <a style={{right:20,bottom:30,color:'gray',fontSize:12,position:'relative'}}>1 hours ago</a>\n        <div>{post.content}</div>\n        \n        \n        \n        <img   width={300} height={300} alt=\"example\" src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\" />\n        <div style={{marginTop:10}}>\n            <button >{liked\n           ? <HeartTwoTone style={{fontSize:25}} twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\n            : <HeartOutlined style={{fontSize:25}} key=\"heart\" onClick={onToggleLike} />}<a style={{marginLeft:5,fontSize:15}}>28</a></button>\n            <button style={{marginLeft:10}}>\n                <CommentOutlined style={{fontßSize:25}} /><a style={{marginLeft:5,fontSize:15}}>10</a>\n            </button>\n        </div>\n        \n        \n        <Button style={{width:160,marginLeft:90,borderRadius:15,top:10}}>{liked\n           ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\n            : <HeartOutlined key=\"heart\" onClick={onToggleLike} />}Like</Button>\n        <Button style={{width:160,marginLeft:10,borderRadius:15,top:10}}><CommentOutlined />comment</Button>\n        {/* <Button style={{width:160,marginLeft:10,borderRadius:15,top:10}}><StepForwardOutlined/>retweet</Button> */}\n      </Card>\n      /* {commentFormOpened && (\n        <>\n          <CommentForm post={post} />\n          <List\n            header={`${dummyComments.length} 댓글`}\n            itemLayout=\"horizontal\"\n            dataSource={dummyComments}\n            renderItem={(item) => (\n              <li>\n                <Comment\n                  author={item.User.nickname}\n                  avatar={(\n                    <Link href={{ pathname: '/user', query: { id: item.User.id } }} as={`/user/${item.User.id}`}>\n                      <a><Avatar>{item.User.nickname[0]}</Avatar></a>\n                    </Link>\n                  )}\n                  content={item.content}\n                />\n              </li>\n            )}\n          />\n        </>\n    //   )} */\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    Images: PropTypes.arrayOf(PropTypes.shape({\n      src: PropTypes.string,\n    })),\n    createdAt: PropTypes.object,\n  }),\n};\n\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}