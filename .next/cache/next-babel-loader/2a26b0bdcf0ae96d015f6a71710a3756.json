{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _this = this,\n    _jsxFileName = \"/Users/dong/CapstonProject/component/PostCard.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Card, Button, Avatar, Popover, List, Comment } from 'antd';\nimport PropTypes from 'prop-types';\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport Link from 'next/link'; // import CommentForm from './CommentForm';\n// import PostCardContent from './PostCardContent';\n// import PostImages from './PostImages';\n// import FollowButton from './FollowButton';\n\nvar dummyComments = [{\n  User: {\n    nickname: 'nero'\n  },\n  content: '우와 개정판이 나왔군요~'\n}, {\n  User: {\n    nickname: 'hero'\n  },\n  content: '얼른 사고싶어요~'\n}];\nvar CardWrapper = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  margin-bottom: 20px;\\n\"])));\n_c = CardWrapper;\nvar post = {\n  id: 1,\n  User: {\n    id: 1,\n    nickname: '제로초'\n  },\n  content: '첫 번째 게시글',\n  Images: [{\n    src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726'\n  }, {\n    src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg'\n  }, {\n    src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg'\n  }]\n};\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useState = useState(false),\n      commentFormOpened = _useState[0],\n      setCommentFormOpened = _useState[1];\n\n  var _useState2 = useState(false),\n      liked = _useState2[0],\n      setLiked = _useState2[1];\n\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  return __jsx(CardWrapper, {\n    key: \"1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 34\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f96\",\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"message\",\n      onClick: onToggleComment,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"ellipsis\",\n      content: __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }\n      }, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, \"\\uC2E0\\uACE0\"), __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        danger: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, \"\\uC0AD\\uC81C\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }))] // extra={<FollowButton post={post} />}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }\n    }, post.User.nickname),\n    title: post.User.nickname,\n    description: post.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(PostCard, \"qH0zF1Fa5yJSP+8z2p3BAp0s7TA=\");\n\n_c2 = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    Images: PropTypes.arrayOf(PropTypes.shape({\n      src: PropTypes.string\n    })),\n    createdAt: PropTypes.object\n  })\n};\nexport default PostCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CardWrapper\");\n$RefreshReg$(_c2, \"PostCard\");","map":{"version":3,"sources":["/Users/dong/CapstonProject/component/PostCard.js"],"names":["React","useState","useCallback","Card","Button","Avatar","Popover","List","Comment","PropTypes","RetweetOutlined","HeartTwoTone","HeartOutlined","MessageOutlined","EllipsisOutlined","styled","Link","dummyComments","User","nickname","content","CardWrapper","div","post","id","Images","src","PostCard","commentFormOpened","setCommentFormOpened","liked","setLiked","onToggleLike","prev","onToggleComment","propTypes","shape","number","object","string","arrayOf","createdAt"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Card, Button, Avatar, Popover, List, Comment } from 'antd';\nimport PropTypes from 'prop-types';\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport Link from 'next/link';\n\n// import CommentForm from './CommentForm';\n// import PostCardContent from './PostCardContent';\n// import PostImages from './PostImages';\n// import FollowButton from './FollowButton';\n\nconst dummyComments = [{\n  User: {\n    nickname: 'nero',\n  },\n  content: '우와 개정판이 나왔군요~',\n}, {\n  User: {\n    nickname: 'hero',\n  },\n  content: '얼른 사고싶어요~',\n}];\n\nconst CardWrapper = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst post={\n    \n        id: 1,\n        User: {\n          id: 1,\n          nickname: '제로초',\n        },\n        content: '첫 번째 게시글',\n        Images: [{\n          src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\n        }, {\n          src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\n        }, {\n          src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\n        }]\n      \n    \n}\n\n\nconst PostCard = ({ post }) => {\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\n  const [liked, setLiked] = useState(false);\n\n  const onToggleLike = useCallback(() => {\n    setLiked((prev) => !prev);\n  }, []);\n\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened((prev) => !prev);\n  }, []);\n\n  return (\n    <CardWrapper key='1'>\n      <Card\n        cover={post.Images[0] && <PostImages images={post.Images} />}\n        actions={[\n          <RetweetOutlined key=\"retweet\" />,\n          liked\n            ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\n            : <HeartOutlined key=\"heart\" onClick={onToggleLike} />,\n          <MessageOutlined key=\"message\" onClick={onToggleComment} />,\n          <Popover\n            key=\"ellipsis\"\n            content={(\n              <Button.Group>\n                <Button>신고</Button>\n                <Button>수정</Button>\n                <Button danger>삭제</Button>\n              </Button.Group>\n            )}\n          >\n            <EllipsisOutlined />\n          </Popover>,\n        ]}\n        // extra={<FollowButton post={post} />}\n      >\n        <Card.Meta\n          avatar={<Avatar>{post.User.nickname}</Avatar>}\n          title={post.User.nickname}\n          description={post.content}\n        />\n      </Card>\n      {/* {commentFormOpened && (\n        <>\n          <CommentForm post={post} />\n          <List\n            header={`${dummyComments.length} 댓글`}\n            itemLayout=\"horizontal\"\n            dataSource={dummyComments}\n            renderItem={(item) => (\n              <li>\n                <Comment\n                  author={item.User.nickname}\n                  avatar={(\n                    <Link href={{ pathname: '/user', query: { id: item.User.id } }} as={`/user/${item.User.id}`}>\n                      <a><Avatar>{item.User.nickname[0]}</Avatar></a>\n                    </Link>\n                  )}\n                  content={item.content}\n                />\n              </li>\n            )}\n          />\n        </>\n      )} */}\n    </CardWrapper>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    Images: PropTypes.arrayOf(PropTypes.shape({\n      src: PropTypes.string,\n    })),\n    createdAt: PropTypes.object,\n  }),\n};\n\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}