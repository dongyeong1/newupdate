{"ast":null,"code":"var _jsxFileName = \"/Users/dong/CapstonProject/pages/Create/[id].js\";\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport { Polyline, Marker, StreetViewPanorama, MarkerClusterer } from '@react-google-maps/api';\nimport { Form, Card, Table, Button, Slider, Switch, Row, Col, Input } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { END } from 'redux-saga';\nimport wrapper from '../../store/configureStore';\nimport { ADD_TRACK_REQUEST, LOAD_CREATEMAP_REQUEST } from '../../reducers/map';\nimport axios from 'axios';\nimport useInput from '../../hooks/useInput';\nimport { LOAD_LOGIN_REQUEST } from '../../reducers/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createPath() {\n  const {\n    createMap\n  } = useSelector(state => state.map);\n  const {\n    0: createDistance,\n    1: setCreateDistance\n  } = useState(createMap.distance[createMap.distance.length - 1]);\n  const [trackName, onChangeTrackName] = useInput('');\n  const [trackDescription, onChangeTrackDescription] = useInput('');\n  const {\n    0: number,\n    1: setNumber\n  } = useState([0, createMap.gps.coordinates.length - 1]);\n  const {\n    0: twoPolyline,\n    1: setTwoPolyline\n  } = useState([createMap.gps.coordinates]);\n  const {\n    0: leftPath,\n    1: setLeftPath\n  } = useState({\n    lat: createMap.gps.coordinates[0][1],\n    lng: createMap.gps.coordinates[0][0]\n  });\n  const {\n    0: rightPath,\n    1: setRightPath\n  } = useState({\n    lat: createMap.gps.coordinates[createMap.gps.coordinates.length - 1][1],\n    lng: createMap.gps.coordinates[createMap.gps.coordinates.length - 1][0]\n  });\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({\n      type: LOAD_LOGIN_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    setLeftPath({\n      lat: createMap.gps.coordinates[number[0]][1],\n      lng: createMap.gps.coordinates[number[0]][0]\n    });\n    setTwoPolyline([createMap.gps.coordinates.slice(number[0], number[1])]);\n    setCreateDistance(createMap.distance[number[1]] - createMap.distance[number[0]]);\n    console.log('two', twoPolyline);\n    console.log(number[0]);\n  }, [number[0]]);\n  useEffect(() => {\n    setRightPath({\n      lat: createMap.gps.coordinates[number[1]][1],\n      lng: createMap.gps.coordinates[number[1]][0]\n    });\n    setCreateDistance(createMap.distance[number[1]] - createMap.distance[number[0]]);\n    setTwoPolyline([createMap.gps.coordinates.slice(number[0], number[1])]);\n    console.log('three', twoPolyline);\n    console.log(number[1]);\n  }, [number[1]]);\n  const mapContainerStyle = {\n    height: \"500px\",\n    width: \"600px\",\n    marginTop: 30\n  };\n  const options = {\n    strokeColor: '#348feb',\n    strokeOpacity: 0.8,\n    strokeWeight: 5,\n    fillColor: '#FF0000',\n    fillOpacity: 0.35,\n    clickable: true,\n    draggable: false,\n    editable: false,\n    visible: true,\n    radius: 30000,\n    paths: [[{\n      lat: 35.969997373905,\n      lng: 128.45170755523503\n    }, {\n      lat: 35.985501427015464,\n      lng: 128.40407191943035\n    }, {\n      lat: 35.89580489690752,\n      lng: 128.62238368221892\n    }]],\n    zIndex: 1\n  };\n  const options111 = {\n    strokeColor: '#d43b24',\n    strokeOpacity: 0.8,\n    strokeWeight: 5,\n    fillColor: '#FF0000',\n    fillOpacity: 0.35,\n    clickable: true,\n    draggable: false,\n    editable: false,\n    visible: true,\n    radius: 30000,\n    //-27부터 호주 시작해서 점찍고 점찍고 한다\n    paths: [[{\n      lat: 35.969997373905,\n      lng: 128.45170755523503\n    }, {\n      lat: 35.985501427015464,\n      lng: 128.40407191943035\n    }, {\n      lat: 35.89580489690752,\n      lng: 128.62238368221892\n    }]],\n    zIndex: 1\n  };\n\n  const change = value => {\n    console.log('value', value);\n    setNumber(value);\n  };\n\n  const createSuccess = () => {\n    Modal.warning({\n      title: '경로만들기 성공'\n    });\n  };\n\n  const storePath = [];\n  const altitudes = [];\n  var totalDistance = 0;\n\n  const pathStore = () => {\n    for (var i = number[0]; i < number[1] + 1; i++) {\n      storePath.push(createMap.gps.coordinates[i]);\n      altitudes.push(createMap.altitude[i].y);\n    }\n\n    totalDistance = createMap.distance[number[1]] - createMap.distance[number[0]];\n    console.log(totalDistance, 'al', altitudes);\n    dispatch({\n      type: ADD_TRACK_REQUEST,\n      data: {\n        trackName,\n        totalDistance,\n        // userId:createMap.track.user.userId,//나중에포스트 sns되면\n        // name:createMap.track.user.name,//나중에 포스트Sns되면\n        // desription:createMap.track.description,//나중에포스트sns되면\n        // checkPoint:createMap.track.checkPoint//나중에포스트sns되면\n        //더미\n        userId: createMap.user.userId,\n        name: createMap.user.name,\n        description: trackDescription,\n        checkPoint: [[1, 2]],\n        //더미\n        event: createMap.event,\n        gps: storePath,\n        altitude: altitudes\n      }\n    });\n    createSuccess();\n    window.location.href = '/myRecord';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            fontSize: 40\n          },\n          children: \"\\uACBD\\uB85C\\uB9CC\\uB4E4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: createDistance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: 40\n          },\n          children: /*#__PURE__*/_jsxDEV(Slider, {\n            range: true,\n            defaultValue: number,\n            max: createMap.gps.coordinates.length - 1,\n            onChange: change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n          googleMapsApiKey: \"AIzaSyAYsO2CGL0YCjMoLk29eyitFC2PIJnJbYE\",\n          children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n            id: \"marker-example\",\n            mapContainerStyle: mapContainerStyle,\n            zoom: 16,\n            center: {\n              lat: createMap.gps.coordinates[createMap.gps.coordinates.length % 2][1],\n              lng: createMap.gps.coordinates[createMap.gps.coordinates.length % 2][0]\n            },\n            children: [/*#__PURE__*/_jsxDEV(Marker, {\n              position: leftPath,\n              icon: {\n                url: ' http://maps.google.com/mapfiles/ms/icons/blue.png'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Marker, {\n              position: rightPath\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n              options: options,\n              path: createMap.gps.coordinates.map(m => ({\n                lat: m[1],\n                lng: m[0]\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n              options: options111,\n              path: twoPolyline[0].map(m => ({\n                lat: m[1],\n                lng: m[0]\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            marginTop: 150,\n            borderRadius: 40,\n            marginLeft: 90\n          },\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            style: {},\n            placeholder: \"\\uACBD\\uB85C\\uC774\\uB984\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n            value: trackName,\n            onChange: onChangeTrackName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input.TextArea, {\n            placeholder: \"\\uACBD\\uB85C\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n            value: trackDescription,\n            onChange: onChangeTrackDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: pathStore,\n            children: \"\\uACBD\\uB85C\\uB9CC\\uB4E4\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 1\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const posts = await axios.get('http://13.124.24.179/api/gpsdata');\n  var paths1 = posts.data.map(id => ({\n    params: {\n      id: id._id\n    }\n  }));\n  return {\n    paths: paths1,\n    // paths:[  { params: { id: '62256147dc2958292cb17110' } },],\n    fallback: false\n  };\n}\nexport const getStaticProps = wrapper.getStaticProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_CREATEMAP_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default createPath;","map":{"version":3,"sources":["/Users/dong/CapstonProject/pages/Create/[id].js"],"names":["React","useEffect","useState","GoogleMap","LoadScript","Polyline","Marker","StreetViewPanorama","MarkerClusterer","Form","Card","Table","Button","Slider","Switch","Row","Col","Input","useDispatch","useSelector","END","wrapper","ADD_TRACK_REQUEST","LOAD_CREATEMAP_REQUEST","axios","useInput","LOAD_LOGIN_REQUEST","createPath","createMap","state","map","createDistance","setCreateDistance","distance","length","trackName","onChangeTrackName","trackDescription","onChangeTrackDescription","number","setNumber","gps","coordinates","twoPolyline","setTwoPolyline","leftPath","setLeftPath","lat","lng","rightPath","setRightPath","dispatch","type","slice","console","log","mapContainerStyle","height","width","marginTop","options","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","clickable","draggable","editable","visible","radius","paths","zIndex","options111","change","value","createSuccess","Modal","warning","title","storePath","altitudes","totalDistance","pathStore","i","push","altitude","y","data","userId","user","name","description","checkPoint","event","window","location","href","fontSize","marginLeft","url","m","borderRadius","getStaticPaths","posts","get","paths1","id","params","_id","fallback","getStaticProps","context","cookie","req","headers","defaults","Cookie","store","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport { Polyline ,Marker,StreetViewPanorama,MarkerClusterer} from '@react-google-maps/api';\nimport {Form,Card,Table,Button,Slider, Switch,Row,Col,Input} from 'antd'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { END } from 'redux-saga';\nimport wrapper from '../../store/configureStore';\nimport { ADD_TRACK_REQUEST, LOAD_CREATEMAP_REQUEST } from '../../reducers/map';\nimport axios from 'axios';\nimport useInput from '../../hooks/useInput';\nimport { LOAD_LOGIN_REQUEST } from '../../reducers/user';\n\n\nfunction createPath() {\n    const {createMap}=useSelector((state)=>state.map)\n\n    const [createDistance,setCreateDistance]=useState(createMap.distance[createMap.distance.length-1])\n\n    const [trackName,onChangeTrackName]=useInput('');\n    const [trackDescription,onChangeTrackDescription]=useInput('')\n\n\n    const [number,setNumber]=useState([0,createMap.gps.coordinates.length-1])\n    const [twoPolyline,setTwoPolyline]=useState([createMap.gps.coordinates])\n    \n    const [leftPath,setLeftPath]=useState({\n        lat:createMap.gps.coordinates[0][1],lng:createMap.gps.coordinates[0][0]\n      })\n    const [rightPath,setRightPath]=useState({\n      lat:createMap.gps.coordinates[createMap.gps.coordinates.length-1][1],lng:createMap.gps.coordinates[createMap.gps.coordinates.length-1][0]\n    })\n\n\n    const dispatch=useDispatch()\n   \n\n        \n        useEffect(()=>{\n            dispatch({\n                type: LOAD_LOGIN_REQUEST\n                });\n        },[])\n\n\n        useEffect(()=>{\n            setLeftPath({\n                lat:createMap.gps.coordinates[number[0]][1],\n                lng:createMap.gps.coordinates[number[0]][0]\n            \n              })\n            setTwoPolyline([createMap.gps.coordinates.slice(number[0],number[1])])\n              setCreateDistance(createMap.distance[number[1]]-createMap.distance[number[0]])\n              console.log('two',twoPolyline)\n              console.log(number[0])\n  \n        },[number[0]])\n        useEffect(()=>{\n          setRightPath({\n              lat:createMap.gps.coordinates[number[1]][1],\n              lng:createMap.gps.coordinates[number[1]][0]\n          \n            })\n            setCreateDistance(createMap.distance[number[1]]-createMap.distance[number[0]])\n            setTwoPolyline([createMap.gps.coordinates.slice(number[0],number[1])])\n            console.log('three',twoPolyline)\n            console.log(number[1])\n  \n  \n      },[number[1]])\n\nconst mapContainerStyle = {\n    height: \"500px\",\n    width: \"600px\",\n    marginTop:30 \n  };\n\n    const options = {\n        strokeColor: '#348feb',\n        strokeOpacity: 0.8,\n        strokeWeight: 5,\n        fillColor: '#FF0000',\n        fillOpacity: 0.35,\n        clickable: true,\n        draggable: false,\n        editable: false,\n        visible: true,\n        radius: 30000,\n        paths: [\n              [\n                  {lat:  35.969997373905, lng: 128.45170755523503},\n                  {lat:35.985501427015464, lng:128.40407191943035},\n                  {lat: 35.89580489690752, lng: 128.62238368221892}\n              ]\n        ],\n        zIndex: 1\n      };\n\n\n      const options111 = {\n        strokeColor: '#d43b24',\n        strokeOpacity: 0.8,\n        strokeWeight: 5,\n        fillColor: '#FF0000',\n        fillOpacity: 0.35,\n        clickable: true,\n        draggable: false,\n        editable: false,\n        visible: true,\n        radius: 30000,\n        //-27부터 호주 시작해서 점찍고 점찍고 한다\n        paths: [\n              [\n                  {lat:  35.969997373905, lng: 128.45170755523503},\n                  {lat:35.985501427015464, lng:128.40407191943035}, \n                  {lat: 35.89580489690752, lng: 128.62238368221892}               \n              ]     \n        ],\n        zIndex: 1\n      };\n\n\n\n   \n      const change=(value)=>{\n          console.log('value',value)\n        setNumber(value)\n       \n      }\n\n      const createSuccess=()=>{\n        Modal.warning({\n          title:'경로만들기 성공'\n        })\n      }\n\n    \n    const storePath=[]\n    const altitudes=[]\n   \n    var totalDistance=0\n  \n    \n\n    const pathStore=()=>{\n        \n        for(var i=number[0]; i<number[1]+1; i++){\n            storePath.push(createMap.gps.coordinates[i])\n            altitudes.push(createMap.altitude[i].y)\n            \n        }\n        totalDistance=createMap.distance[number[1]]-createMap.distance[number[0]]\n        console.log(totalDistance,'al',altitudes)\n       \n        dispatch({\n            type:ADD_TRACK_REQUEST,\n            data:{\n                trackName,\n                totalDistance,\n                // userId:createMap.track.user.userId,//나중에포스트 sns되면\n                // name:createMap.track.user.name,//나중에 포스트Sns되면\n            // desription:createMap.track.description,//나중에포스트sns되면\n                // checkPoint:createMap.track.checkPoint//나중에포스트sns되면\n                //더미\n                userId:createMap.user.userId,\n                name:createMap.user.name,\n                description:trackDescription,\n                checkPoint:[[1,2]],\n                //더미\n                event:createMap.event,\n                \n                gps:storePath,\n                altitude:altitudes\n            }\n        })\n\n        createSuccess()\n        window.location.href='/myRecord'\n      \n    }\n\n  return (\n<div>\n<Row>\n    <Col span={12}>\n            <h1 style={{fontSize:40}}>경로만들기</h1>\n            <div\n            >\n                {createDistance}\n            </div>\n        <div style={{marginLeft:40}}><Slider range defaultValue={number} max={createMap.gps.coordinates.length-1} onChange={change} /></div>\n        \n        <LoadScript\n        googleMapsApiKey=\"AIzaSyAYsO2CGL0YCjMoLk29eyitFC2PIJnJbYE\"\n        >\n        \n      <GoogleMap\n        id=\"marker-example\"\n        mapContainerStyle={mapContainerStyle}\n        zoom={16}\n        center={{\n            lat: createMap.gps.coordinates[createMap.gps.coordinates.length%2][1],\n            lng: createMap.gps.coordinates[createMap.gps.coordinates.length%2][0],\n        }}>\n        \n        <Marker position={leftPath} icon={{url:' http://maps.google.com/mapfiles/ms/icons/blue.png',}} ></Marker>\n        <Marker position={rightPath} ></Marker>\n    \n         <Polyline   options={options} path={createMap.gps.coordinates.map((m)=>(\n            {\n                lat:m[1],\n                lng:m[0]\n            }\n        ))}></Polyline> \n        <Polyline  options={options111} path={twoPolyline[0].map((m)=>(\n            {\n                lat:m[1],\n                lng:m[0]\n            }\n        ))}></Polyline> \n\n        </GoogleMap>\n        </LoadScript>       \n    </Col>\n\n    <Col span={12}>         \n            <Card style={{marginTop:150,borderRadius:40,marginLeft:90}}>\n                <Input  style={{}} placeholder='경로이름을 입력해주세요' value={trackName} onChange={onChangeTrackName}/>\n                <Input.TextArea placeholder='경로내용을 입력해주세요' value={trackDescription} onChange={onChangeTrackDescription}/>\n            \n                <Button  onClick={pathStore}>경로만들기</Button>\n            </Card>\n    </Col>\n</Row>\n</div>\n  )\n}\n\nexport async function getStaticPaths(){\n    const posts= await axios.get('http://13.124.24.179/api/gpsdata')\n   \n\nvar paths1=posts.data.map((id)=>({\n     params:{id:id._id}\n }))\n\n return{\n     paths:paths1,\n    // paths:[  { params: { id: '62256147dc2958292cb17110' } },],\n     fallback:false\n }\n}\n\nexport const getStaticProps=wrapper.getStaticProps(async (context)=>{\n    const cookie = context.req ? context.req.headers.cookie : '';\n    axios.defaults.headers.Cookie = '';\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n   \n    context.store.dispatch({\n        type:LOAD_CREATEMAP_REQUEST,\n        data:context.params.id\n    })\n    context.store.dispatch(END)\n    await context.store.sagaTask.toPromise()\n})\n\nexport default createPath"]},"metadata":{},"sourceType":"module"}