{"ast":null,"code":"import { all, call, fork, put, takeLatest, take } from 'redux-saga/effects';\nimport { LOGIN_FAIL, LOGIN_REQUEST, LOGIN_SUCCESS, LOGOUT_REQUEST, LOGOUT_SUCCESS, LOGOUT_FAIL, SIGNUP_REQUEST, SIGNUP_SUCCESS, SIGNUP_FAIL, FOLLOWING_SUCCESS, FOLLOWING_REQUEST, FOLLOWING_FAIL, UNFOLLOWING_REQUEST, UNFOLLOWING_SUCCESS, UNFOLLOWING_FAIL, LOAD_LOGIN_REQUEST, LOAD_LOGIN_SUCCESS, LOAD_LOGIN_FAILURE } from '../reducers/user';\nimport axios from 'axios'; // function logInAPI(data){\n//     return axios.post('http://3.35.239.14/api/login',{\n//     headers: {'Content-Type': 'application/json'},\n//     credentials: 'include',\n//     body: JSON.stringify({\n//         emali:data.email,\n//         password:data.password\n// })\n//    }   \n//    )\n// }\n\nfunction logInAPI(data) {\n  return fetch('http://3.35.239.14/api/login', {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include',\n    body: JSON.stringify({\n      emali: data.email,\n      password: data.password\n    })\n  });\n}\n\nfunction* login(action) {\n  const result = yield call(logInAPI, action.data);\n\n  try {\n    yield put({\n      type: LOGIN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield {\n      type: LOGIN_FAIL,\n      data: 'error'\n    };\n  }\n}\n\nfunction logOutAPI(data) {\n  return axios.post('http://3.35.239.14/api/logout');\n}\n\nfunction* logout() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOGOUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOGOUT_FAIL,\n      error: 'error'\n    });\n  }\n}\n\nfunction signupAPI(data) {\n  return axios.post('http://3.35.239.14/api/register', data);\n}\n\nfunction* signup(action) {\n  try {\n    yield call(signupAPI, action.data);\n    yield put({\n      type: SIGNUP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGNUP_FAIL,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI(data) {\n  return axios.post(`http://3.35.239.14/api/follow/${data.id}`);\n}\n\nfunction* following(action) {\n  try {\n    const result = yield call(followAPI, action.data);\n    yield put({\n      type: FOLLOWING_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOWING_FAIL,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI(data) {\n  return axios.post(`http://3.35.239.14/api/follow/${data}`);\n}\n\nfunction* unfollowing(action) {\n  try {\n    const result = yield call(unfollowAPI, action.data);\n    yield put({\n      type: UNFOLLOWING_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOWING_FAIL,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadLoginAPI(data) {\n  return axios.post(`http://3.35.239.14/api/user`, {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include',\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n}\n\nfunction* loadLogin(action) {\n  try {\n    const result = yield call(loadLoginAPI, action.data);\n    yield put({\n      type: LOAD_LOGIN_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_LOGIN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOGIN_REQUEST, login);\n}\n\nfunction* watchLogout() {\n  yield takeLatest(LOGOUT_REQUEST, logout);\n}\n\nfunction* watchSignup() {\n  yield takeLatest(SIGNUP_REQUEST, signup);\n}\n\nfunction* watchFollowing() {\n  yield takeLatest(FOLLOWING_REQUEST, following);\n}\n\nfunction* watchUnFollowing() {\n  yield takeLatest(UNFOLLOWING_REQUEST, unfollowing);\n}\n\nfunction* watchLoadLogin() {\n  yield takeLatest(LOAD_LOGIN_REQUEST, loadLogin);\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchLoadLogin), fork(watchLogin), fork(watchLogout), fork(watchSignup), fork(watchFollowing), fork(watchUnFollowing)]);\n}","map":{"version":3,"sources":["/Users/dong/CapstonProject/sagas/user.js"],"names":["all","call","fork","put","takeLatest","take","LOGIN_FAIL","LOGIN_REQUEST","LOGIN_SUCCESS","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAIL","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAIL","FOLLOWING_SUCCESS","FOLLOWING_REQUEST","FOLLOWING_FAIL","UNFOLLOWING_REQUEST","UNFOLLOWING_SUCCESS","UNFOLLOWING_FAIL","LOAD_LOGIN_REQUEST","LOAD_LOGIN_SUCCESS","LOAD_LOGIN_FAILURE","axios","logInAPI","data","fetch","headers","credentials","body","JSON","stringify","emali","email","password","login","action","result","type","err","logOutAPI","post","logout","error","signupAPI","signup","response","followAPI","id","following","unfollowAPI","unfollowing","loadLoginAPI","loadLogin","watchLogin","watchLogout","watchSignup","watchFollowing","watchUnFollowing","watchLoadLogin","rootSaga"],"mappings":"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","sourcesContent":["\nimport { all,call,fork,put,takeLatest, take} from 'redux-saga/effects'\nimport {LOGIN_FAIL, LOGIN_REQUEST,LOGIN_SUCCESS,LOGOUT_REQUEST, \n    LOGOUT_SUCCESS,LOGOUT_FAIL, SIGNUP_REQUEST,SIGNUP_SUCCESS,SIGNUP_FAIL,\n    FOLLOWING_SUCCESS,FOLLOWING_REQUEST,FOLLOWING_FAIL,UNFOLLOWING_REQUEST,\n    UNFOLLOWING_SUCCESS,UNFOLLOWING_FAIL, LOAD_LOGIN_REQUEST, LOAD_LOGIN_SUCCESS, LOAD_LOGIN_FAILURE} from '../reducers/user'\nimport axios from 'axios'\n\n// function logInAPI(data){\n//     return axios.post('http://3.35.239.14/api/login',{\n//     headers: {'Content-Type': 'application/json'},\n//     credentials: 'include',\n//     body: JSON.stringify({\n//         emali:data.email,\n//         password:data.password\n    \n// })\n//    }   \n//    )\n// }\n\n\nfunction logInAPI(data){\n    return fetch('http://3.35.239.14/api/login',{\n    headers: {'Content-Type': 'application/json'},\n    credentials: 'include',\n    body: JSON.stringify({\n        emali:data.email,\n        password:data.password\n    \n})\n   }   \n   )\n}\n\nfunction* login(action){\nconst result =yield call(logInAPI,action.data)\ntry{\nyield put({\n    type:LOGIN_SUCCESS,\n    data:result.data\n})\n}catch(err){\n    yield({\n        type:LOGIN_FAIL,\n        data:'error'\n    })\n}\n} \n\n\nfunction logOutAPI(data){\n    return axios.post('http://3.35.239.14/api/logout')\n}\n\nfunction* logout(){\n    try{\n        yield call(logOutAPI)\n        yield put({\n            type:LOGOUT_SUCCESS,\n        })\n    }catch(err){\n        yield put({\n            type:LOGOUT_FAIL,\n            error:'error'\n             \n        })\n    }\n} \n\nfunction signupAPI(data){\nreturn axios.post('http://3.35.239.14/api/register',data)\n}\n\nfunction* signup(action){\n\n    try{\n       yield call(signupAPI,action.data)\n        \n          yield put({\n              type:SIGNUP_SUCCESS,\n          })\n      }catch(err){\n          yield put({\n              type:SIGNUP_FAIL,\n              error:err.response.data,\n               \n          })\n      }\n}\n\n\nfunction followAPI(data){\n    return axios.post(`http://3.35.239.14/api/follow/${data.id}`)\n    }\n    \n    function* following(action){\n    \n        try{\n            const result=yield call(followAPI,action.data)\n            \n              yield put({\n                  type:FOLLOWING_SUCCESS,\n                  data:action.data\n              })\n          }catch(err){\n              yield put({\n                  type:FOLLOWING_FAIL,\n                  error:err.response.data,\n                   \n              })\n          }\n    }\n\n\n    function unfollowAPI(data){\n        return axios.post(`http://3.35.239.14/api/follow/${data}`)\n        }\n        \n        function* unfollowing(action){\n        \n            try{\n                const result=yield call(unfollowAPI,action.data)\n                \n                  yield put({\n                      type:UNFOLLOWING_SUCCESS,\n                      data:action.data\n                  })\n              }catch(err){\n                  yield put({\n                      type:UNFOLLOWING_FAIL,\n                      error:err.response.data,\n                       \n                  })\n              }\n        }\n        \n\n    function loadLoginAPI(data){\n        return axios.post(`http://3.35.239.14/api/user`,{\n            headers: {'Content-Type': 'application/json'},\n            credentials: 'include',\n            body: JSON.stringify({\n                email,\n                password\n            })\n\n        })\n        }\n        \n        function* loadLogin(action){\n        \n            try{\n                const result=yield call(loadLoginAPI,action.data)\n                \n                  yield put({\n                      type:LOAD_LOGIN_SUCCESS,\n                      data:action.data\n                  })\n              }catch(err){\n                  yield put({\n                      type:LOAD_LOGIN_FAILURE,\n                      error:err.response.data,\n                       \n                  })\n              }\n        }\n        \n    \n    \n\n\n\nfunction* watchLogin(){\n    yield takeLatest(LOGIN_REQUEST,login)\n}\n\nfunction* watchLogout(){\n    yield takeLatest(LOGOUT_REQUEST,logout)\n}\nfunction* watchSignup(){\n    yield takeLatest(SIGNUP_REQUEST,signup)\n}\nfunction* watchFollowing(){\n    yield takeLatest(FOLLOWING_REQUEST,following)\n}\nfunction* watchUnFollowing(){\n    yield takeLatest(UNFOLLOWING_REQUEST,unfollowing)\n}\nfunction* watchLoadLogin(){\n    yield takeLatest(LOAD_LOGIN_REQUEST,loadLogin)\n}\n\nexport default function* rootSaga(){\n\n    yield all([\n        fork(watchLoadLogin),\n        fork(watchLogin),\n        fork(watchLogout),\n        fork(watchSignup),\n        fork(watchFollowing),\n        fork(watchUnFollowing)\n    ])\n\n}"]},"metadata":{},"sourceType":"module"}