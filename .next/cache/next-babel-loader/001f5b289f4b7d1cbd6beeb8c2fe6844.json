{"ast":null,"code":"var _jsxFileName = \"/Users/dong/CapstonProject/pages/Create/[id].js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport { Polyline, Marker, StreetViewPanorama, MarkerClusterer } from '@react-google-maps/api';\nimport { Card, Table, Button, Slider, Switch, Row, Col } from 'antd';\nimport { fa } from 'faker/lib/locales'; // import CreatedPath from './createdPath';\n\nimport SideBar from '../../component/Layout/SideBar';\nimport { useDispatch, useSelector } from 'react-redux'; // import { BIKE_MAP_REQUEST } from '../reducers/map';\n\nimport { END } from 'redux-saga';\nimport wrapper from '../../store/configureStore';\nimport { ADD_TRACK_REQUEST, LOAD_CREATEMAP_REQUEST } from '../../reducers/map';\nimport axios from 'axios';\nimport create from '@ant-design/icons/lib/components/IconFont';\n\nfunction createPath() {\n  const {\n    createMap\n  } = useSelector(state => state.map);\n  const dispatch = useDispatch();\n  const dummyMap = {\n    id: 2,\n    name: '경북대학교',\n    distance: 350,\n    userId: 1,\n    description: '설명',\n    event: 'bike',\n    gps: {\n      type: \"LineString\",\n      coordinates: [[128.6107980854627, 35.892532678390346], [128.6068460393017, 35.88766339206395], [128.61174492985546, 35.88602911241712], [128.6145031287387, 35.88856389908935], [128.6123212699206, 35.89099855199497], [128.6128976099858, 35.89463371630573]],\n      id: \"62133c5ff58346f2e09756af\"\n    },\n    altitude: [{\n      x: 0,\n      y: 8\n    }, {\n      x: 1,\n      y: 5\n    }, {\n      x: 2,\n      y: 4\n    }, {\n      x: 3,\n      y: 9\n    }, {\n      x: 4,\n      y: 34\n    }, {\n      x: 5,\n      y: 7\n    }],\n    start_latlng: [128.6107980854627, 35.892532678390346],\n    end_latlng: [128.6128976099858, 35.89463371630573],\n    createdAt: \"2022-02-21T07:16:47.648Z\"\n  };\n  const mapContainerStyle = {\n    height: \"400px\",\n    width: \"800px\",\n    marginLeft: '50px',\n    marginTop: '20px'\n  };\n  const {\n    0: strokeWeight,\n    1: setStrokeWeight\n  } = useState(5);\n\n  const mouseOut = () => {\n    setStrokeWeight(5);\n    console.log('aaa');\n  };\n\n  const mouseOver = () => {\n    setStrokeWeight(10);\n    console.log('over');\n  };\n\n  const options = {\n    strokeColor: '#FF0000',\n    strokeOpacity: 0.8,\n    strokeWeight: 5,\n    fillColor: '#FF0000',\n    fillOpacity: 0.35,\n    clickable: true,\n    draggable: false,\n    editable: false,\n    visible: true,\n    radius: 30000,\n    //-27부터 호주 시작해서 점찍고 점찍고 한다\n    paths: [[{\n      lat: 35.969997373905,\n      lng: 128.45170755523503\n    }, {\n      lat: 35.985501427015464,\n      lng: 128.40407191943035\n    }, {\n      lat: 35.89580489690752,\n      lng: 128.62238368221892\n    }]],\n    zIndex: 1\n  };\n\n  const drag = () => {\n    console.log('drag');\n  };\n\n  const onLoad = polyline => {\n    console.log('polyline: ', polyline);\n  };\n\n  const {\n    0: number,\n    1: setNumber\n  } = useState([0, createMap.track.gps.coordinates.length - 1]);\n  const {\n    0: leftPath,\n    1: setLeftPath\n  } = useState({\n    lat: createMap.track.start_latlng[1],\n    lng: createMap.track.start_latlng[0]\n  });\n  const {\n    0: rightPath,\n    1: setRightPath\n  } = useState({\n    lat: createMap.track.end_latlng[1],\n    lng: createMap.track.end_latlng[0]\n  });\n\n  const change = value => {\n    setNumber(value);\n  };\n\n  useEffect(() => {\n    setLeftPath({\n      lat: createMap.track.gps.coordinates[number[0]][1],\n      lng: createMap.track.gps.coordinates[number[0]][0]\n    });\n    console.log(number[0]);\n  }, [number[0]]);\n  useEffect(() => {\n    setRightPath({\n      lat: createMap.track.gps.coordinates[number[1]][1],\n      lng: createMap.track.gps.coordinates[number[1]][0]\n    });\n    console.log(number[1]);\n  }, [number[1]]);\n  const storePath = [];\n  const {\n    0: newPath,\n    1: setNewPath\n  } = useState();\n\n  const pathStore = () => {\n    for (var i = number[0]; i < number[1] + 1; i++) {\n      storePath.push(createMap.track.gps.coordinates[i]); // console.log(storePath)\n      // setNewPath([...newPath,storePath])\n    } // dummyMap.gps.coordinates=storePath\n\n\n    setNewPath(storePath); // console.log('aaa',newPath)\n    // console.log('qq',dummyMap.gps.coordinates)\n\n    console.log('..', storePath);\n    dispatch({\n      type: ADD_TRACK_REQUEST,\n      data: {\n        trackName: createMap.track.trackName,\n        totalDistance: createMap.track.totalDistance,\n        userId: createMap.track.user.userId,\n        name: createMap.track.user.name,\n        description: createMap.track.description,\n        event: createMap.track.event,\n        checkPoint: createMap.track.checkPoint,\n        gps: newPath,\n        altitude: createMap.track.altitude\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    span: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }, __jsx(SideBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  })), __jsx(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, number[0]), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 1\n    }\n  }, number[1]), __jsx(Slider, {\n    range: true,\n    defaultValue: number,\n    max: createMap.track.gps.coordinates.length - 1,\n    onChange: change,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }), __jsx(LoadScript, {\n    googleMapsApiKey: \"AIzaSyAYsO2CGL0YCjMoLk29eyitFC2PIJnJbYE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 5\n    }\n  }, __jsx(GoogleMap, {\n    id: \"marker-example\",\n    mapContainerStyle: mapContainerStyle,\n    zoom: 12,\n    center: {\n      lat: 35.89567677518036,\n      lng: 128.6200643553443\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }, __jsx(Marker, {\n    position: leftPath,\n    icon: {\n      url: ' http://maps.google.com/mapfiles/ms/icons/blue.png'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 5\n    }\n  }), __jsx(Marker, {\n    position: rightPath,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 5\n    }\n  }), __jsx(Polyline, {\n    onDragStart: drag,\n    onLoad: onLoad,\n    options: options,\n    path: createMap.track.gps.coordinates.map(m => ({\n      lat: m[1],\n      lng: m[0]\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 10\n    }\n  }))), __jsx(Button, {\n    onClick: pathStore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }\n  }, \"\\uACBD\\uB85C\\uB9CC\\uB4E4\\uAE30\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 5\n    }\n  }))));\n} // export async function getStaticProps() {\n//     return {\n//       props: {\n//         data: dispatch({\n//             type:BIKE_MAP_REQUEST\n//         }),\n//       },\n//       // revalidate: 10,\n//     };\n//   }\n\n\nexport async function getStaticPaths() {\n  const posts = await axios.get('http://13.124.24.179/api/track');\n  var paths1 = posts.data.trackId.map(id => ({\n    params: {\n      id: id._id\n    }\n  }));\n  return {\n    paths: paths1,\n    fallback: false\n  };\n}\nexport const getStaticProps = wrapper.getStaticProps(async context => {\n  context.store.dispatch({\n    type: LOAD_CREATEMAP_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default createPath;","map":{"version":3,"sources":["/Users/dong/CapstonProject/pages/Create/[id].js"],"names":["React","useEffect","useState","GoogleMap","LoadScript","Polyline","Marker","StreetViewPanorama","MarkerClusterer","Card","Table","Button","Slider","Switch","Row","Col","fa","SideBar","useDispatch","useSelector","END","wrapper","ADD_TRACK_REQUEST","LOAD_CREATEMAP_REQUEST","axios","create","createPath","createMap","state","map","dispatch","dummyMap","id","name","distance","userId","description","event","gps","type","coordinates","altitude","x","y","start_latlng","end_latlng","createdAt","mapContainerStyle","height","width","marginLeft","marginTop","strokeWeight","setStrokeWeight","mouseOut","console","log","mouseOver","options","strokeColor","strokeOpacity","fillColor","fillOpacity","clickable","draggable","editable","visible","radius","paths","lat","lng","zIndex","drag","onLoad","polyline","number","setNumber","track","length","leftPath","setLeftPath","rightPath","setRightPath","change","value","storePath","newPath","setNewPath","pathStore","i","push","data","trackName","totalDistance","user","checkPoint","url","m","getStaticPaths","posts","get","paths1","trackId","params","_id","fallback","getStaticProps","context","store","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport { Polyline ,Marker,StreetViewPanorama,MarkerClusterer} from '@react-google-maps/api';\nimport {Card,Table,Button,Slider, Switch,Row,Col} from 'antd'\nimport { fa } from 'faker/lib/locales';\n// import CreatedPath from './createdPath';\nimport SideBar from '../../component/Layout/SideBar';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { BIKE_MAP_REQUEST } from '../reducers/map';\nimport { END } from 'redux-saga';\nimport wrapper from '../../store/configureStore';\nimport { ADD_TRACK_REQUEST, LOAD_CREATEMAP_REQUEST } from '../../reducers/map';\nimport axios from 'axios';\nimport create from '@ant-design/icons/lib/components/IconFont';\n\n\n\nfunction createPath() {\n\n    const {createMap}=useSelector((state)=>state.map)\n\nconst dispatch=useDispatch()\n\n\nconst dummyMap={\n    id:2,\n    name:'경북대학교',\n    distance:350,\n    userId:1,\n    description:'설명',\n    event:'bike',\n    gps:{\n        type:\"LineString\",\n        coordinates: [\n            [\n                128.6107980854627,\n                35.892532678390346\n            ],\n            [\n                128.6068460393017,\n                35.88766339206395\n            ],\n            [\n                 128.61174492985546,\n                 35.88602911241712\n            ],\n            [128.6145031287387,\n                35.88856389908935\n            ],\n            [\n                128.6123212699206,\n                35.89099855199497\n            ],\n            [\n                128.6128976099858,\n                35.89463371630573\n            ]\n           \n        ],\n        id: \"62133c5ff58346f2e09756af\"\n    \n    },\n    altitude: [\n        { x: 0, y: 8 },\n        { x: 1, y: 5 },\n        { x: 2, y: 4 },\n        { x: 3, y: 9 },\n        { x: 4, y: 34 },\n        { x: 5, y: 7 },\n    ],\n    start_latlng: [\n        128.6107980854627,\n        35.892532678390346\n    ],\n    end_latlng: [\n        128.6128976099858,\n        35.89463371630573\n    ],\n    createdAt: \"2022-02-21T07:16:47.648Z\",\n    }\n\n\nconst mapContainerStyle = {\n    height: \"400px\",\n    width: \"800px\",\n    marginLeft:'50px',\n    marginTop:'20px'\n  };\n\n    \n\nconst [strokeWeight,setStrokeWeight]=useState(5)\n\n\nconst mouseOut=()=>{\n    setStrokeWeight(5)\n    console.log('aaa')\n}\n\nconst mouseOver=()=>{\n    setStrokeWeight(10)\n    console.log('over')\n}\n   \n\n    const options = {\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.8,\n        strokeWeight: 5,\n        fillColor: '#FF0000',\n        fillOpacity: 0.35,\n        clickable: true,\n        draggable: false,\n        editable: false,\n        visible: true,\n        radius: 30000,\n        //-27부터 호주 시작해서 점찍고 점찍고 한다\n        paths: [\n              [\n                  {lat:  35.969997373905, lng: 128.45170755523503},\n                  {lat:35.985501427015464, lng:128.40407191943035},\n              \n                  {lat: 35.89580489690752, lng: 128.62238368221892}\n                  \n              ]\n        \n        ],\n        zIndex: 1\n      };\n\n      const drag=()=>{\n          console.log('drag')\n      }\n\n      const onLoad = polyline => {\n        console.log('polyline: ', polyline)\n      };\n\n      const [number,setNumber]=useState([0,createMap.track.gps.coordinates.length-1])\n      \n      const [leftPath,setLeftPath]=useState({\n          lat:createMap.track.start_latlng[1],lng:createMap.track.start_latlng[0]\n        })\n      const [rightPath,setRightPath]=useState({\n        lat:createMap.track.end_latlng[1],lng:createMap.track.end_latlng[0]\n      })\n\n      const change=(value)=>{\n        setNumber(value)\n       \n      }\n\n      useEffect(()=>{\n          setLeftPath({\n              lat:createMap.track.gps.coordinates[number[0]][1],\n              lng:createMap.track.gps.coordinates[number[0]][0]\n          \n            })\n            console.log(number[0])\n\n      },[number[0]])\n      useEffect(()=>{\n        setRightPath({\n            lat:createMap.track.gps.coordinates[number[1]][1],\n            lng:createMap.track.gps.coordinates[number[1]][0]\n        \n          })\n          console.log(number[1])\n\n\n    },[number[1]])\n    const storePath=[]\n    const [newPath,setNewPath]=useState()\n\n    const pathStore=()=>{\n        \n        for(var i=number[0]; i<number[1]+1; i++){\n            storePath.push(createMap.track.gps.coordinates[i])\n            // console.log(storePath)\n            // setNewPath([...newPath,storePath])\n            \n        }\n        // dummyMap.gps.coordinates=storePath\n        setNewPath(storePath)\n        // console.log('aaa',newPath)\n        // console.log('qq',dummyMap.gps.coordinates)\n\n\n        \n        console.log('..',storePath)\n\n        dispatch({\n            type:ADD_TRACK_REQUEST,\n            data:{\n                trackName:createMap.track.trackName,\n                totalDistance:createMap.track.totalDistance,\n                userId:createMap.track.user.userId,\n                name:createMap.track.user.name,\n                description:createMap.track.description,\n                event:createMap.track.event,\n                checkPoint:createMap.track.checkPoint,\n                gps:newPath,\n                altitude:createMap.track.altitude\n\n\n\n\n\n            }\n        })\n      \n    }\n\n  return (\n    <div>\n        <Row>\n            <Col span={4}>\n                <SideBar></SideBar>\n            </Col>\n            <Col span={12}>\n            <h1>{number[0]}</h1>\n<h1>{number[1]}</h1>\n        <Slider range defaultValue={number} max={createMap.track.gps.coordinates.length-1} onChange={change} />\n        {/* {state&&<Switch size=\"small\" checked={disabled} onChange={this.handleDisabledChange} />} */}\n    <LoadScript\n    googleMapsApiKey=\"AIzaSyAYsO2CGL0YCjMoLk29eyitFC2PIJnJbYE\"\n    >\n        \n      <GoogleMap\n        id=\"marker-example\"\n        mapContainerStyle={mapContainerStyle}\n        zoom={12}\n        \n        center={{lat:35.89567677518036, lng:  128.6200643553443}}\n       \n        \n      \n        \n      >\n    \n    {/* <Marker  position={{lat:dummyMap.start_latlng[1],lng:dummyMap.start_latlng[0]}}  /> */}\n   \n    <Marker position={leftPath} icon={{url:' http://maps.google.com/mapfiles/ms/icons/blue.png',}} ></Marker>\n    <Marker position={rightPath} ></Marker>\n    \n   \n         <Polyline onDragStart={drag} onLoad={onLoad}  options={options} path={createMap.track.gps.coordinates.map((m)=>(\n            {\n                lat:m[1],\n                lng:m[0]\n            }\n        ))}></Polyline> \n     \n    \n    \n    \n    \n    \n        \n      </GoogleMap>\n      </LoadScript>\n      \n      <Button onClick={pathStore}>경로만들기</Button>\n\n    <div>\n        {/* <CreatedPath mapContainerStyle={mapContainerStyle} options={options} newPath={newPath} dummyMap={dummyMap}></CreatedPath> */}\n        </div>  \n\n            </Col>\n        </Row>\n\n\n\n{/* <Slider defaultValue={number} onChange={change} /> */}\n\n    </div>\n  )\n}\n\n// export async function getStaticProps() {\n//     return {\n//       props: {\n//         data: dispatch({\n//             type:BIKE_MAP_REQUEST\n//         }),\n//       },\n//       // revalidate: 10,\n//     };\n//   }\n\nexport async function getStaticPaths(){\n    const posts= await axios.get('http://13.124.24.179/api/track')\n   \n\nvar paths1=posts.data.trackId.map((id)=>({\n     params:{id:id._id}\n }))\n\n return{\n     paths:paths1,\n     fallback:false\n }\n}\n\nexport const getStaticProps=wrapper.getStaticProps(async (context)=>{\n    context.store.dispatch({\n        type:LOAD_CREATEMAP_REQUEST,\n        data:context.params.id\n    })\n    context.store.dispatch(END)\n    await context.store.sagaTask.toPromise()\n})\n\n\nexport default createPath"]},"metadata":{},"sourceType":"module"}