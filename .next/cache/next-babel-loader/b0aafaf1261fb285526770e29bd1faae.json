{"ast":null,"code":"import shortid from \"shortid\";\nimport produce from \"immer\";\nimport faker from 'faker';\nimport { FaLessThanEqual } from \"react-icons/fa\";\nexport const initialState = {\n  mainPosts: [],\n  addCommentDone: false,\n  addCommentLoading: false,\n  addCommentError: false,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  loadsPostsLoading: false,\n  loadsPostsDone: false,\n  loadsPostsError: null,\n  hasMorePosts: true,\n  loadMorePostLoading: false,\n  loadMorePostDone: false,\n  loadMorePostError: null\n};\nexport const LOAD_MORE_POST_SUCCESS = 'LOAD_MORE_POST_SUCCESS';\nexport const LOAD_MORE_POST_REQUEST = 'LOAD_MORE_POST_REQUEST';\nexport const LOAD_MORE_POST_FAILURE = 'LOAD_MORE_POST_FAILURE';\nexport const LOADS_POSTS_REQUEST = 'LOADS_POSTS_REQUEST';\nexport const LOADS_POSTS_SUCCESS = 'LOADS_POSTS_SUCCESS';\nexport const LOADS_POSTS_FAILURE = 'LOADS_POSTS_FAILURE';\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true; // draft.hasMorePosts = draft.mainPosts.length < 50;\n        // draft.mainPosts = action.data.concat(draft.mainPosts);\n        //  백만들어지면 포스트 불러올것\n\n        console.log('nexq', action.data.nextPage);\n        draft.mainPosts = action.data;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = \"ㅇㅇㅇ\";\n        break;\n\n      case LOAD_MORE_POST_REQUEST:\n        draft.loadMorePostLoading = true;\n        draft.loadMorePostDone = false;\n        draft.loadMorePostError = null;\n        break;\n\n      case LOAD_MORE_POST_SUCCESS:\n        draft.loadMorePostLoading = false;\n        draft.loadMorePostDone = true;\n        draft.hasMorePosts = draft.mainPosts.data.length < 30; // draft.mainPosts = action.data.concat(draft.mainPosts);\n        //  백만들어지면 포스트 불러올것\n\n        draft.mainPosts.nextPage = action.data.nextPage;\n        draft.mainPosts.data.push(...action.data.data);\n        break;\n\n      case LOAD_MORE_POST_FAILURE:\n        draft.loadMorePostLoading = false;\n        draft.loadMorePostError = \"ㅇㅇㅇ\";\n        break;\n\n      case LOADS_POSTS_REQUEST:\n        draft.loadsPostsLoading = true;\n        draft.loadsPostsDone = false;\n        draft.loadsPostsError = null;\n        break;\n\n      case LOADS_POSTS_SUCCESS:\n        draft.loadsPostsLoading = false;\n        draft.loadsPostsDone = true;\n        draft.mainPosts = action.data;\n        break;\n\n      case LOADS_POSTS_FAILURE:\n        draft.loadsPostsLoading = false;\n        draft.loadsPostsError = \"ㅇㅇㅇ\";\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        const commentpost = draft.mainPosts.find(v => v.id === action.data.id);\n        commentpost.comment.unshift(action.data.result.comment); // draft.mainPosts.find((v)=>v.id===action.data.id)\n\n        draft.mainPosts = draft.mainPosts;\n        break;\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = 'ss';\n        break;\n\n      default:\n        return state;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/dong/CapstonProject/reducers/post.js"],"names":["shortid","produce","faker","FaLessThanEqual","initialState","mainPosts","addCommentDone","addCommentLoading","addCommentError","loadPostsLoading","loadPostsDone","loadPostsError","loadsPostsLoading","loadsPostsDone","loadsPostsError","hasMorePosts","loadMorePostLoading","loadMorePostDone","loadMorePostError","LOAD_MORE_POST_SUCCESS","LOAD_MORE_POST_REQUEST","LOAD_MORE_POST_FAILURE","LOADS_POSTS_REQUEST","LOADS_POSTS_SUCCESS","LOADS_POSTS_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","reducer","state","action","draft","type","console","log","data","nextPage","length","push","commentpost","find","v","id","comment","unshift","result"],"mappings":"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","sourcesContent":["import shortid from \"shortid\";\nimport produce  from \"immer\";\nimport faker from 'faker';\nimport { FaLessThanEqual } from \"react-icons/fa\";\n\n\nexport const initialState={\n\nmainPosts:[],\n\n   addCommentDone:false,\n   addCommentLoading:false,\n   addCommentError:false,\n   loadPostsLoading: false,\n   loadPostsDone: false,\n   loadPostsError: null,\n   loadsPostsLoading: false,\n   loadsPostsDone: false,\n   loadsPostsError: null,\n   hasMorePosts:true,\n   loadMorePostLoading:false,\n   loadMorePostDone:false,\n   loadMorePostError:null,\n   \n\n}\n\nexport const LOAD_MORE_POST_SUCCESS='LOAD_MORE_POST_SUCCESS'\nexport const LOAD_MORE_POST_REQUEST='LOAD_MORE_POST_REQUEST'\nexport const LOAD_MORE_POST_FAILURE='LOAD_MORE_POST_FAILURE'\n\nexport const LOADS_POSTS_REQUEST = 'LOADS_POSTS_REQUEST';\nexport const LOADS_POSTS_SUCCESS = 'LOADS_POSTS_SUCCESS';\nexport const LOADS_POSTS_FAILURE = 'LOADS_POSTS_FAILURE';\n\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\n\nexport const ADD_COMMENT_REQUEST='ADD_COMMENT_REQUEST'\nexport const ADD_COMMENT_SUCCESS='ADD_COMMENT_SUCCESS'\nexport const ADD_COMMENT_FAILURE='ADD_COMMENT_FAILURE'\n\n\n\n\n\nconst reducer=(state=initialState,action)=>{\n    return produce(state,(draft)=>{\n        switch(action.type){\n          \n                case LOAD_POSTS_REQUEST:\n                    draft.loadPostsLoading = true;\n                    draft.loadPostsDone = false;\n                    draft.loadPostsError = null;\n                    break;\n                    case LOAD_POSTS_SUCCESS:\n                      \n                    draft.loadPostsLoading = false;\n                    draft.loadPostsDone = true;\n                    // draft.hasMorePosts = draft.mainPosts.length < 50;\n                    // draft.mainPosts = action.data.concat(draft.mainPosts);\n                    //  백만들어지면 포스트 불러올것\n                    console.log('nexq',action.data.nextPage)\n                    draft.mainPosts=action.data\n                    break;\n                    case LOAD_POSTS_FAILURE:\n                    draft.loadPostsLoading = false; \n                    draft.loadPostsError = \"ㅇㅇㅇ\";\n                    break;\n\n\n                    case LOAD_MORE_POST_REQUEST:\n                      draft.loadMorePostLoading = true;\n                      draft.loadMorePostDone = false;\n                      draft.loadMorePostError = null;\n                      break;\n                      case LOAD_MORE_POST_SUCCESS:\n                        \n                      draft.loadMorePostLoading = false;\n                      draft.loadMorePostDone = true;\n                      draft.hasMorePosts = draft.mainPosts.data.length < 30;\n                      // draft.mainPosts = action.data.concat(draft.mainPosts);\n                      //  백만들어지면 포스트 불러올것\n                      draft.mainPosts.nextPage=action.data.nextPage\n                      draft.mainPosts.data.push(...action.data.data)\n                      break;\n                      case LOAD_MORE_POST_FAILURE:\n                      draft.loadMorePostLoading = false; \n                      draft.loadMorePostError = \"ㅇㅇㅇ\";\n                      break;\n\n\n\n\n\n                    case LOADS_POSTS_REQUEST:\n                      draft.loadsPostsLoading = true;\n                      draft.loadsPostsDone = false;\n                      draft.loadsPostsError = null;\n                      break;\n                      case LOADS_POSTS_SUCCESS:\n                        \n                      draft.loadsPostsLoading = false;\n                      draft.loadsPostsDone = true;\n\n                      draft.mainPosts=action.data\n                      break;\n                      case LOADS_POSTS_FAILURE:\n                      draft.loadsPostsLoading = false; \n                      draft.loadsPostsError = \"ㅇㅇㅇ\";\n                      break;\n\n                    case ADD_COMMENT_REQUEST:\n                    draft.addCommentLoading = true;\n                    draft.addCommentDone = false;\n                    break;\n                    case ADD_COMMENT_SUCCESS:\n                    draft.addCommentLoading = false;\n                    draft.addCommentDone = true;\n\n                    const commentpost=draft.mainPosts.find((v)=>v.id===action.data.id)\n                    commentpost.comment.unshift(action.data.result.comment)\n                    // draft.mainPosts.find((v)=>v.id===action.data.id)\n                  \n                    draft.mainPosts=draft.mainPosts\n                    break;\n                    case ADD_COMMENT_FAILURE:\n                    draft.addCommentLoading = false; \n                    draft.addCommentError = 'ss';\n                    break;\n                   \n           \n            default:\n                return state\n        }\n    })\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}