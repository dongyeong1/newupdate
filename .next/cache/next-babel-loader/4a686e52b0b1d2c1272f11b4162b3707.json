{"ast":null,"code":"import { all, call, fork, put, takeLatest, take } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { SEARCH_MAP_REQUEST, SEARCH_MAP_SUCCESS, SEARCH_MAP_FAILURE, LOAD_MAP_REQUEST, LOAD_MAP_SUCCESS, LOAD_MAP_FAILURE, MOVING_MAP_SUCCESS, MOVING_MAP_REQUEST, MOVING_MAP_FAILURE, RUNNING_MAP_FAILURE, RUNNING_MAP_SUCCESS, RUNNING_MAP_REQUEST, BIKE_MAP_REQUEST, BIKE_MAP_SUCCESS, BIKE_MAP_FAILURE, LOAD_CREATEMAP_REQUEST, LOAD_CREATEMAP_SUCCESS, LOAD_CREATEMAP_FAILURE, ADD_TRACK_REQUEST, ADD_TRACK_SUCCESS, ADD_TRACK_FAILURE, LOAD_MY_LOCATION_REQUEST, LOAD_MY_LOCATION_SUCCESS, LOAD_MY_LOCATION_FAILURE, LOAD_TRACK_RANK_REQUEST, LOAD_TRACK_RANK_SUCCESS, LOAD_TRACK_RANK_FAILURE, LOAD_TRACK_MYRANK_REQUEST, LOAD_TRACK_MYRANK_FAILURE, LOAD_TRACK_MYRANK_SUCCESS } from '../reducers/map';\nimport { USER_RATE_FAILURE, USER_RATE_REQUEST, USER_RATE_SUCCESS } from '../reducers/user';\n\nconst searchMapAPI = async datas => {\n  try {\n    const res = await fetch(`https://2yubi.shop/api/tracks/search?bound1=${datas.north.lng}&bound2=${datas.north.lat}&bound3=${datas.south.lng}&bound4=${datas.south.lat}&event=${datas.event}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      credentials: \"include\"\n    });\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfunction* searchMap(action) {\n  try {\n    const result = yield call(searchMapAPI, action.data); // console.log('search',result)\n\n    yield put({\n      type: SEARCH_MAP_SUCCESS,\n      data: result\n    });\n  } catch (err) {\n    yield put({\n      type: SEARCH_MAP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nconst loadMapAPI = async datas => {\n  const {\n    data\n  } = await axios.get(`https://2yubi.shop/api/tracks?track_id=${datas}`);\n  return data;\n};\n\nfunction* loadMap(action) {\n  try {\n    const result = yield call(loadMapAPI, action.data);\n    yield put({\n      type: LOAD_MAP_SUCCESS,\n      data: result\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MAP_FAILURE,\n      error: 'ss'\n    });\n  }\n}\n\nconst movingMapAPI = async datas => {\n  try {\n    const res = await fetch(`https://2yubi.shop/api/tracks/search?bound1=${datas.north.lng}&bound2=${datas.north.lat}&bound3=${datas.south.lng}&bound4=${datas.south.lat}&event=${datas.event}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      credentials: \"include\"\n    });\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfunction* movingMap(action) {\n  try {\n    const result = yield call(movingMapAPI, action.data);\n    yield put({\n      type: MOVING_MAP_SUCCESS,\n      data: result\n    });\n  } catch (err) {\n    yield put({\n      type: MOVING_MAP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nconst runningMapAPI = async datas => {\n  try {\n    const res = await fetch(`https://2yubi.shop/api/tracks/search?bound1=${datas.north.lng}&bound2=${datas.north.lat}&bound3=${datas.south.lng}&bound4=${datas.south.lat}&event=${datas.event}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      credentials: \"include\"\n    });\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfunction* runningMap(action) {\n  try {\n    const result = yield call(runningMapAPI, action.data);\n    yield put({\n      type: RUNNING_MAP_SUCCESS,\n      data: result\n    });\n  } catch (err) {\n    yield put({\n      type: RUNNING_MAP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nconst bikeMapAPI = async datas => {\n  try {\n    const res = await fetch(`https://2yubi.shop/api/tracks/search?bound1=${datas.north.lng}&bound2=${datas.north.lat}&bound3=${datas.south.lng}&bound4=${datas.south.lat}&event=${datas.event}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      credentials: \"include\"\n    });\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfunction* bikeMap(action) {\n  try {\n    const result = yield call(bikeMapAPI, action.data);\n    yield put({\n      type: BIKE_MAP_SUCCESS,\n      data: result\n    });\n  } catch (err) {\n    yield put({\n      type: BIKE_MAP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nconst createmapLoadAPI = async datas => {\n  try {\n    const res = await fetch(`https://2yubi.shop/api/match/gpsData?gpsId=${datas}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      credentials: \"include\"\n    });\n    const data = await res;\n    console.log('zxygp', data); //data값 console.log로 확인해보고 gpsData 파싱해서 LOAD_CREATEMAP_SUCCESS할때 data값 넣어야한다.\n\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfunction* createmapLoad(action) {\n  try {\n    const result = yield call(createmapLoadAPI, action.data);\n    yield put({\n      type: LOAD_CREATEMAP_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_CREATEMAP_FAILURE,\n      error: 'as'\n    });\n  }\n}\n\nconst addTrackAPI = async datas => {\n  try {\n    const res = await fetch(`https://2yubi.shop/api/tracks`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify({\n        gpsData: datas\n      })\n    });\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfunction* addTrack(action) {\n  try {\n    const result = yield call(addTrackAPI, action.data);\n    console.log('dsss', result);\n    yield put({\n      type: ADD_TRACK_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_TRACK_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nconst myLocationAPI = async datas => {\n  try {\n    const res = await fetch(`https://2yubi.shop/api/tracks/search?bound1=${datas.north.lng}&bound2=${datas.north.lat}&bound3=${datas.south.lng}&bound4=${datas.south.lat}&event=${datas.event}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      credentials: \"include\"\n    });\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfunction* myLocation(action) {\n  try {\n    const result = yield call(myLocationAPI, action.data);\n    yield put({\n      type: LOAD_MY_LOCATION_SUCCESS,\n      data: result\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_LOCATION_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nconst trackRankAPI = async datas => {\n  const res = await axios.get(`https://2yubi.shop/api/ranking/track?track_id=${datas}`);\n  const data = await res.data;\n  console.log('dwertw4123', data);\n  return data;\n};\n\nfunction* trackRank(action) {\n  try {\n    const result = yield call(trackRankAPI, action.data);\n    console.log('dodododorank', result);\n    yield put({\n      type: LOAD_TRACK_RANK_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_TRACK_RANK_FAILURE,\n      error: 'aa'\n    });\n  }\n}\n\nconst trackMyRankAPI = async datas => {\n  const res = await axios.get(`https://2yubi.shop/api/ranking/myRank?track_id=${datas}`);\n  const data = await res.data;\n  return data;\n};\n\nfunction* trackMyRank(action) {\n  try {\n    console.log('action', action.data);\n    const result = yield call(trackMyRankAPI, action.data);\n    console.log('myTrack', result);\n    yield put({\n      type: LOAD_TRACK_MYRANK_SUCCESS,\n      data: result\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_TRACK_MYRANK_FAILURE,\n      error: 'aa'\n    });\n  }\n}\n\nconst userRateAPI = async datas => {\n  const res = await axios.get('https://2yubi.shop/api/record/type');\n  const data = await res.data;\n  return data;\n};\n\nfunction* userRate(action) {\n  try {\n    console.log('action', action.data);\n    const result = yield call(userRateAPI, action.data);\n    console.log('myTrack', result);\n    yield put({\n      type: USER_RATE_SUCCESS,\n      data: result\n    });\n  } catch (err) {\n    yield put({\n      type: USER_RATE_FAILURE,\n      error: 'aa'\n    });\n  }\n}\n\nfunction* watchSearchMap() {\n  yield takeLatest(SEARCH_MAP_REQUEST, searchMap);\n}\n\nfunction* wahchLoadMap() {\n  yield takeLatest(LOAD_MAP_REQUEST, loadMap);\n}\n\nfunction* watchMovingMap() {\n  yield takeLatest(MOVING_MAP_REQUEST, movingMap);\n}\n\nfunction* watchBikeMap() {\n  yield takeLatest(BIKE_MAP_REQUEST, bikeMap);\n}\n\nfunction* watchRunningMap() {\n  yield takeLatest(RUNNING_MAP_REQUEST, runningMap);\n}\n\nfunction* watchCreateMapLoad() {\n  yield takeLatest(LOAD_CREATEMAP_REQUEST, createmapLoad);\n}\n\nfunction* watchAddTrack() {\n  yield takeLatest(ADD_TRACK_REQUEST, addTrack);\n}\n\nfunction* watchMyLocation() {\n  yield takeLatest(LOAD_MY_LOCATION_REQUEST, myLocation);\n}\n\nfunction* watchMapRank() {\n  yield takeLatest(LOAD_TRACK_RANK_REQUEST, trackRank);\n}\n\nfunction* watchMapMyrank() {\n  yield takeLatest(LOAD_TRACK_MYRANK_REQUEST, trackMyRank);\n}\n\nfunction* watchUserRate() {\n  yield takeLatest(USER_RATE_REQUEST, userRate);\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchSearchMap), fork(wahchLoadMap), fork(watchMovingMap), fork(watchBikeMap), fork(watchRunningMap), fork(watchCreateMapLoad), fork(watchAddTrack), fork(watchMyLocation), fork(watchMapRank), fork(watchMapMyrank), fork(watchUserRate)]);\n}","map":{"version":3,"sources":["/Users/dong/CapstonProject/sagas/map.js"],"names":["all","call","fork","put","takeLatest","take","axios","SEARCH_MAP_REQUEST","SEARCH_MAP_SUCCESS","SEARCH_MAP_FAILURE","LOAD_MAP_REQUEST","LOAD_MAP_SUCCESS","LOAD_MAP_FAILURE","MOVING_MAP_SUCCESS","MOVING_MAP_REQUEST","MOVING_MAP_FAILURE","RUNNING_MAP_FAILURE","RUNNING_MAP_SUCCESS","RUNNING_MAP_REQUEST","BIKE_MAP_REQUEST","BIKE_MAP_SUCCESS","BIKE_MAP_FAILURE","LOAD_CREATEMAP_REQUEST","LOAD_CREATEMAP_SUCCESS","LOAD_CREATEMAP_FAILURE","ADD_TRACK_REQUEST","ADD_TRACK_SUCCESS","ADD_TRACK_FAILURE","LOAD_MY_LOCATION_REQUEST","LOAD_MY_LOCATION_SUCCESS","LOAD_MY_LOCATION_FAILURE","LOAD_TRACK_RANK_REQUEST","LOAD_TRACK_RANK_SUCCESS","LOAD_TRACK_RANK_FAILURE","LOAD_TRACK_MYRANK_REQUEST","LOAD_TRACK_MYRANK_FAILURE","LOAD_TRACK_MYRANK_SUCCESS","USER_RATE_FAILURE","USER_RATE_REQUEST","USER_RATE_SUCCESS","searchMapAPI","datas","res","fetch","north","lng","lat","south","event","method","headers","Accept","credentials","data","json","err","console","log","searchMap","action","result","type","error","response","loadMapAPI","get","loadMap","movingMapAPI","movingMap","runningMapAPI","runningMap","bikeMapAPI","bikeMap","createmapLoadAPI","createmapLoad","addTrackAPI","body","JSON","stringify","gpsData","addTrack","myLocationAPI","myLocation","trackRankAPI","trackRank","trackMyRankAPI","trackMyRank","userRateAPI","userRate","watchSearchMap","wahchLoadMap","watchMovingMap","watchBikeMap","watchRunningMap","watchCreateMapLoad","watchAddTrack","watchMyLocation","watchMapRank","watchMapMyrank","watchUserRate","rootSaga"],"mappings":"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","sourcesContent":["import { all,call,fork,put,takeLatest, take} from 'redux-saga/effects'\nimport axios from 'axios'\nimport { SEARCH_MAP_REQUEST ,\nSEARCH_MAP_SUCCESS,\nSEARCH_MAP_FAILURE,\nLOAD_MAP_REQUEST,\nLOAD_MAP_SUCCESS,\nLOAD_MAP_FAILURE,\nMOVING_MAP_SUCCESS,\nMOVING_MAP_REQUEST,\nMOVING_MAP_FAILURE,\nRUNNING_MAP_FAILURE,\nRUNNING_MAP_SUCCESS,\nRUNNING_MAP_REQUEST,\nBIKE_MAP_REQUEST,\nBIKE_MAP_SUCCESS,\nBIKE_MAP_FAILURE,\nLOAD_CREATEMAP_REQUEST,\nLOAD_CREATEMAP_SUCCESS,\nLOAD_CREATEMAP_FAILURE,\nADD_TRACK_REQUEST,\nADD_TRACK_SUCCESS,\nADD_TRACK_FAILURE,\nLOAD_MY_LOCATION_REQUEST,\nLOAD_MY_LOCATION_SUCCESS,\nLOAD_MY_LOCATION_FAILURE,\nLOAD_TRACK_RANK_REQUEST,\nLOAD_TRACK_RANK_SUCCESS,\nLOAD_TRACK_RANK_FAILURE,\nLOAD_TRACK_MYRANK_REQUEST,\nLOAD_TRACK_MYRANK_FAILURE,\nLOAD_TRACK_MYRANK_SUCCESS\n} from '../reducers/map'\nimport { USER_RATE_FAILURE, USER_RATE_REQUEST, USER_RATE_SUCCESS } from '../reducers/user';\n\n\n\nconst searchMapAPI =async(datas)=>{\n\n\n    try{\n        const res= await fetch(`https://2yubi.shop/api/tracks/search?bound1=${datas.north.lng}&bound2=${datas.north.lat}&bound3=${datas.south.lng}&bound4=${datas.south.lat}&event=${datas.event}`, {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n            credentials: \"include\",\n            \n          });\n          const data= await res.json()\n    \n          return data\n\n    }catch(err){\n        console.log(err)\n    }\n\n    }\n    \nfunction* searchMap(action){\n    try{\n        const result = yield call(searchMapAPI,action.data)\n        // console.log('search',result)\n        yield put({\n            type:SEARCH_MAP_SUCCESS,\n            data:result\n        })\n\n    }catch(err){\n        yield put({\n            type:SEARCH_MAP_FAILURE,\n            error:err.response.data,\n             \n        })\n\n    }\n}\n\n\n\n\n\nconst loadMapAPI=async(datas)=>{\n   const {data}=await axios.get(`https://2yubi.shop/api/tracks?track_id=${datas}`)\n\n    return data\n    }\n    \n\nfunction* loadMap(action){\n    try{\n        const result = yield call(loadMapAPI,action.data)\n        yield put({\n            type:LOAD_MAP_SUCCESS,\n            data:result\n        })\n\n    }catch(err){\n        yield put({\n            type:LOAD_MAP_FAILURE,\n            error:'ss',\n             \n        })\n\n    }\n}\n\nconst movingMapAPI=async(datas)=>{\n    try{\n        const res= await fetch(`https://2yubi.shop/api/tracks/search?bound1=${datas.north.lng}&bound2=${datas.north.lat}&bound3=${datas.south.lng}&bound4=${datas.south.lat}&event=${datas.event}`, {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n            credentials: \"include\",\n            \n          });\n          const data= await res.json()\n          return data\n    }catch(err){\n        console.log(err)\n    }\n    }\n    \n\nfunction* movingMap(action){\n    try{\n        const result = yield call(movingMapAPI,action.data)\n        yield put({\n            type:MOVING_MAP_SUCCESS,\n            data:result\n        })\n\n    }catch(err){\n        yield put({\n            type:MOVING_MAP_FAILURE,\n            error:err.response.data,\n        })\n\n    }\n}\n\n\n\n\nconst runningMapAPI=async(datas)=>{\n    try{\n        const res= await fetch(`https://2yubi.shop/api/tracks/search?bound1=${datas.north.lng}&bound2=${datas.north.lat}&bound3=${datas.south.lng}&bound4=${datas.south.lat}&event=${datas.event}`, {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n            credentials: \"include\",\n            \n          });\n          const data= await res.json()\n          return data\n\n    }catch(err){\n        console.log(err)\n    }\n}\n    \nfunction* runningMap(action){\n    try{\n        const result = yield call(runningMapAPI,action.data)\n        yield put({\n            type:RUNNING_MAP_SUCCESS,\n            data:result\n        })\n\n    }catch(err){\n        yield put({\n            type:RUNNING_MAP_FAILURE,\n            error:err.response.data,\n        })\n\n    }\n}\n\n\n\n\n\nconst bikeMapAPI=async(datas)=>{\n    try{\n        const res= await fetch(`https://2yubi.shop/api/tracks/search?bound1=${datas.north.lng}&bound2=${datas.north.lat}&bound3=${datas.south.lng}&bound4=${datas.south.lat}&event=${datas.event}`, {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n            credentials: \"include\",\n            \n          });\n          const data= await res.json()\n      \n          return data\n\n    }catch(err){\n        console.log(err)\n    }\n    }\n    \n\nfunction* bikeMap(action){\n    try{\n        const result = yield call(bikeMapAPI,action.data)\n        yield put({\n            type:BIKE_MAP_SUCCESS,\n            data:result\n        })\n\n    }catch(err){\n        yield put({\n            type:BIKE_MAP_FAILURE,\n            error:err.response.data,\n        })\n\n    }\n}\n\n\n\n\nconst createmapLoadAPI=async(datas)=>{\n    try{\n        const res= await fetch(`https://2yubi.shop/api/match/gpsData?gpsId=${datas}`, {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n            credentials: \"include\",\n            \n          });\n          const data= await res\n\n          console.log('zxygp',data)\n         \n      //data값 console.log로 확인해보고 gpsData 파싱해서 LOAD_CREATEMAP_SUCCESS할때 data값 넣어야한다.\n          return data\n\n    }catch(err){\n        console.log(err)\n    }\n    }\n\n\nfunction* createmapLoad(action){\n    try{\n        const result = yield call(createmapLoadAPI,action.data)\n        yield put({\n            type:LOAD_CREATEMAP_SUCCESS,\n            data:result.data\n        })\n\n    }catch(err){\n        yield put({\n            type:LOAD_CREATEMAP_FAILURE,\n            error:'as',\n        })\n\n    }\n}\n\n\n\n\n\nconst addTrackAPI=async(datas)=>{\n    try{\n        const res= await fetch(`https://2yubi.shop/api/tracks`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n            credentials: \"include\",\n            body:JSON.stringify({\n                gpsData:datas\n            })\n           \n          });\n          const data= await res.json()\n          return data\n\n    }catch(err){\n        console.log(err)\n    }\n    }\n\nfunction* addTrack(action){\n    try{\n        const result = yield call(addTrackAPI,action.data)\n        console.log('dsss',result)\n        yield put({\n            type:ADD_TRACK_SUCCESS,\n        })\n\n    }catch(err){\n        yield put({\n            type:ADD_TRACK_FAILURE,\n            error:err.response.data,\n        })\n\n    }\n}\n\n\n\n\n\nconst myLocationAPI=async(datas)=>{\n    try{\n        const res= await fetch(`https://2yubi.shop/api/tracks/search?bound1=${datas.north.lng}&bound2=${datas.north.lat}&bound3=${datas.south.lng}&bound4=${datas.south.lat}&event=${datas.event}`, {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n            credentials: \"include\",\n            \n          });\n          const data= await res.json()\n          return data\n\n    }catch(err){\n        console.log(err)\n    }\n}\n   \nfunction* myLocation(action){\n    try{\n        const result = yield call(myLocationAPI,action.data)\n        yield put({\n            type:LOAD_MY_LOCATION_SUCCESS,\n            data:result\n        })\n\n    }catch(err){\n        yield put({\n            type:LOAD_MY_LOCATION_FAILURE,\n            error:err.response.data,\n        })\n\n    }\n}\n\n\n\n\n\n\nconst trackRankAPI=async(datas)=>{\n\n    const res=await axios.get(`https://2yubi.shop/api/ranking/track?track_id=${datas}`)\n    const data=await res.data\n    console.log('dwertw4123',data)\n    return data\n\n    \n   \n}\n\nfunction* trackRank(action){\n    try{\n        const result = yield call(trackRankAPI,action.data)\n        console.log('dodododorank',result)\n        yield put({\n            type:LOAD_TRACK_RANK_SUCCESS,\n            data:result.data\n        })\n\n    }catch(err){\n        yield put({\n            type:LOAD_TRACK_RANK_FAILURE,\n            error:'aa',\n        })\n\n    }\n}\n\n\n\n\nconst trackMyRankAPI=async(datas)=>{\n\n    const res=await axios.get(`https://2yubi.shop/api/ranking/myRank?track_id=${datas}`)\n\n    const data=await res.data\n    \n    return data\n\n   \n   \n}\n\n\n\n\nfunction* trackMyRank(action){\n    try{\n        console.log('action',action.data)\n        const result = yield call(trackMyRankAPI,action.data)\n        console.log('myTrack',result)\n        yield put({\n            type:LOAD_TRACK_MYRANK_SUCCESS,\n            data:result\n        })\n\n    }catch(err){\n        yield put({\n            type:LOAD_TRACK_MYRANK_FAILURE,\n            error:'aa',\n        })\n\n    }\n}\n\n\n\n\n\nconst userRateAPI=async(datas)=>{\n\n    const res=await axios.get('https://2yubi.shop/api/record/type')\n\n    const data=await res.data\n    \n    return data\n\n   \n   \n}\n\n\n\n\nfunction* userRate(action){\n    try{\n        console.log('action',action.data)\n        const result = yield call(userRateAPI,action.data)\n        console.log('myTrack',result)\n        yield put({\n            type:USER_RATE_SUCCESS,\n            data:result\n        })\n\n    }catch(err){\n        yield put({\n            type:USER_RATE_FAILURE,\n            error:'aa',\n        })\n\n    }\n}\n\n\n\n\nfunction* watchSearchMap(){\n    yield takeLatest(SEARCH_MAP_REQUEST,searchMap)\n}\n\nfunction* wahchLoadMap(){\n    yield takeLatest(LOAD_MAP_REQUEST,loadMap)\n}\n\nfunction* watchMovingMap(){\n    yield takeLatest(MOVING_MAP_REQUEST,movingMap)\n}\n\nfunction* watchBikeMap(){\n    yield takeLatest(BIKE_MAP_REQUEST,bikeMap)\n}\n\nfunction* watchRunningMap(){\n    yield takeLatest(RUNNING_MAP_REQUEST,runningMap)\n}\n\nfunction* watchCreateMapLoad(){\n    yield takeLatest(LOAD_CREATEMAP_REQUEST,createmapLoad)\n}\n\nfunction* watchAddTrack(){\n    yield takeLatest(ADD_TRACK_REQUEST,addTrack)\n}\n\nfunction* watchMyLocation(){\n    yield takeLatest(LOAD_MY_LOCATION_REQUEST,myLocation)\n}\n\nfunction* watchMapRank(){\n    yield takeLatest(LOAD_TRACK_RANK_REQUEST,trackRank)\n}\n\nfunction* watchMapMyrank(){\n    yield takeLatest(LOAD_TRACK_MYRANK_REQUEST,trackMyRank)\n}\n\nfunction* watchUserRate(){\n    yield takeLatest(USER_RATE_REQUEST,userRate)\n}\n\n\n\n\n\n\n\nexport default function* rootSaga(){\n\n    yield all([\n        fork(watchSearchMap),\n        fork(wahchLoadMap),\n        fork(watchMovingMap),\n        fork(watchBikeMap),\n        fork(watchRunningMap),\n        fork(watchCreateMapLoad),\n        fork(watchAddTrack),\n        fork(watchMyLocation),\n        fork(watchMapRank),\n        fork(watchMapMyrank),\n        fork(watchUserRate),\n        \n\n      \n    ])\n\n}\n"]},"metadata":{},"sourceType":"module"}