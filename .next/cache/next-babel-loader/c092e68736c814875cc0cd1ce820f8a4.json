{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/dong/CapstonProject/component/RecordElavation.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport useMouseLeave from \"../../../../../hooks/useMouseLeave\";\n\nvar ChartElevation = function ChartElevation(_ref) {\n  _s();\n\n  var graphData = _ref.graphData,\n      setPosition = _ref.setPosition,\n      height = _ref.height;\n  var callbacks = {\n    label: function label(tooltipItem, data) {\n      var idx = tooltipItem.datasetIndex;\n      var label = data.datasets[idx].label || \"\";\n\n      if (label) {\n        label += \": \";\n      }\n\n      label += Math.round(tooltipItem.yLabel * 100) / 100 + \"m\";\n      return label;\n    }\n  };\n\n  var onHover = function onHover(event, chartElement) {\n    var element = chartElement[0];\n\n    if (!element) {\n      return;\n    }\n\n    var chartEventIndex = element[\"_index\"];\n    var position = graphData.locations[chartEventIndex];\n    setPosition(position);\n  };\n\n  var options = {\n    responsive: true,\n    tooltips: {\n      mode: \"index\",\n      intersect: false,\n      callbacks: callbacks\n    },\n    events: [\"mousemove\"],\n    onHover: onHover,\n    legend: {\n      display: false\n    }\n  };\n  var Graph = useMouseLeave(function () {\n    setPosition();\n  });\n  return __jsx(Bar, {\n    data: graphData,\n    height: height || 75,\n    options: options,\n    ref: Graph,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  });\n};\n\n_s(ChartElevation, \"3HzRC0lQzhX3lCC/GRPT+1FCEEM=\", false, function () {\n  return [useMouseLeave];\n});\n\n_c = ChartElevation;\nexport default ChartElevation;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartElevation\");","map":{"version":3,"sources":["/Users/dong/CapstonProject/component/RecordElavation.js"],"names":["React","Bar","useMouseLeave","ChartElevation","graphData","setPosition","height","callbacks","label","tooltipItem","data","idx","datasetIndex","datasets","Math","round","yLabel","onHover","event","chartElement","element","chartEventIndex","position","locations","options","responsive","tooltips","mode","intersect","events","legend","display","Graph"],"mappings":";;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAwC;AAAA;;AAAA,MAArCC,SAAqC,QAArCA,SAAqC;AAAA,MAA1BC,WAA0B,QAA1BA,WAA0B;AAAA,MAAbC,MAAa,QAAbA,MAAa;AAC7D,MAAMC,SAAS,GAAG;AAChBC,IAAAA,KAAK,EAAE,eAASC,WAAT,EAAsBC,IAAtB,EAA4B;AACjC,UAAMC,GAAG,GAAGF,WAAW,CAACG,YAAxB;AACA,UAAIJ,KAAK,GAAGE,IAAI,CAACG,QAAL,CAAcF,GAAd,EAAmBH,KAAnB,IAA4B,EAAxC;;AAEA,UAAIA,KAAJ,EAAW;AACTA,QAAAA,KAAK,QAAL;AACD;;AACDA,MAAAA,KAAK,IAAIM,IAAI,CAACC,KAAL,CAAWN,WAAW,CAACO,MAAZ,GAAqB,GAAhC,IAAuC,GAAvC,GAA6C,GAAtD;AACA,aAAOR,KAAP;AACD;AAVe,GAAlB;;AAaA,MAAMS,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,YAAR,EAAyB;AACvC,QAAMC,OAAO,GAAGD,YAAY,CAAC,CAAD,CAA5B;;AACA,QAAI,CAACC,OAAL,EAAc;AACZ;AACD;;AAED,QAAMC,eAAe,GAAGD,OAAO,CAAC,QAAD,CAA/B;AACA,QAAME,QAAQ,GAAGlB,SAAS,CAACmB,SAAV,CAAoBF,eAApB,CAAjB;AACAhB,IAAAA,WAAW,CAACiB,QAAD,CAAX;AACD,GATD;;AAWA,MAAME,OAAO,GAAG;AACdC,IAAAA,UAAU,EAAE,IADE;AAEdC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,IAAI,EAAE,OADE;AAERC,MAAAA,SAAS,EAAE,KAFH;AAGRrB,MAAAA,SAAS,EAATA;AAHQ,KAFI;AAOdsB,IAAAA,MAAM,EAAE,CAAC,WAAD,CAPM;AAQdZ,IAAAA,OAAO,EAAPA,OARc;AASda,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE;AADH;AATM,GAAhB;AAcA,MAAMC,KAAK,GAAG9B,aAAa,CAAC,YAAM;AAChCG,IAAAA,WAAW;AACZ,GAF0B,CAA3B;AAIA,SACE,MAAC,GAAD;AACE,IAAA,IAAI,EAAED,SADR;AAEE,IAAA,MAAM,EAAEE,MAAM,IAAI,EAFpB;AAGE,IAAA,OAAO,EAAEkB,OAHX;AAIE,IAAA,GAAG,EAAEQ,KAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CAnDD;;GAAM7B,c;UAuCUD,a;;;KAvCVC,c;AAqDN,eAAeA,cAAf","sourcesContent":["\nimport React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport useMouseLeave from \"../../../../../hooks/useMouseLeave\";\n\nconst ChartElevation = ({ graphData, setPosition, height }) => {\n  const callbacks = {\n    label: function(tooltipItem, data) {\n      const idx = tooltipItem.datasetIndex;\n      let label = data.datasets[idx].label || \"\";\n\n      if (label) {\n        label += `: `;\n      }\n      label += Math.round(tooltipItem.yLabel * 100) / 100 + \"m\";\n      return label;\n    },\n  };\n\n  const onHover = (event, chartElement) => {\n    const element = chartElement[0];\n    if (!element) {\n      return;\n    }\n\n    const chartEventIndex = element[\"_index\"];\n    const position = graphData.locations[chartEventIndex];\n    setPosition(position);\n  };\n\n  const options = {\n    responsive: true,\n    tooltips: {\n      mode: \"index\",\n      intersect: false,\n      callbacks,\n    },\n    events: [\"mousemove\"],\n    onHover,\n    legend: {\n      display: false,\n    },\n  };\n\n  const Graph = useMouseLeave(() => {\n    setPosition();\n  });\n\n  return (\n    <Bar\n      data={graphData}\n      height={height || 75}\n      options={options}\n      ref={Graph}\n    ></Bar>\n  );\n};\n\nexport default ChartElevation;"]},"metadata":{},"sourceType":"module"}