{"ast":null,"code":"var _jsxFileName = \"/Users/dong/CapstonProject/pages/location.js\";\nvar __jsx = React.createElement;\nimport { ge } from 'faker/lib/locales';\nimport React, { useEffect } from 'react'; // import useGeolocation from 'react-hook-geolocation'\n\nfunction location() {\n  const load = () => {\n    // if (!(\"geolocation\" in navigator)) {\n    //     this.textContent = \"Geolocation is not available.\";\n    //     return;\n    //   }\n    //   this.textContent = \"Locating...\";\n    // get position\n    navigator.geolocation.getCurrentPosition(pos => {\n      console.log(pos.coords.latitude, pos.coords.longitude);\n    }, err => {//   this.textContent = err.message;\n    });\n  };\n\n  useEffect(() => {\n    load();\n  }, []); // const geolocation = useGeolocation({\n  //     enableHighAccuracy: true,\n  //     maximumAge: 15000,\n  //     timeout: 12000,\n  //   });\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default location;","map":{"version":3,"sources":["/Users/dong/CapstonProject/pages/location.js"],"names":["ge","React","useEffect","location","load","navigator","geolocation","getCurrentPosition","pos","console","log","coords","latitude","longitude","err"],"mappings":";;AAAA,SAASA,EAAT,QAAmB,mBAAnB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA8B,OAA9B,C,CACA;;AAEA,SAASC,QAAT,GAAoB;AAEhB,QAAMC,IAAI,GAAC,MAAI;AACX;AACA;AACA;AACA;AACA;AAEE;AACAC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACGC,GAAD,IAAS;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,MAAJ,CAAWC,QAAvB,EAAgCJ,GAAG,CAACG,MAAJ,CAAWE,SAA3C;AAEH,KAJH,EAKGC,GAAD,IAAS,CACT;AACC,KAPH;AASL,GAjBD;;AAoBAZ,EAAAA,SAAS,CAAC,MAAI;AACdE,IAAAA,IAAI;AAEH,GAHQ,EAGP,EAHO,CAAT,CAtBgB,CA0BhB;AACA;AACA;AACA;AACA;;AAEF,SAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF;AASD;;AAED,eAAeD,QAAf","sourcesContent":["import { ge } from 'faker/lib/locales'\nimport React ,{useEffect}from 'react'\n// import useGeolocation from 'react-hook-geolocation'\n\nfunction location() {\n\n    const load=()=>{\n        // if (!(\"geolocation\" in navigator)) {\n        //     this.textContent = \"Geolocation is not available.\";\n        //     return;\n        //   }\n        //   this.textContent = \"Locating...\";\n    \n          // get position\n          navigator.geolocation.getCurrentPosition(\n            (pos) => {\n                console.log(pos.coords.latitude,pos.coords.longitude)\n              \n            },\n            (err) => {\n            //   this.textContent = err.message;\n            }\n          );\n    }\n\n\n    useEffect(()=>{\n    load()\n\n    },[])\n    // const geolocation = useGeolocation({\n    //     enableHighAccuracy: true,\n    //     maximumAge: 15000,\n    //     timeout: 12000,\n    //   });\n\n  return (\n\n     \n    <div>\n{/* \n        {geolocation.latitude}\n        {geolocation.longitude} */}\n    </div>\n  )\n}\n\nexport default location"]},"metadata":{},"sourceType":"module"}