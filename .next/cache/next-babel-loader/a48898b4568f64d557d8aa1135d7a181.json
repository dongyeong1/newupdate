{"ast":null,"code":"import { all, call, fork, put, takeLatest, take } from 'redux-saga/effects';\nimport { LOGIN_FAIL, LOGIN_REQUEST, LOGIN_SUCCESS, LOGOUT_REQUEST, LOGOUT_SUCCESS, LOGOUT_FAIL, SIGNUP_REQUEST, SIGNUP_SUCCESS, SIGNUP_FAIL } from '../reducers/user';\nimport axios from 'axios';\n\nfunction logInAPI(data) {// return axios.post('http://3.35.239.14/api/login',data)\n}\n\nfunction* login(action) {\n  // const result =yield call(logInAPI,action.data)\n  // console.log('rrrrrrrrrrr',result)\n  try {\n    yield put({\n      type: LOGIN_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield {\n      type: LOGIN_FAIL,\n      data: 'error'\n    };\n  }\n}\n\nfunction logOutAPI(data) {// return axios.post('/logout',data)\n}\n\nfunction* logout() {\n  try {\n    // yield call(logOutAPI)\n    yield put({\n      type: LOGOUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOGOUT_FAIL,\n      error: 'error'\n    });\n  }\n}\n\nfunction signupAPI(data) {// return axios.post('/signup',data)\n}\n\nfunction* signup(action) {\n  try {\n    // const result=yield call(signupAPI,action.data)\n    yield put({\n      type: SIGNUP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGNUP_FAIL,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOGIN_REQUEST, login);\n}\n\nfunction* watchLogout() {\n  yield takeLatest(LOGOUT_REQUEST, logout);\n}\n\nfunction* watchSignup() {\n  yield takeLatest(SIGNUP_REQUEST, signup);\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchLogin), fork(watchLogout), fork(watchSignup)]);\n}","map":{"version":3,"sources":["/Users/dong/CapstonProject/sagas/user.js"],"names":["all","call","fork","put","takeLatest","take","LOGIN_FAIL","LOGIN_REQUEST","LOGIN_SUCCESS","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAIL","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAIL","axios","logInAPI","data","login","action","type","err","logOutAPI","logout","error","signupAPI","signup","response","watchLogin","watchLogout","watchSignup","rootSaga"],"mappings":"AACA,SAASA,GAAT,EAAaC,IAAb,EAAkBC,IAAlB,EAAuBC,GAAvB,EAA2BC,UAA3B,EAAuCC,IAAvC,QAAkD,oBAAlD;AACA,SAAQC,UAAR,EAAoBC,aAApB,EAAkCC,aAAlC,EAAgDC,cAAhD,EAAgEC,cAAhE,EAA+EC,WAA/E,EAA4FC,cAA5F,EAA2GC,cAA3G,EAA0HC,WAA1H,QAA4I,kBAA5I;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAuB,CACnB;AACH;;AAED,UAAUC,KAAV,CAAgBC,MAAhB,EAAuB;AACvB;AACA;AACA,MAAG;AACH,UAAMhB,GAAG,CAAC;AACNiB,MAAAA,IAAI,EAACZ,aADC;AAENS,MAAAA,IAAI,EAACE,MAAM,CAACF;AAFN,KAAD,CAAT;AAIC,GALD,CAKC,OAAMI,GAAN,EAAU;AACP,UAAM;AACFD,MAAAA,IAAI,EAACd,UADH;AAEFW,MAAAA,IAAI,EAAC;AAFH,KAAN;AAIH;AACA;;AAGD,SAASK,SAAT,CAAmBL,IAAnB,EAAwB,CACpB;AACH;;AAED,UAAUM,MAAV,GAAkB;AACd,MAAG;AACC;AACA,UAAMpB,GAAG,CAAC;AACNiB,MAAAA,IAAI,EAACV;AADC,KAAD,CAAT;AAGH,GALD,CAKC,OAAMW,GAAN,EAAU;AACP,UAAMlB,GAAG,CAAC;AACNiB,MAAAA,IAAI,EAACT,WADC;AAENa,MAAAA,KAAK,EAAC;AAFA,KAAD,CAAT;AAKH;AACJ;;AAED,SAASC,SAAT,CAAmBR,IAAnB,EAAwB,CACxB;AACC;;AAED,UAAUS,MAAV,CAAiBP,MAAjB,EAAwB;AAEpB,MAAG;AACC;AAEE,UAAMhB,GAAG,CAAC;AACNiB,MAAAA,IAAI,EAACP;AADC,KAAD,CAAT;AAGH,GANH,CAMG,OAAMQ,GAAN,EAAU;AACP,UAAMlB,GAAG,CAAC;AACNiB,MAAAA,IAAI,EAACN,WADC;AAENU,MAAAA,KAAK,EAACH,GAAG,CAACM,QAAJ,CAAaV;AAFb,KAAD,CAAT;AAKH;AACN;;AAED,UAAUW,UAAV,GAAsB;AAClB,QAAMxB,UAAU,CAACG,aAAD,EAAeW,KAAf,CAAhB;AACH;;AAED,UAAUW,WAAV,GAAuB;AACnB,QAAMzB,UAAU,CAACK,cAAD,EAAgBc,MAAhB,CAAhB;AACH;;AACD,UAAUO,WAAV,GAAuB;AACnB,QAAM1B,UAAU,CAACQ,cAAD,EAAgBc,MAAhB,CAAhB;AACH;;AAED,eAAe,UAAUK,QAAV,GAAoB;AAE/B,QAAM/B,GAAG,CAAC,CACNE,IAAI,CAAC0B,UAAD,CADE,EAEN1B,IAAI,CAAC2B,WAAD,CAFE,EAGN3B,IAAI,CAAC4B,WAAD,CAHE,CAAD,CAAT;AAMH","sourcesContent":["\nimport { all,call,fork,put,takeLatest, take} from 'redux-saga/effects'\nimport {LOGIN_FAIL, LOGIN_REQUEST,LOGIN_SUCCESS,LOGOUT_REQUEST, LOGOUT_SUCCESS,LOGOUT_FAIL, SIGNUP_REQUEST,SIGNUP_SUCCESS,SIGNUP_FAIL} from '../reducers/user'\nimport axios from 'axios'\n\nfunction logInAPI(data){\n    // return axios.post('http://3.35.239.14/api/login',data)\n}\n\nfunction* login(action){\n// const result =yield call(logInAPI,action.data)\n// console.log('rrrrrrrrrrr',result)\ntry{\nyield put({\n    type:LOGIN_SUCCESS,\n    data:action.data\n})\n}catch(err){\n    yield({\n        type:LOGIN_FAIL,\n        data:'error'\n    })\n}\n} \n\n\nfunction logOutAPI(data){\n    // return axios.post('/logout',data)\n}\n\nfunction* logout(){\n    try{\n        // yield call(logOutAPI)\n        yield put({\n            type:LOGOUT_SUCCESS,\n        })\n    }catch(err){\n        yield put({\n            type:LOGOUT_FAIL,\n            error:'error'\n             \n        })\n    }\n} \n\nfunction signupAPI(data){\n// return axios.post('/signup',data)\n}\n\nfunction* signup(action){\n\n    try{\n        // const result=yield call(signupAPI,action.data)\n        \n          yield put({\n              type:SIGNUP_SUCCESS,\n          })\n      }catch(err){\n          yield put({\n              type:SIGNUP_FAIL,\n              error:err.response.data,\n               \n          })\n      }\n}\n\nfunction* watchLogin(){\n    yield takeLatest(LOGIN_REQUEST,login)\n}\n\nfunction* watchLogout(){\n    yield takeLatest(LOGOUT_REQUEST,logout)\n}\nfunction* watchSignup(){\n    yield takeLatest(SIGNUP_REQUEST,signup)\n}\n\nexport default function* rootSaga(){\n\n    yield all([\n        fork(watchLogin),\n        fork(watchLogout),\n        fork(watchSignup),\n    ])\n\n}"]},"metadata":{},"sourceType":"module"}