{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _jsxFileName = \"/Users/dong/CapstonProject/component/map/selectMap.js\",\n    _s = $RefreshSig$(),\n    _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _templateObject5,\n    _templateObject6,\n    _templateObject7;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { GoogleMap, LoadScript } from \"@react-google-maps/api\";\nimport { Polyline, Marker, StreetViewPanorama, MarkerClusterer } from \"@react-google-maps/api\";\nimport { InfoWindow } from \"@react-google-maps/api\";\nimport Router from \"next/router\";\nimport { LOAD_MAP_REQUEST, LOAD_TRACK_MYRANK_REQUEST, LOAD_TRACK_RANK_REQUEST } from \"../../reducers/map\";\nimport { MOVING_MAP_REQUEST, BIKE_MAP_REQUEST, RUNNING_MAP_REQUEST, SEARCH_MAP_REQUEST, LOAD_MY_LOCATION_REQUEST } from \"../../reducers/map\";\nimport { Input, Button, Row, Col, Card, Pagination } from \"antd\";\nimport GeomHandle from \"../GoogleMap\";\nimport SearchList from \"../SearchList\";\nimport Link from \"next/link\";\nimport styled from \"styled-components\";\nimport wrapper from \"../../store/configureStore\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar lat = 1;\nvar lng = 2;\n\nfunction selectMap(_ref) {\n  _s();\n\n  var _this = this;\n\n  _objectDestructuringEmpty(_ref);\n\n  useEffect(function () {\n    console.log('mememememe', me);\n  }, []);\n\n  var _useSelector = useSelector(function (state) {\n    return state.map;\n  }),\n      myLocation = _useSelector.myLocation;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector2.me;\n\n  var _useState = useState(),\n      geom = _useState[0],\n      setGeom = _useState[1];\n\n  var Search = Input.Search;\n\n  var _useState2 = useState(false),\n      loadMap = _useState2[0],\n      setLoadMap = _useState2[1];\n\n  function getLocation() {\n    if (navigator.geolocation) {\n      // GPS를 지원하면\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setGeom({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n        setLoadMap(true);\n      }, function (error) {\n        console.error(error);\n      }, {\n        enableHighAccuracy: false,\n        maximumAge: 0,\n        timeout: Infinity\n      });\n    } else {\n      alert(\"GPS를 지원하지 않습니다\");\n    }\n  }\n\n  var _useState3 = useState(false),\n      isState = _useState3[0],\n      setIsState = _useState3[1];\n\n  var _useState4 = useState(\"B\"),\n      mapState = _useState4[0],\n      setMapState = _useState4[1];\n\n  var dispatch = useDispatch(); // const mapContainerStyle = {\n  // marginTop:60,\n  // height: \"720px\",\n  // width: \"1000px\"\n  // };\n\n  var mapContainerStyle = {\n    // Google Map 스타일\n    width: \"88%\",\n    height: \"85vh\",\n    // margin: \"0 5%\",\n    borderRadius: \"15px\",\n    position: \"relative\",\n    left: \"8%\"\n  };\n\n  var _useSelector3 = useSelector(function (state) {\n    return state.map;\n  }),\n      searchMap = _useSelector3.searchMap; // const [geom ,setGeom]=useState({lat:35.969997373905, lng: 128.45170755523503})\n\n\n  var _useState5 = useState(null),\n      mapref = _useState5[0],\n      setMapRef = _useState5[1];\n\n  useEffect(function () {\n    getLocation();\n\n    if (mapref) {\n      dispatch({\n        type: LOAD_MY_LOCATION_REQUEST,\n        data: {\n          north: {\n            lat: mapref.getBounds().getNorthEast().lat(),\n            lng: mapref.getBounds().getNorthEast().lng()\n          },\n          south: {\n            lat: mapref.getBounds().getSouthWest().lat(),\n            lng: mapref.getBounds().getSouthWest().lng()\n          },\n          event: mapState\n        }\n      });\n    }\n  }, [loadMap]);\n\n  var handleOnLoad = function handleOnLoad(map) {\n    setMapRef(map);\n    console.log(\"load됨\");\n  };\n\n  var handleCenterChanged = function handleCenterChanged() {\n    dispatch({\n      type: MOVING_MAP_REQUEST,\n      data: {\n        north: {\n          lat: mapref.getBounds().getNorthEast().lat(),\n          lng: mapref.getBounds().getNorthEast().lng()\n        },\n        south: {\n          lat: mapref.getBounds().getSouthWest().lat(),\n          lng: mapref.getBounds().getSouthWest().lng()\n        },\n        event: mapState\n      }\n    });\n  }; //////markercluseter\n\n\n  var optionss = {\n    imagePath: \"https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m\" // so you must have m1.png, m2.png, m3.png, m4.png, m5.png and m6.png in that folder\n\n  };\n\n  function createKey(location) {\n    return location.lat + location.lng;\n  } //////markercluseter\n  ///주소검색\n\n\n  var _useSelector4 = useSelector(function (state) {\n    return state.map;\n  }),\n      searchmapLoading = _useSelector4.searchmapLoading;\n\n  var handleButton = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var currentAddr, _yield$GeomHandle, _lat, _lng;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              currentAddr = document.getElementById(\"address\").value;\n\n              if (!currentAddr) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 4;\n              return GeomHandle(currentAddr);\n\n            case 4:\n              _yield$GeomHandle = _context.sent;\n              _lat = _yield$GeomHandle.lat;\n              _lng = _yield$GeomHandle.lng;\n              setGeom({\n                lat: _lat,\n                lng: _lng\n              });\n              dispatch({\n                type: SEARCH_MAP_REQUEST,\n                data: {\n                  north: {\n                    lat: mapref.getBounds().getNorthEast().lat(),\n                    lng: mapref.getBounds().getNorthEast().lng()\n                  },\n                  south: {\n                    lat: mapref.getBounds().getSouthWest().lat(),\n                    lng: mapref.getBounds().getSouthWest().lng()\n                  },\n                  event: mapState\n                }\n              });\n              console.log(\"aaa\", searchMap);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleButton() {\n      return _ref2.apply(this, arguments);\n    };\n  }(); //주소검색\n  //polyline\n  //   const [propsPosition,setPropsPosition]=useState()\n\n\n  var _useState6 = useState(),\n      propsId = _useState6[0],\n      setPropsId = _useState6[1];\n\n  var _useState7 = useState({\n    lat: \"\",\n    lng: \"\"\n  }),\n      infoPosition = _useState7[0],\n      setInfoPosition = _useState7[1];\n\n  var _useState8 = useState(false),\n      target = _useState8[0],\n      setTarget = _useState8[1];\n\n  var _useState9 = useState(Array.from({\n    length: searchMap.length\n  }, function () {\n    return 3;\n  })),\n      strokeWeight = _useState9[0],\n      setStrokeWeight = _useState9[1];\n\n  var strokeWeights = Array.from({\n    length: searchMap.length\n  }, function () {\n    return 3;\n  });\n\n  var polylineClick = function polylineClick(positionData) {\n    setInfoPosition({\n      lat: positionData.gps.coordinates[3][1],\n      lng: positionData.gps.coordinates[3][0]\n    });\n    console.log(\"qqq\", positionData);\n    setPropsId(positionData._id); // setPropsPosition(positionData)\n\n    setTarget(true);\n  };\n\n  function mouseOver(index) {\n    strokeWeights[index] = 10;\n    setStrokeWeight(strokeWeights);\n  }\n\n  function mouseOut(index) {\n    strokeWeights[index] = 3;\n    setStrokeWeight(strokeWeights);\n  } //polyline\n  //infoWindow\n\n\n  var closeClick = function closeClick() {\n    setTarget(false);\n  };\n\n  var divStyle = {\n    background: \"white\",\n    border: \"1px solid #ccc\",\n    padding: 15\n  };\n\n  var oneRoute = function oneRoute() {\n    window.location.href = \"/Route/\" + propsId; // dispatch({\n    //   type: LOAD_MAP_REQUEST,\n    //   data: propsId,\n    // });\n    // dispatch({\n    //   type:LOAD_TRACK_MYRANK_REQUEST,\n    //   data: propsId,\n    // })\n    // dispatch({\n    //   type:LOAD_TRACK_RANK_REQUEST,\n    //   data:propsId,\n    // })\n    // Router.push({\n    //   pathname: \"/Route/[id]\",\n    //   query: { id: propsId,\n    //     // userId:me.id\n    //   },\n    // });\n\n    console.log(\"dong\", searchMap);\n  }; //infoWindow\n  //   const [mapState,setMapState]=useState()\n  // const {mapState}=useSelector((state)=>state.map)\n\n\n  var bikeSelectMap = function bikeSelectMap() {\n    setMapState(\"B\");\n    setIsState(true);\n  };\n\n  var runningSelectMap = function runningSelectMap() {\n    setMapState(\"R\");\n    setIsState(true);\n  };\n\n  useEffect(function () {\n    if (mapState === \"B\" && isState === true) {\n      dispatch({\n        type: BIKE_MAP_REQUEST,\n        data: {\n          event: mapState,\n          north: {\n            lat: mapref.getBounds().getNorthEast().lat(),\n            lng: mapref.getBounds().getNorthEast().lng()\n          },\n          south: {\n            lat: mapref.getBounds().getSouthWest().lat(),\n            lng: mapref.getBounds().getSouthWest().lng()\n          }\n        }\n      });\n      setIsState(false);\n    } else if (mapState === \"R\" && isState === true) {\n      dispatch({\n        type: RUNNING_MAP_REQUEST,\n        data: {\n          event: mapState,\n          north: {\n            lat: mapref.getBounds().getNorthEast().lat(),\n            lng: mapref.getBounds().getNorthEast().lng()\n          },\n          south: {\n            lat: mapref.getBounds().getSouthWest().lat(),\n            lng: mapref.getBounds().getSouthWest().lng()\n          }\n        }\n      });\n      setIsState(false);\n    }\n  }, [mapState, isState]);\n\n  var _useState10 = useState(false),\n      btn = _useState10[0],\n      setBtn = _useState10[1];\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(CardDiv, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(LeftDiv, {\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              children: \"\\uCF54\\uC2A4\\uCC3E\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Search, {\n                loading: searchmapLoading,\n                onPressEnter: handleButton,\n                placeholder: \"\\uCF54\\uC2A4\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n                enterButton: true // allowClear\n                ,\n                icon: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 25\n                }, this),\n                id: \"address\",\n                size: \"large\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn1\",\n                  onClick: bikeSelectMap,\n                  children: \"\\uC790\\uC804\\uAC70\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn2\",\n                  onClick: runningSelectMap,\n                  children: \"\\uB2EC\\uB9AC\\uAE30\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this), searchMap.map(function (p, index) {\n              return (\n                /*#__PURE__*/\n                // <Col span={24}>\n                _jsxDEV(SearchList, {\n                  setInfoPosition: setInfoPosition,\n                  setPropsId: setPropsId,\n                  setTarget: setTarget,\n                  index: index,\n                  setStrokeWeight: setStrokeWeight,\n                  list: p\n                }, p.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 17\n                }, _this) // </Col>\n\n              );\n            }), /*#__PURE__*/_jsxDEV(Page, {\n              defaultCurrent: 1,\n              defaultPageSize: 3 // total={searchMap.lenth}\n              ,\n              total: 10 // onChange={onChangePage}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(LoadScript, {\n            googleMapsApiKey: \"AIzaSyAYsO2CGL0YCjMoLk29eyitFC2PIJnJbYE\",\n            children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n              id: \"marker-example\",\n              mapContainerStyle: mapContainerStyle,\n              zoom: 13,\n              center: geom,\n              onLoad: handleOnLoad,\n              onDragEnd: handleCenterChanged // onZoomChanged={handleCenterChanged}\n              ,\n              children: [/*#__PURE__*/_jsxDEV(MarkerClusterer, {\n                options: optionss,\n                children: function children(clusterer) {\n                  return searchMap.map(function (p) {\n                    return /*#__PURE__*/_jsxDEV(Marker, {\n                      position: {\n                        lat: p.start_latlng[1],\n                        lng: p.start_latlng[0]\n                      },\n                      clusterer: clusterer,\n                      icon: {\n                        scaledSize: new google.maps.Size(30, 30)\n                      }\n                    }, createKey(p), false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 373,\n                      columnNumber: 23\n                    }, _this);\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 17\n              }, this), searchMap.map(function (m, index) {\n                return /*#__PURE__*/_jsxDEV(Polyline, {\n                  onRightClick: function onRightClick() {\n                    return polylineClick(m);\n                  },\n                  onMouseOver: function onMouseOver() {\n                    return mouseOver(index);\n                  },\n                  onMouseOut: function onMouseOut() {\n                    return mouseOut(index);\n                  },\n                  options: {\n                    strokeWeight: strokeWeight[index],\n                    clickable: true,\n                    visible: true,\n                    strokeColor: \"#FF0000\",\n                    fillColor: \"#FF0000\"\n                  },\n                  path: m.gps.coordinates.map(function (p) {\n                    return {\n                      lat: p[1],\n                      lng: p[0]\n                    };\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 19\n                }, _this);\n              }), target && /*#__PURE__*/_jsxDEV(InfoWindow, {\n                position: infoPosition,\n                onCloseClick: closeClick,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: divStyle,\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"\\uB3D9\\uC601\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 410,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: oneRoute,\n                    children: \"\\uC0C1\\uC138\\uBCF4\\uAE30\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 416,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 5\n  }, this);\n}\n\n_s(selectMap, \"1lf6RRIbHvbqNzVOS3k07c9hnO4=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useSelector, useSelector];\n});\n\nexport default selectMap;\nexport var getStaticProps = wrapper.getStaticProps( /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(context) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            context.store.dispatch({\n              type: LOAD_MY_LOCATION_REQUEST,\n              data: {\n                north: {\n                  lat: mapref.getBounds().getNorthEast().lat(),\n                  lng: mapref.getBounds().getNorthEast().lng()\n                },\n                south: {\n                  lat: mapref.getBounds().getSouthWest().lat(),\n                  lng: mapref.getBounds().getSouthWest().lng()\n                },\n                event: mapState\n              }\n            });\n            context.store.dispatch(END);\n            _context2.next = 4;\n            return context.store.sagaTask.toPromise();\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}());\nvar Container = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  // \\uC804\\uCCB4 div\\n  width: 100%;\\n  // height: 100%;\\n\\n  .ant-input {\\n    border-radius: 15px;\\n    border-radius: 1px solid #1890ff;\\n  }\\n\\n  .ant-input-group-wrapper {\\n    margin-bottom: 20px;\\n  }\\n\\n  .ant-input-group {\\n    width: 90%;\\n    width: 100%;\\n    // margin: 0 auto;\\n  }\\n\\n  .ant-input-search {\\n    border-radius: 9px !important;\\n    // position: relative;\\n    // right: 15px;\\n    // z-index: 1;\\n  }\\n\\n  .ant-input-search-button {\\n    // border-radius: 55% !important;\\n    // border-top-right-radius: 9px !important;\\n    // border-bottom-right-radius: 9px !important;\\n  }\\n\\n  .ant-card {\\n    width: 100%;\\n    border-radius: 9px;\\n    box-shadow: 0 1px 2px -2px rgb(0 0 0 / 16%), 0 3px 6px 0 rgb(0 0 0 / 12%);\\n    margin: 0;\\n  }\\n\"])));\n_c = Container;\nvar mapContainerStyle = {\n  // Google Map 스타일\n  width: \"100%\",\n  height: \"80vh\",\n  borderRadius: \"15px\",\n  padding: \"0 30px\"\n};\nexport var CardDiv = styled(Card)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  width: 100%;\\n\\n  border-radius: 15px;\\n  box-shadow: 0 1px 2px -2px rgb(0 0 0 / 16%), 0 3px 6px 0 rgb(0 0 0 / 12%);\\n\\n  .ant-card-body {\\n    padding: 10px;\\n  }\\n\"]))); // const RightDiv = styled.div``;\n\n_c2 = CardDiv;\nvar LeftDiv = styled.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  display: inline-block;\\n  position: relative;\\n  width: 100%;\\n  height: 100%;\\n  padding: 0 5%;\\n\"])));\n_c3 = LeftDiv;\nexport var Title = styled.p(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n  font-size: 30px;\\n  font-weight: bold;\\n  margin: 20px auto;\\n  margin-top: 0;\\n\"])));\n_c4 = Title;\nvar Page = styled(Pagination)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  left: 34%;\\n  bottom: 1%;\\n  margin-top: 32px;\\n  text-align: center;\\n\"])));\n_c5 = Page;\nvar Buttons = styled.div(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n  display: inline-block;\\n  width: 90%;\\n  width: 100%;\\n  margin-bottom: 20px;\\n\\n  Button {\\n    height: 33px;\\n    border-radius: 15px;\\n    margin-right: 10px;\\n  }\\n\\n  Button:hover {\\n    background: #1683e8;\\n    border-color: #1683e8;\\n    color: #fff;\\n  }\\n\\n  Button:focus {\\n    background: #1683e8;\\n    color: #fff;\\n  }\\n\"])));\n_c6 = Buttons;\nvar RowDiv = styled(Row)(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n  display: inline-block;\\n  width: 100%;\\n  height: 75%;\\n  // border: 1px solid grey;\\n  padding-bottom: 30px;\\n\"])));\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"CardDiv\");\n$RefreshReg$(_c3, \"LeftDiv\");\n$RefreshReg$(_c4, \"Title\");\n$RefreshReg$(_c5, \"Page\");\n$RefreshReg$(_c6, \"Buttons\");","map":{"version":3,"sources":["/Users/dong/CapstonProject/component/map/selectMap.js"],"names":["React","useState","useEffect","useDispatch","useSelector","GoogleMap","LoadScript","Polyline","Marker","StreetViewPanorama","MarkerClusterer","InfoWindow","Router","LOAD_MAP_REQUEST","LOAD_TRACK_MYRANK_REQUEST","LOAD_TRACK_RANK_REQUEST","MOVING_MAP_REQUEST","BIKE_MAP_REQUEST","RUNNING_MAP_REQUEST","SEARCH_MAP_REQUEST","LOAD_MY_LOCATION_REQUEST","Input","Button","Row","Col","Card","Pagination","GeomHandle","SearchList","Link","styled","wrapper","SearchOutlined","lat","lng","selectMap","console","log","me","state","map","myLocation","user","geom","setGeom","Search","loadMap","setLoadMap","getLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","enableHighAccuracy","maximumAge","timeout","Infinity","alert","isState","setIsState","mapState","setMapState","dispatch","mapContainerStyle","width","height","borderRadius","left","searchMap","mapref","setMapRef","type","data","north","getBounds","getNorthEast","south","getSouthWest","event","handleOnLoad","handleCenterChanged","optionss","imagePath","createKey","location","searchmapLoading","handleButton","currentAddr","document","getElementById","value","propsId","setPropsId","infoPosition","setInfoPosition","target","setTarget","Array","from","length","strokeWeight","setStrokeWeight","strokeWeights","polylineClick","positionData","gps","coordinates","_id","mouseOver","index","mouseOut","closeClick","divStyle","background","border","padding","oneRoute","window","href","bikeSelectMap","runningSelectMap","btn","setBtn","p","id","clusterer","start_latlng","scaledSize","google","maps","Size","m","clickable","visible","strokeColor","fillColor","getStaticProps","context","store","END","sagaTask","toPromise","Container","div","CardDiv","LeftDiv","Title","Page","Buttons","RowDiv"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { GoogleMap, LoadScript } from \"@react-google-maps/api\";\nimport {\n  Polyline,\n  Marker,\n  StreetViewPanorama,\n  MarkerClusterer,\n} from \"@react-google-maps/api\";\nimport { InfoWindow } from \"@react-google-maps/api\";\nimport Router from \"next/router\";\nimport { LOAD_MAP_REQUEST, LOAD_TRACK_MYRANK_REQUEST, LOAD_TRACK_RANK_REQUEST } from \"../../reducers/map\";\nimport {\n  MOVING_MAP_REQUEST,\n  BIKE_MAP_REQUEST,\n  RUNNING_MAP_REQUEST,\n  SEARCH_MAP_REQUEST,\n  LOAD_MY_LOCATION_REQUEST,\n} from \"../../reducers/map\";\nimport { Input, Button, Row, Col, Card, Pagination } from \"antd\";\nimport GeomHandle from \"../GoogleMap\";\nimport SearchList from \"../SearchList\";\nimport Link from \"next/link\";\nimport styled from \"styled-components\";\nimport wrapper from \"../../store/configureStore\";\nimport { SearchOutlined } from \"@ant-design/icons\";\n\nvar lat = 1;\nvar lng = 2;\n\nfunction selectMap({}) {\n  useEffect(()=>{\n    console.log('mememememe',me)\n  },[])\n  const { myLocation } = useSelector((state) => state.map);\n\n  const {me}=useSelector((state)=>state.user)\n  const [geom, setGeom] = useState();\n  const { Search } = Input;\n\n  const [loadMap, setLoadMap] = useState(false);\n\n  function getLocation() {\n    if (navigator.geolocation) {\n      // GPS를 지원하면\n      navigator.geolocation.getCurrentPosition(\n        function (position) {\n          setGeom({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          });\n          setLoadMap(true);\n        },\n        function (error) {\n          console.error(error);\n        },\n        {\n          enableHighAccuracy: false,\n          maximumAge: 0,\n          timeout: Infinity,\n        }\n      );\n    } else {\n      alert(\"GPS를 지원하지 않습니다\");\n    }\n  }\n\n  const [isState, setIsState] = useState(false);\n  const [mapState, setMapState] = useState(\"B\");\n\n  const dispatch = useDispatch();\n\n  // const mapContainerStyle = {\n  // marginTop:60,\n  // height: \"720px\",\n  // width: \"1000px\"\n  // };\n  const mapContainerStyle = {\n    // Google Map 스타일\n    width: \"88%\",\n    height: \"85vh\",\n    // margin: \"0 5%\",\n    borderRadius: \"15px\",\n    position: \"relative\",\n    left: \"8%\",\n  };\n\n  const { searchMap } = useSelector((state) => state.map);\n\n  // const [geom ,setGeom]=useState({lat:35.969997373905, lng: 128.45170755523503})\n  const [mapref, setMapRef] = useState(null);\n\n  useEffect(() => {\n    getLocation();\n    if (mapref) {\n      dispatch({\n        type: LOAD_MY_LOCATION_REQUEST,\n        data: {\n          north: {\n            lat: mapref.getBounds().getNorthEast().lat(),\n            lng: mapref.getBounds().getNorthEast().lng(),\n          },\n          south: {\n            lat: mapref.getBounds().getSouthWest().lat(),\n            lng: mapref.getBounds().getSouthWest().lng(),\n          },\n          event: mapState,\n        },\n      });\n    }\n  }, [loadMap]);\n\n  const handleOnLoad = (map) => {\n    setMapRef(map);\n    console.log(\"load됨\");\n  };\n\n  const handleCenterChanged = () => {\n    dispatch({\n      type: MOVING_MAP_REQUEST,\n      data: {\n        north: {\n          lat: mapref.getBounds().getNorthEast().lat(),\n          lng: mapref.getBounds().getNorthEast().lng(),\n        },\n        south: {\n          lat: mapref.getBounds().getSouthWest().lat(),\n          lng: mapref.getBounds().getSouthWest().lng(),\n        },\n        event: mapState,\n      },\n    });\n  };\n\n  //////markercluseter\n\n  const optionss = {\n    imagePath:\n      \"https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m\", // so you must have m1.png, m2.png, m3.png, m4.png, m5.png and m6.png in that folder\n  };\n\n  function createKey(location) {\n    return location.lat + location.lng;\n  }\n\n  //////markercluseter\n\n  ///주소검색\n\n  const { searchmapLoading } = useSelector((state) => state.map);\n\n  const handleButton = async () => {\n    const currentAddr = document.getElementById(\"address\").value;\n    if (currentAddr) {\n      const { lat, lng } = await GeomHandle(currentAddr);\n      setGeom({ lat: lat, lng: lng });\n\n      dispatch({\n        type: SEARCH_MAP_REQUEST,\n        data: {\n          north: {\n            lat: mapref.getBounds().getNorthEast().lat(),\n            lng: mapref.getBounds().getNorthEast().lng(),\n          },\n          south: {\n            lat: mapref.getBounds().getSouthWest().lat(),\n            lng: mapref.getBounds().getSouthWest().lng(),\n          },\n          event: mapState,\n        },\n      });\n      console.log(\"aaa\", searchMap);\n    }\n  };\n\n  //주소검색\n\n  //polyline\n\n  //   const [propsPosition,setPropsPosition]=useState()\n\n  const [propsId, setPropsId] = useState();\n\n  const [infoPosition, setInfoPosition] = useState({\n    lat: \"\",\n    lng: \"\",\n  });\n\n  const [target, setTarget] = useState(false);\n\n  const [strokeWeight, setStrokeWeight] = useState(\n    Array.from({ length: searchMap.length }, () => 3)\n  );\n  const strokeWeights = Array.from({ length: searchMap.length }, () => 3);\n\n  const polylineClick = (positionData) => {\n    setInfoPosition({\n      lat: positionData.gps.coordinates[3][1],\n      lng: positionData.gps.coordinates[3][0],\n    });\n    console.log(\"qqq\", positionData);\n    setPropsId(positionData._id);\n    // setPropsPosition(positionData)\n    setTarget(true);\n  };\n\n  function mouseOver(index) {\n    strokeWeights[index] = 10;\n    setStrokeWeight(strokeWeights);\n  }\n\n  function mouseOut(index) {\n    strokeWeights[index] = 3;\n    setStrokeWeight(strokeWeights);\n  }\n\n  //polyline\n\n  //infoWindow\n  const closeClick = () => {\n    setTarget(false);\n  };\n\n  const divStyle = {\n    background: `white`,\n    border: `1px solid #ccc`,\n    padding: 15,\n  };\n\n  const oneRoute = () => {\n    window.location.href=\"/Route/\"+propsId\n    // dispatch({\n    //   type: LOAD_MAP_REQUEST,\n    //   data: propsId,\n    // });\n    // dispatch({\n    //   type:LOAD_TRACK_MYRANK_REQUEST,\n    //   data: propsId,\n    // })\n    // dispatch({\n    //   type:LOAD_TRACK_RANK_REQUEST,\n    //   data:propsId,\n    // })\n\n    // Router.push({\n    //   pathname: \"/Route/[id]\",\n    //   query: { id: propsId,\n    //     // userId:me.id\n    //   },\n    // });\n\n    console.log(\"dong\", searchMap);\n  };\n\n  //infoWindow\n\n  //   const [mapState,setMapState]=useState()\n  // const {mapState}=useSelector((state)=>state.map)\n  const bikeSelectMap = () => {\n    setMapState(\"B\");\n    setIsState(true);\n  };\n\n  const runningSelectMap = () => {\n    setMapState(\"R\");\n    setIsState(true);\n  };\n\n  useEffect(() => {\n    if (mapState === \"B\" && isState === true) {\n      dispatch({\n        type: BIKE_MAP_REQUEST,\n        data: {\n          event: mapState,\n          north: {\n            lat: mapref.getBounds().getNorthEast().lat(),\n            lng: mapref.getBounds().getNorthEast().lng(),\n          },\n          south: {\n            lat: mapref.getBounds().getSouthWest().lat(),\n            lng: mapref.getBounds().getSouthWest().lng(),\n          },\n        },\n      });\n      setIsState(false);\n    } else if (mapState === \"R\" && isState === true) {\n      dispatch({\n        type: RUNNING_MAP_REQUEST,\n        data: {\n          event: mapState,\n          north: {\n            lat: mapref.getBounds().getNorthEast().lat(),\n            lng: mapref.getBounds().getNorthEast().lng(),\n          },\n          south: {\n            lat: mapref.getBounds().getSouthWest().lat(),\n            lng: mapref.getBounds().getSouthWest().lng(),\n          },\n        },\n      });\n      setIsState(false);\n    }\n  }, [mapState, isState]);\n\n  const [btn, setBtn] = useState(false);\n\n  return (\n    <Container>\n      <CardDiv>\n        <Row>\n          <Col span={12}>\n            <LeftDiv>\n              <Title>코스찾기</Title>\n              <div>\n                <Search\n                  loading={searchmapLoading}\n                  onPressEnter={handleButton}\n                  placeholder=\"코스를 입력해주세요\"\n                  enterButton\n                  // allowClear\n                  icon={<SearchOutlined />}\n                  id=\"address\"\n                  size=\"large\"\n                />\n                <Buttons>\n                  <Button className=\"btn1\" onClick={bikeSelectMap}>\n                    자전거\n                  </Button>\n                  <Button className=\"btn2\" onClick={runningSelectMap}>\n                    달리기\n                  </Button>\n                </Buttons>\n              </div>\n              {/* <RowDiv gutter={[0, 16]}> */}\n              {searchMap.map((p, index) => (\n                // <Col span={24}>\n                <SearchList\n                  setInfoPosition={setInfoPosition}\n                  setPropsId={setPropsId}\n                  setTarget={setTarget}\n                  index={index}\n                  setStrokeWeight={setStrokeWeight}\n                  list={p}\n                  key={p.id}\n                ></SearchList>\n                // </Col>\n              ))}\n              {/* </RowDiv> */}\n              <Page\n                defaultCurrent={1}\n                defaultPageSize={3}\n                // total={searchMap.lenth}\n                total={10}\n                // onChange={onChangePage}\n              />\n            </LeftDiv>\n          </Col>\n\n          <Col span={12}>\n            <LoadScript googleMapsApiKey=\"AIzaSyAYsO2CGL0YCjMoLk29eyitFC2PIJnJbYE\">\n              <GoogleMap\n                id=\"marker-example\"\n                mapContainerStyle={mapContainerStyle}\n                zoom={13}\n                center={geom}\n                onLoad={handleOnLoad}\n                onDragEnd={handleCenterChanged}\n                // onZoomChanged={handleCenterChanged}\n              >\n                <MarkerClusterer options={optionss}>\n                  {(clusterer) =>\n                    searchMap.map((p) => (\n                      <Marker\n                        key={createKey(p)}\n                        position={{\n                          lat: p.start_latlng[1],\n                          lng: p.start_latlng[0],\n                        }}\n                        clusterer={clusterer}\n                        icon={{\n                          scaledSize: new google.maps.Size(30, 30),\n                        }}\n                      />\n                    ))\n                  }\n                </MarkerClusterer>\n\n                {searchMap.map((m, index) => (\n                  <Polyline\n                    onRightClick={() => polylineClick(m)}\n                    onMouseOver={() => mouseOver(index)}\n                    onMouseOut={() => mouseOut(index)}\n                    options={{\n                      strokeWeight: strokeWeight[index],\n                      clickable: true,\n                      visible: true,\n                      strokeColor: \"#FF0000\",\n                      fillColor: \"#FF0000\",\n                    }}\n                    path={m.gps.coordinates.map((p) => ({\n                      lat: p[1],\n                      lng: p[0],\n                    }))}\n                  ></Polyline>\n                ))}\n\n                {target && (\n                  <InfoWindow position={infoPosition} onCloseClick={closeClick}>\n                    <div style={divStyle}>\n                      <h1>동영</h1>\n                      {/* <Link href={{\n                        pathname:'/Route/[id]',\n                        query: {id:propsId},\n                    }}><a>상세보기</a></Link>\n                     */}\n                      <button onClick={oneRoute}>상세보기</button>\n                      {/* <a href=\"@{/Route/}\" ></a> */}\n                    </div>\n                  </InfoWindow>\n                )}\n              </GoogleMap>\n            </LoadScript>\n          </Col>\n        </Row>\n      </CardDiv>\n    </Container>\n  );\n}\n\nexport default selectMap;\n\nexport const getStaticProps = wrapper.getStaticProps(async (context) => {\n  context.store.dispatch({\n    type: LOAD_MY_LOCATION_REQUEST,\n    data: {\n      north: {\n        lat: mapref.getBounds().getNorthEast().lat(),\n        lng: mapref.getBounds().getNorthEast().lng(),\n      },\n      south: {\n        lat: mapref.getBounds().getSouthWest().lat(),\n        lng: mapref.getBounds().getSouthWest().lng(),\n      },\n      event: mapState,\n    },\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\n\nconst Container = styled.div`\n  // 전체 div\n  width: 100%;\n  // height: 100%;\n\n  .ant-input {\n    border-radius: 15px;\n    border-radius: 1px solid #1890ff;\n  }\n\n  .ant-input-group-wrapper {\n    margin-bottom: 20px;\n  }\n\n  .ant-input-group {\n    width: 90%;\n    width: 100%;\n    // margin: 0 auto;\n  }\n\n  .ant-input-search {\n    border-radius: 9px !important;\n    // position: relative;\n    // right: 15px;\n    // z-index: 1;\n  }\n\n  .ant-input-search-button {\n    // border-radius: 55% !important;\n    // border-top-right-radius: 9px !important;\n    // border-bottom-right-radius: 9px !important;\n  }\n\n  .ant-card {\n    width: 100%;\n    border-radius: 9px;\n    box-shadow: 0 1px 2px -2px rgb(0 0 0 / 16%), 0 3px 6px 0 rgb(0 0 0 / 12%);\n    margin: 0;\n  }\n`;\n\nconst mapContainerStyle = {\n  // Google Map 스타일\n  width: \"100%\",\n  height: \"80vh\",\n  borderRadius: \"15px\",\n  padding: \"0 30px\",\n};\n\nexport const CardDiv = styled(Card)`\n  width: 100%;\n\n  border-radius: 15px;\n  box-shadow: 0 1px 2px -2px rgb(0 0 0 / 16%), 0 3px 6px 0 rgb(0 0 0 / 12%);\n\n  .ant-card-body {\n    padding: 10px;\n  }\n`;\n\n// const RightDiv = styled.div``;\n\nconst LeftDiv = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  padding: 0 5%;\n`;\n\nexport const Title = styled.p`\n  font-size: 30px;\n  font-weight: bold;\n  margin: 20px auto;\n  margin-top: 0;\n`;\n\nconst Page = styled(Pagination)`\n  position: absolute;\n  left: 34%;\n  bottom: 1%;\n  margin-top: 32px;\n  text-align: center;\n`;\n\nconst Buttons = styled.div`\n  display: inline-block;\n  width: 90%;\n  width: 100%;\n  margin-bottom: 20px;\n\n  Button {\n    height: 33px;\n    border-radius: 15px;\n    margin-right: 10px;\n  }\n\n  Button:hover {\n    background: #1683e8;\n    border-color: #1683e8;\n    color: #fff;\n  }\n\n  Button:focus {\n    background: #1683e8;\n    color: #fff;\n  }\n`;\n\nconst RowDiv = styled(Row)`\n  display: inline-block;\n  width: 100%;\n  height: 75%;\n  // border: 1px solid grey;\n  padding-bottom: 30px;\n`;"]},"metadata":{},"sourceType":"module"}