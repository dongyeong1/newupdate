{"ast":null,"code":"var _jsxFileName = \"/Users/dong/CapstonProject/pages/polyline.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport { Polyline, Marker, StreetViewPanorama, MarkerClusterer } from '@react-google-maps/api';\nimport BikeChart from '../component/BikeChart'; // import RecordElevation from '../component/RecordElavation'\n\nconst mapContainerStyle = {\n  height: \"400px\",\n  width: \"800px\"\n};\nconst center = {\n  lat: 35.969997373905,\n  lng: 128.45170755523503\n};\n\nconst onLoad = polyline => {\n  console.log('polyline: ', polyline);\n};\n\nconst pathsss = {\n  'one': [{\n    lat: 35.24731788471166,\n    lng: 128.86906207420088\n  }, {\n    lat: 35.260354548127424,\n    lng: 128.81198466603703\n  }]\n};\nconst path = [[{\n  lat: 35.969997373905,\n  lng: 128.45170755523503\n}, {\n  lat: 35.89580489690752,\n  lng: 128.62238368221892\n}], [{\n  lat: 35.24731788471166,\n  lng: 128.86906207420088\n}, {\n  lat: 35.260354548127424,\n  lng: 128.81198466603703\n}]];\nconst markerPosition = [{\n  lat: 35.89580489690752,\n  lng: 128.62238368221892\n}, {\n  lat: 35.249701087314094,\n  lng: 128.860908159053\n}];\nconst options = {\n  strokeColor: '#FF0000',\n  strokeOpacity: 0.8,\n  strokeWeight: 2,\n  fillColor: '#FF0000',\n  fillOpacity: 0.35,\n  clickable: false,\n  draggable: false,\n  editable: false,\n  visible: true,\n  radius: 30000,\n  //-27부터 호주 시작해서 점찍고 점찍고 한다\n  paths: [{\n    lat: 35.969997373905,\n    lng: 128.45170755523503\n  }, {\n    lat: 35.89580489690752,\n    lng: 128.62238368221892\n  }, {\n    lat: 35.24731788471166,\n    lng: 128.86906207420088\n  }, {\n    lat: 35.260354548127424,\n    lng: 128.81198466603703\n  }],\n  zIndex: 1\n};\n\nfunction createKey(location) {\n  return location.lat + location.lng;\n}\n\nconst optionss = {\n  imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m' // so you must have m1.png, m2.png, m3.png, m4.png, m5.png and m6.png in that folder\n\n};\n\nfunction polyline() {\n  const myLatLng = {\n    lat: -25.363,\n    lng: 131.044\n  }; // const map = new google.maps.Map(document.getElementById(\"map\"), {\n  //   zoom: 4,\n  //   center: myLatLng,\n  // });\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, __jsx(LoadScript, {\n    googleMapsApiKey: \"AIzaSyAYsO2CGL0YCjMoLk29eyitFC2PIJnJbYE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, __jsx(GoogleMap, {\n    id: \"marker-example\",\n    mapContainerStyle: mapContainerStyle,\n    zoom: 10,\n    center: center,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, __jsx(MarkerClusterer, {\n    options: optionss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 1\n    }\n  }, clusterer => markerPosition.map(p => __jsx(Marker, {\n    key: createKey(p),\n    position: p,\n    clusterer: clusterer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }))))), path.map(m => {\n    // <Polyline onLoad={onLoad}  options={options} path={m}></Polyline>\n    __jsx(BikeChart, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    });\n  }));\n}\n\nexport default React.memo(polyline);","map":{"version":3,"sources":["/Users/dong/CapstonProject/pages/polyline.js"],"names":["GoogleMap","LoadScript","Polyline","Marker","StreetViewPanorama","MarkerClusterer","BikeChart","mapContainerStyle","height","width","center","lat","lng","onLoad","polyline","console","log","pathsss","path","markerPosition","options","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","clickable","draggable","editable","visible","radius","paths","zIndex","createKey","location","optionss","imagePath","myLatLng","clusterer","map","p","m","React","memo"],"mappings":"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","sourcesContent":["import { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport { Polyline ,Marker,StreetViewPanorama,MarkerClusterer} from '@react-google-maps/api';\nimport BikeChart from '../component/BikeChart';\n// import RecordElevation from '../component/RecordElavation'\n\nconst mapContainerStyle = {\n  height: \"400px\",\n  width: \"800px\"\n};\n\nconst center = {lat:  35.969997373905, lng: 128.45170755523503};\n\nconst onLoad = polyline => {\n  console.log('polyline: ', polyline)\n};\n\nconst pathsss = {\n    \n  \n       'one': [ {lat:  35.24731788471166,  lng: 128.86906207420088},\n   \n     {lat: 35.260354548127424,  lng:128.81198466603703}\n     ],\n\n\n    \n  \n};\n\nconst path = [\n[\n    {lat:  35.969997373905, lng: 128.45170755523503},\n\n    {lat: 35.89580489690752, lng: 128.62238368221892}\n    \n]\n,\n[\n    {lat:  35.24731788471166,  lng: 128.86906207420088},\n   \n    {lat: 35.260354548127424,  lng:128.81198466603703}\n    \n]\n\n\n   \n    \n];\n\nconst markerPosition=[\n    {lat: 35.89580489690752, lng: 128.62238368221892},{lat:35.249701087314094, lng:128.860908159053}\n]\n\nconst options = {\n  strokeColor: '#FF0000',\n  strokeOpacity: 0.8,\n  strokeWeight: 2,\n  fillColor: '#FF0000',\n  fillOpacity: 0.35,\n  clickable: false,\n  draggable: false,\n  editable: false,\n  visible: true,\n  radius: 30000,\n  //-27부터 호주 시작해서 점찍고 점찍고 한다\n  paths: [\n    \n        \n            {lat:  35.969997373905, lng: 128.45170755523503},\n        \n            {lat: 35.89580489690752, lng: 128.62238368221892}\n            \n        \n        ,\n        \n            {lat:  35.24731788471166,  lng: 128.86906207420088},\n           \n            {lat: 35.260354548127424,  lng:128.81198466603703}\n            \n        \n      \n  \n    \n  ],\n  zIndex: 1\n};\nfunction createKey(location) {\n    return location.lat + location.lng\n  }\n\n\nconst optionss = {\n    imagePath:\n      'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m', // so you must have m1.png, m2.png, m3.png, m4.png, m5.png and m6.png in that folder\n  }\n\n\nfunction polyline() {\n    const myLatLng = { lat: -25.363, lng: 131.044 };\n    // const map = new google.maps.Map(document.getElementById(\"map\"), {\n    //   zoom: 4,\n    //   center: myLatLng,\n    // });\n  \n    return (\n        <div>        \n              \n\n        <LoadScript\n        googleMapsApiKey=\"AIzaSyAYsO2CGL0YCjMoLk29eyitFC2PIJnJbYE\"\n        >\n            \n          <GoogleMap\n            id=\"marker-example\"\n            mapContainerStyle={mapContainerStyle}\n            zoom={10}\n            center={center}\n          >\n\n<MarkerClusterer options={optionss}>\n          {(clusterer) =>\n            markerPosition.map((p) => (\n              <Marker key={createKey(p)} position={p} clusterer={clusterer} />\n            ))\n          }\n        </MarkerClusterer>\n        {/* {path.map((p)=>{\n            \n        })} */}\n\n    \n        \n\n        \n       \n            \n          </GoogleMap>\n          </LoadScript>\n               {/* <div className=\"chart\">\n           {graphData && (\n             <RecordElevation graphData={graphData} setPosition={setPosition} />\n           )}\n           \n         </div> */}\n             {path.map((m)=>{\n            // <Polyline onLoad={onLoad}  options={options} path={m}></Polyline>\n            <BikeChart></BikeChart>\n        })}\n         </div>\n\n    )\n  }\n  \n  export default React.memo(polyline)"]},"metadata":{},"sourceType":"module"}