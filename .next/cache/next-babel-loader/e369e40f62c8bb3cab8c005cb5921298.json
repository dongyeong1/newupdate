{"ast":null,"code":"var _jsxFileName = \"/Users/dong/CapstonProject/component/SearchList.js\";\nvar __jsx = React.createElement;\nimport { Card } from 'antd';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button } from 'antd';\n\nfunction SearchList({\n  setInfoPosition,\n  setPropsId,\n  index,\n  list,\n  setStrokeWeight,\n  setTarget\n}) {\n  const {\n    searchMap\n  } = useSelector(state => state.map);\n  const strokeWeights = Array.from({\n    length: searchMap.length\n  }, () => 3);\n\n  function mouseOver(index) {\n    strokeWeights[index] = 10;\n    setStrokeWeight(strokeWeights);\n  }\n\n  function mouseOut(index) {\n    strokeWeights[index] = 3;\n    setStrokeWeight(strokeWeights);\n  }\n\n  const polylineClick = positionData => {\n    setInfoPosition({\n      lat: positionData.gps.coordinates[3][1],\n      lng: positionData.gps.coordinates[3][0]\n    });\n    setPropsId(positionData._id); // (positionData)\n\n    setTarget(true);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Card, {\n    style: {\n      borderRadius: 20,\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    onClick: () => polylineClick(list),\n    onMouseOver: () => mouseOver(index),\n    onMouseOut: () => mouseOut(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, list.trackName)));\n}\n\nexport default SearchList;","map":{"version":3,"sources":["/Users/dong/CapstonProject/component/SearchList.js"],"names":["Card","React","useSelector","Button","SearchList","setInfoPosition","setPropsId","index","list","setStrokeWeight","setTarget","searchMap","state","map","strokeWeights","Array","from","length","mouseOver","mouseOut","polylineClick","positionData","lat","gps","coordinates","lng","_id","borderRadius","marginTop","trackName"],"mappings":";;AAAA,SAASA,IAAT,QAAqB,MAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAAQC,MAAR,QAAqB,MAArB;;AAEA,SAASC,UAAT,CAAoB;AAACC,EAAAA,eAAD;AAAiBC,EAAAA,UAAjB;AAA4BC,EAAAA,KAA5B;AAAkCC,EAAAA,IAAlC;AAAuCC,EAAAA,eAAvC;AAAuDC,EAAAA;AAAvD,CAApB,EAAuF;AAEnF,QAAM;AAACC,IAAAA;AAAD,MAAYT,WAAW,CAAEU,KAAD,IAASA,KAAK,CAACC,GAAhB,CAA7B;AAEA,QAAMC,aAAa,GAAEC,KAAK,CAACC,IAAN,CAAW;AAACC,IAAAA,MAAM,EAAEN,SAAS,CAACM;AAAnB,GAAX,EAAuC,MAAM,CAA7C,CAArB;;AAEA,WAASC,SAAT,CAAmBX,KAAnB,EAAyB;AACrBO,IAAAA,aAAa,CAACP,KAAD,CAAb,GAAqB,EAArB;AACAE,IAAAA,eAAe,CAACK,aAAD,CAAf;AACH;;AAED,WAASK,QAAT,CAAkBZ,KAAlB,EAAwB;AACpBO,IAAAA,aAAa,CAACP,KAAD,CAAb,GAAqB,CAArB;AACAE,IAAAA,eAAe,CAACK,aAAD,CAAf;AAEH;;AAID,QAAMM,aAAa,GAAEC,YAAD,IAAgB;AAGhChB,IAAAA,eAAe,CAAC;AACZiB,MAAAA,GAAG,EAACD,YAAY,CAACE,GAAb,CAAiBC,WAAjB,CAA6B,CAA7B,EAAgC,CAAhC,CADQ;AAEZC,MAAAA,GAAG,EAACJ,YAAY,CAACE,GAAb,CAAiBC,WAAjB,CAA6B,CAA7B,EAAgC,CAAhC;AAFQ,KAAD,CAAf;AAIAlB,IAAAA,UAAU,CAACe,YAAY,CAACK,GAAd,CAAV,CAPgC,CAQhC;;AACAhB,IAAAA,SAAS,CAAC,IAAD,CAAT;AAEH,GAXD;;AAcF,SACE,4BAEA,MAAC,IAAD;AACA,IAAA,KAAK,EAAE;AAACiB,MAAAA,YAAY,EAAC,EAAd;AAAiBC,MAAAA,SAAS,EAAC;AAA3B,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAIR,aAAa,CAACZ,IAAD,CAAlC;AAA0C,IAAA,WAAW,EAAE,MAAIU,SAAS,CAACX,KAAD,CAApE;AAA6E,IAAA,UAAU,EAAE,MAAIY,QAAQ,CAACZ,KAAD,CAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgHC,IAAI,CAACqB,SAArH,CAHJ,CAFA,CADF;AAkBD;;AAED,eAAezB,UAAf","sourcesContent":["import { Card } from 'antd'\nimport React from 'react'\nimport { useSelector } from 'react-redux';\nimport {Button} from 'antd'\n\nfunction SearchList({setInfoPosition,setPropsId,index,list,setStrokeWeight,setTarget}) {\n    \n    const {searchMap}=useSelector((state)=>state.map)\n\n    const strokeWeights= Array.from({length: searchMap.length}, () => 3);\n\n    function mouseOver(index){\n        strokeWeights[index]=10\n        setStrokeWeight(strokeWeights)\n    }\n\n    function mouseOut(index){\n        strokeWeights[index]=3\n        setStrokeWeight(strokeWeights)\n\n    }\n\n\n\n    const polylineClick=(positionData)=>{\n     \n\n        setInfoPosition({\n            lat:positionData.gps.coordinates[3][1],\n            lng:positionData.gps.coordinates[3][0]\n        })\n        setPropsId(positionData._id)\n        // (positionData)\n        setTarget(true)\n        \n    }\n    \n   \n  return (\n    <>\n    \n    <Card\n    style={{borderRadius:20,marginTop:10}}\n    >\n        <Button onClick={()=>polylineClick(list)} onMouseOver={()=>mouseOver(index)} onMouseOut={()=>mouseOut(index)} >{list.trackName}</Button>\n\n        {/* <Card.Meta\n        \n        description={list.name}\n        >\n            \n        </Card.Meta> */}\n\n    </Card>\n    </>\n  )\n}\n\nexport default SearchList"]},"metadata":{},"sourceType":"module"}