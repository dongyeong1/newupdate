{"ast":null,"code":"var _jsxFileName = \"/Users/dong/CapstonProject/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { Menu, Button, Row, Col, Card } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LoginForm from '../component/LoginForm';\nimport UserProfile from '../component/UserProfile';\nimport UserBadge from '../component/userBadge';\nimport axios from 'axios';\nimport wrapper from '../store/configureStore';\nimport PostCard from '../component/PostCard';\nimport Guild from '../component/Guild'; // import AppLayout from '../component/AppLayout';\n\nimport MyNote from '../component/MyNote';\nimport PostForm from '../component/postForm';\nimport Badge from '../component/badge';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport SideBar from '../component/Layout/SideBar'; // import wrapper from '../store/configureStore'\n\nimport { END } from 'redux-saga';\nimport MyPurpose from '../component/myPurpose';\n\nfunction index() {\n  const {\n    searchMap\n  } = useSelector(state => state.map);\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  useEffect(() => {}, []); // useEffect(()=>{\n  //   function onScroll(){\n  //       if(window.scrollY+document.documentElement.clientHeight>document.documentElement.scrollHeight-300){\n  //           if(hasMorePosts && !loadPostsLoading){\n  //               dispatch({\n  //                   type:LOAD_POSTS_REQUEST\n  //               })\n  //              }\n  //       }\n  //   }\n  //   window.addEventListener('scroll',onScroll)\n  //   return()=>{\n  //   window.removeEventListener('scroll',onScroll)    \n  //   }\n  //   },[hasMorePosts,loadPostsLoading])\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    gutter: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    span: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    style: {\n      backgroundColor: 'gray'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }\n  }, mainPosts.map(post => __jsx(PostCard, {\n    post: post,\n    key: post.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 43\n    }\n  })))), __jsx(Col, {\n    span: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, __jsx(Guild, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), __jsx(MyNote, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }), __jsx(MyPurpose, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  //   const cookie = context.req ? context.req.headers.cookie : '';\n  // axios.defaults.headers.Cookie = '';\n  // if (context.req && cookie) {\n  //   axios.defaults.headers.Cookie = cookie;\n  // }\n  // context.store.dispatch({\n  //   type:LOAD_MY_INFO_REQUEST\n  // });\n  context.store.dispatch({\n    type: LOAD_POSTS_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default index;","map":{"version":3,"sources":["/Users/dong/CapstonProject/pages/index.js"],"names":["React","useEffect","Menu","Button","Row","Col","Card","useDispatch","useSelector","LoginForm","UserProfile","UserBadge","axios","wrapper","PostCard","Guild","MyNote","PostForm","Badge","LOAD_POSTS_REQUEST","SideBar","END","MyPurpose","index","searchMap","state","map","me","user","mainPosts","hasMorePosts","loadPostsLoading","post","dispatch","backgroundColor","id","getServerSideProps","context","store","type","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React ,{useEffect}from 'react'\nimport { Menu, Button,Row,Col,Card} from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LoginForm from '../component/LoginForm';\nimport UserProfile from '../component/UserProfile';\nimport UserBadge from '../component/userBadge';\nimport axios from 'axios'\n\nimport wrapper from '../store/configureStore';\nimport PostCard from '../component/PostCard';\nimport Guild from '../component/Guild';\n// import AppLayout from '../component/AppLayout';\nimport MyNote from '../component/MyNote';\nimport PostForm from '../component/postForm';\nimport Badge from '../component/badge';\nimport {LOAD_POSTS_REQUEST} from '../reducers/post'\nimport SideBar from '../component/Layout/SideBar';\n// import wrapper from '../store/configureStore'\nimport { END } from 'redux-saga';\nimport MyPurpose from '../component/myPurpose';\nfunction index() {\n    const {searchMap}=useSelector((state)=>state.map)\n    const {me} =useSelector((state)=>state.user)\n    const {mainPosts,hasMorePosts,loadPostsLoading}=useSelector((state)=>state.post)\n  const dispatch=useDispatch()\n\n  useEffect(()=>{\n \n  },[])\n\n  // useEffect(()=>{\n  //   function onScroll(){\n  //       if(window.scrollY+document.documentElement.clientHeight>document.documentElement.scrollHeight-300){\n  //           if(hasMorePosts && !loadPostsLoading){\n  //               dispatch({\n  //                   type:LOAD_POSTS_REQUEST\n  //               })\n  //              }\n  //       }\n  //   }\n  //   window.addEventListener('scroll',onScroll)\n  //   return()=>{\n  //   window.removeEventListener('scroll',onScroll)    \n  //   }\n  //   },[hasMorePosts,loadPostsLoading])\n\n\n  return (\n    <div > \n   \n    \n            <Row gutter={12} >\n               \n               \n                <Col  span={10} >\n                  <div style={{backgroundColor:'gray'}}> \n\n                  {mainPosts.map((post)=> <PostCard post={post} key={post.id}/> )}\n                  </div>\n               \n                </Col>\n                \n                    <Col span={14}>\n                    <Guild ></Guild>\n                    <MyNote></MyNote>\n                    <MyPurpose></MyPurpose>\n                    </Col>\n\n            </Row>\n            \n    </div>\n  )\n}\n\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n  //   const cookie = context.req ? context.req.headers.cookie : '';\n  // axios.defaults.headers.Cookie = '';\n  // if (context.req && cookie) {\n  //   axios.defaults.headers.Cookie = cookie;\n  // }\n  // context.store.dispatch({\n  //   type:LOAD_MY_INFO_REQUEST\n  // });\n  context.store.dispatch({\n      type:LOAD_POSTS_REQUEST\n  })\n  context.store.dispatch(END)\n  await context.store.sagaTask.toPromise()\n})\n\nexport default index;\n"]},"metadata":{},"sourceType":"module"}